{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/snippet/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/snippet/source/assets/highlight.pack.js","path":"assets/highlight.pack.js","modified":0,"renderable":1},{"_id":"themes/snippet/source/assets/tagcanvas.min.js","path":"assets/tagcanvas.min.js","modified":0,"renderable":1},{"_id":"themes/snippet/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/snippet/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/branding.png","path":"img/branding.png","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/avatar.jpg","path":"img/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/head-img.jpg","path":"img/head-img.jpg","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/timeline-clock.gif","path":"img/timeline-clock.gif","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/reward-wepay.jpg","path":"img/reward-wepay.jpg","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/timeline-dot.gif","path":"img/timeline-dot.gif","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/timeline.gif","path":"img/timeline.gif","modified":0,"renderable":1},{"_id":"themes/snippet/source/js/app.js","path":"js/app.js","modified":0,"renderable":1},{"_id":"themes/snippet/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/snippet/source/assets/valine.min.js","path":"assets/valine.min.js","modified":0,"renderable":1},{"_id":"themes/snippet/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.woff","path":"fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.woff2","path":"fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/snippet/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/FontAwesome.otf","path":"fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.eot","path":"fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.ttf","path":"fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.svg","path":"fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/snippet/.gitignore","hash":"966980bf3a75dbcdc09b08664e6084139799b498","modified":1548044122643},{"_id":"themes/snippet/.travis.yml","hash":"5b308871041500cb11d5cce56b71e5c297e29a7b","modified":1548044122643},{"_id":"themes/snippet/LICENSE","hash":"c720db99e36a717d9808bf97b736612462e883dd","modified":1548044122643},{"_id":"themes/snippet/README.md","hash":"0d7c1c1aa8298820aec9cb751fa8f14c385f5917","modified":1548044122643},{"_id":"themes/snippet/_config.yml","hash":"be3c81c7eb2724dbf380bf7ec18de2ce66deff6e","modified":1548044122644},{"_id":"themes/snippet/_travis.sh","hash":"2ad37ebb33683f71b605997edbc408c70de230c3","modified":1548044122644},{"_id":"themes/snippet/gulpfile.js","hash":"0363063793019b509b283415a97e4eef4836602d","modified":1548044122644},{"_id":"themes/snippet/package.json","hash":"09d41ac2b430a76276d1878e2488d9cd0b22b21e","modified":1548044122657},{"_id":"source/_posts/Serverless-services.md","hash":"b560eff353b83028d64c0763627ae0ddbde79613","modified":1548044122608},{"_id":"source/_posts/angular-notice.md","hash":"ca9a1acfe4955d1ebcb6c7e47708f4a6e5cca29d","modified":1553580177677},{"_id":"source/_posts/angular-errer.md","hash":"e6048de7a00b0e1ecf4e86c613a5ac1bc0871236","modified":1553580489912},{"_id":"source/_posts/font-end-dev-system-config.md","hash":"e688c676dd040b1a8fcb830195275efb04f7bf33","modified":1548044122608},{"_id":"source/_posts/angular-pipe.md","hash":"e9f616846c1f86adb2ceda0de1452b6f3ec003fc","modified":1553580210146},{"_id":"source/_posts/font-end-good-website.md","hash":"2acd8d0fa2e35da9aa65d9fbc0ba078e40fb196a","modified":1553580349974},{"_id":"source/_posts/git-error.md","hash":"53bcfbf3b568e5138ac3a432c6bb6283d88f75cb","modified":1553580361762},{"_id":"source/_posts/font-end-text.md","hash":"45700074e1001b19a1eddc99a672c4f67a282cc1","modified":1548044122608},{"_id":"source/_posts/git.md","hash":"c8e253e695d7662beb199c88f717445b824b768a","modified":1553580413621},{"_id":"source/_posts/egret-primary.md","hash":"2225a9b052a2489978c9ee502e7c78ec5e1b6b33","modified":1553580287160},{"_id":"source/_posts/js-design-model.md","hash":"a54109b35d950d25c8d9817f6eea2df6761e961b","modified":1548044122609},{"_id":"source/_posts/node-nvm.md","hash":"8139091c003ec813b2a0d1c807193dfdd9b3e770","modified":1548044122610},{"_id":"source/_posts/scss.md","hash":"afd9ad18f393306b0a2dab4e072f674071d51062","modified":1548044122610},{"_id":"source/_posts/windows-cmd.md","hash":"8ff51bbb5b37076bf53cd951febbd5ae90ac92b5","modified":1548044122610},{"_id":"source/_posts/hello-world.md","hash":"ef44e26e55ba08eb9369582fb4e12f23b35e3c04","modified":1553580438889},{"_id":"source/_posts/vue-notice.md","hash":"ef54560dcfecbc807bee1f2983e3bf6bdfd9244f","modified":1548044122610},{"_id":"source/categories/index.md","hash":"428685d1fe0f89f2b0ab252d00c125c54656b70c","modified":1548044122610},{"_id":"themes/snippet/.github/ISSUE_TEMPLATE.md","hash":"e90f313849ccea4f9fe86f7d3611dfaa6a7d3e8b","modified":1548044122642},{"_id":"themes/snippet/scripts/helper.js","hash":"836d369cf95ac51de957e09d396e6a8be1e84cf6","modified":1548044122657},{"_id":"themes/snippet/scripts/process.js","hash":"c2f0571899a6dd38bd944aaf47e21fc650f7d52e","modified":1548044122657},{"_id":"themes/snippet/languages/zh-CN.yml","hash":"4ebacd2028454a5b9642a22c19d3e8c3078b3a0a","modified":1548044122645},{"_id":"themes/snippet/languages/default.yml","hash":"358313b8a4a48bd32c7d58fc9ef3a4ebe395bf8d","modified":1548044122644},{"_id":"themes/snippet/languages/ja.yml","hash":"fcafdb03d5e000c225a664d65f38a75c7efdef03","modified":1548044122645},{"_id":"themes/snippet/languages/zh-TW.yml","hash":"a0bd8ba3e9ad19116e072983cfefd1aabe39d2cd","modified":1548044122645},{"_id":"themes/snippet/layout/archive.ejs","hash":"bbd99d08132f9ca87e5b17cf642384dc1673f579","modified":1548044122655},{"_id":"themes/snippet/layout/layout.ejs","hash":"c986efe07c070e0870b89181cc47010b118e2d04","modified":1548044122656},{"_id":"themes/snippet/layout/index.ejs","hash":"4b17eb2082d177b0cb85f04afadcc604f4073d30","modified":1548044122656},{"_id":"themes/snippet/layout/category.ejs","hash":"ebd05ceb75be73e84ddf085ccfdb24c07162d0fa","modified":1548044122656},{"_id":"themes/snippet/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1548044122656},{"_id":"themes/snippet/layout/post.ejs","hash":"d0aa6f0fda520815307d2adc2aacaf5314919d8f","modified":1548044122656},{"_id":"themes/snippet/layout/tag.ejs","hash":"9b42656e75c58e7145e52408b51f017f6b6d9464","modified":1548044122657},{"_id":"themes/snippet/source/favicon.ico","hash":"65f26147ea3433ffd64d3f18bf281af48dc5d06e","modified":1548044122664},{"_id":"themes/snippet/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5552f774116fc17f3ff42f846da1d6f96e304ac3","modified":1548044122642},{"_id":"themes/snippet/.github/ISSUE_TEMPLATE/feature_request.md","hash":"ca7ec6dc303459058d3117f33878beec538d3023","modified":1548044122642},{"_id":"themes/snippet/layout/_partial/archive.ejs","hash":"480e2327f42ebfba3e2954697713d68cdeac7045","modified":1548044122647},{"_id":"themes/snippet/layout/_partial/article.ejs","hash":"ecc6775b64c4b87a62fae4f8a2545105e40e7dfe","modified":1548044122647},{"_id":"themes/snippet/layout/_partial/article-meta.ejs","hash":"8cfd02715ec3559550131a20c58ff6cc2fa3d260","modified":1548044122647},{"_id":"themes/snippet/layout/_partial/busuanzi.ejs","hash":"2c26222dc1c8da66135241fdc84d16ba66ae285c","modified":1548044122647},{"_id":"themes/snippet/layout/_partial/copyright.ejs","hash":"4c8903c3554aa50259a7581f1a9b7ffca9b91a97","modified":1548044122648},{"_id":"themes/snippet/layout/_partial/footer.ejs","hash":"4a5b6fa1520442ac4edc2ec3d575a676b6717854","modified":1548044122648},{"_id":"themes/snippet/layout/_partial/gallery.ejs","hash":"1b6b7859f395e10a3ecaa900de2d1312dc140def","modified":1548044122648},{"_id":"themes/snippet/layout/_partial/header.ejs","hash":"b08447c9201c196d132691f1a16c152e82cdcef4","modified":1548044122649},{"_id":"themes/snippet/layout/_partial/head.ejs","hash":"1aea0e44f11d9f6f3e78f0da7dba0f35b910e6c3","modified":1548044122648},{"_id":"themes/snippet/layout/_partial/nav.ejs","hash":"7fa65a2162a748f049fb910b5b0e46a5bcf57b3b","modified":1548044122649},{"_id":"themes/snippet/layout/_partial/pagination.ejs","hash":"2ec88a22fd29e7cc97ca2a508eee7d168e338969","modified":1548044122649},{"_id":"themes/snippet/layout/_partial/reward.ejs","hash":"0ebe5a9180f9ee36dcfff55f8f4622f8096c476c","modified":1548044122649},{"_id":"themes/snippet/layout/_partial/script.ejs","hash":"0ecdc42c6c1c2474d9e306de39323f089dddf7af","modified":1548044122650},{"_id":"themes/snippet/layout/_partial/sidebar.ejs","hash":"381b7af719c1ab3a94280309926c1205ce7b93a5","modified":1548044122650},{"_id":"themes/snippet/layout/_widget/archive.ejs","hash":"ea6596d993ed1b74bd03eee06ab480931b8c2d9e","modified":1548044122654},{"_id":"themes/snippet/layout/_widget/category.ejs","hash":"1c6881cd5b6b034ddecda6c85a3337d17a03e9ff","modified":1548044122654},{"_id":"themes/snippet/layout/_widget/notification.ejs","hash":"78eca9de4eec7c638c7b16863fb90e7182f7d80b","modified":1548044122654},{"_id":"themes/snippet/layout/_partial/toc.ejs","hash":"7d86def87d0e7b7ab15400a23b0796f0da430e60","modified":1548044122650},{"_id":"themes/snippet/layout/_widget/friends.ejs","hash":"43b0404d608db1a237b3cf17ec8df7b2d24f9533","modified":1548044122654},{"_id":"themes/snippet/layout/_widget/search.ejs","hash":"dfbf723051f71099502c58a237bc484cebd5157d","modified":1548044122655},{"_id":"themes/snippet/layout/_widget/social.ejs","hash":"f97313cdc1b495f7602e023b2ade5630acc4b667","modified":1548044122655},{"_id":"themes/snippet/layout/_widget/tagcloud.ejs","hash":"21746717296515c5b45a8fd5ef302ef8a9470bb2","modified":1548044122655},{"_id":"themes/snippet/layout/_vendor/baidu_sitemap.ejs","hash":"dabeccfd4860dac2f6b883616f616c4c55fb22ba","modified":1548044122652},{"_id":"themes/snippet/source/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1548044122658},{"_id":"themes/snippet/source/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1548044122659},{"_id":"themes/snippet/source/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1548044122661},{"_id":"themes/snippet/source/css/style.css","hash":"2edc5ac5eb44118c44f7e29c4dbbbd0c5c84d113","modified":1548044122664},{"_id":"themes/snippet/source/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1548044122674},{"_id":"themes/snippet/source/img/avatar.jpg","hash":"512025710a8c6c938ab636fcb3c9da1c8df0eec0","modified":1548044122674},{"_id":"themes/snippet/source/img/head-img.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1548044122675},{"_id":"themes/snippet/source/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1548044122676},{"_id":"themes/snippet/source/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1548044122676},{"_id":"themes/snippet/source/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1548044122676},{"_id":"themes/snippet/source/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1548044122676},{"_id":"themes/snippet/source/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1548044122677},{"_id":"themes/snippet/source/js/search.js","hash":"a6c7ac73821e5c7db7d4ae6de2d00f44367a858e","modified":1548044122677},{"_id":"themes/snippet/source/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1548044122659},{"_id":"themes/snippet/source/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1548044122661},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1548044122672},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1548044122673},{"_id":"themes/snippet/source/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1548044122675},{"_id":"themes/snippet/layout/_partial/_head-sections/IE.ejs","hash":"567494a97ba2db7bb452294a9980b4d63b399ef0","modified":1548044122646},{"_id":"themes/snippet/layout/_partial/_head-sections/title.ejs","hash":"1482f56c44221cbc0d28ba06e377f4b55cdaacc2","modified":1548044122646},{"_id":"themes/snippet/layout/_partial/_head-sections/style.ejs","hash":"ece8b1bb0f550ddb0e7ac179de54a8e5f06f49aa","modified":1548044122646},{"_id":"themes/snippet/layout/_partial/_head-sections/seo.ejs","hash":"f80ec948f4f23763a1bf9b71efef6d6ebc6fc5d5","modified":1548044122646},{"_id":"themes/snippet/layout/_vendor/analytics/cnzz.ejs","hash":"8bfc514b178fafd81cc8181880afc5c9cbee02dc","modified":1548044122651},{"_id":"themes/snippet/layout/_vendor/analytics/baidu.ejs","hash":"eb4a75fb5ba9237d93430e727165d98ccda75a02","modified":1548044122651},{"_id":"themes/snippet/layout/_vendor/analytics/google.ejs","hash":"91844d4521f97517ea9f169ee85b18c9d0d8cf17","modified":1548044122651},{"_id":"themes/snippet/layout/_vendor/analytics/index.ejs","hash":"6315abe9c31f4c4de719fa3cbfa2b1c6f294b0de","modified":1548044122651},{"_id":"themes/snippet/layout/_vendor/analytics/tencent.ejs","hash":"10b91084cda9067d037a5f31e48d4edcbaa0c751","modified":1548044122652},{"_id":"themes/snippet/layout/_vendor/comments/changyan.ejs","hash":"202c94162ac2eeb0c93c8d2667c82b8705de6390","modified":1548044122652},{"_id":"themes/snippet/layout/_vendor/comments/disqus.ejs","hash":"7b5e05154be0408be110893439bfa33e262245de","modified":1548044122652},{"_id":"themes/snippet/layout/_vendor/comments/gitment.ejs","hash":"be5c261ae8a769747704a228aa35758120b814e1","modified":1548044122653},{"_id":"themes/snippet/layout/_vendor/comments/index.ejs","hash":"26b2e774f427efce66253d284d26718c8e555bc0","modified":1548044122653},{"_id":"themes/snippet/layout/_vendor/comments/livere.ejs","hash":"6333308ba24ae6f2a3e73f4cdc1b42e024d19910","modified":1548044122653},{"_id":"themes/snippet/layout/_vendor/comments/uyan.ejs","hash":"2c2abe17f4f5c5ba1a9aaa948ef0a88d99f653f8","modified":1548044122653},{"_id":"themes/snippet/layout/_vendor/comments/valine.ejs","hash":"d339116cf24e76e7bc9f28e8a0a7c844ede2e506","modified":1548044122653},{"_id":"themes/snippet/source/css/less/_highlight.less","hash":"c799cfa32c323c33a09569d326786874026fd1ef","modified":1548044122662},{"_id":"themes/snippet/source/css/less/_mixins.less","hash":"e89dc55772b5ae6bfd4cac3b5c32bf9ce73ac805","modified":1548044122662},{"_id":"themes/snippet/source/css/less/_timeline.less","hash":"0bb3cef8b58621455d023c30d81fae204200d3bb","modified":1548044122663},{"_id":"themes/snippet/source/css/less/_reward.less","hash":"100caed190893351a1ca7ed8e72bad57695d5f19","modified":1548044122662},{"_id":"themes/snippet/source/css/less/_scrollbar.less","hash":"596ee6ada077f94a05d7c0168dddb20be16b85da","modified":1548044122662},{"_id":"themes/snippet/source/css/less/_style.less","hash":"4fb1fe15294954fd42c970e7333e418e72fcef96","modified":1548044122663},{"_id":"themes/snippet/source/css/less/_variable.less","hash":"1d81728d61de486a7a746beb19275b2b4b65e304","modified":1548044122664},{"_id":"themes/snippet/source/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1548044122667},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1548044122669},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1548044122672},{"_id":"themes/snippet/source/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1548044122671},{"_id":"public/atom.xml","hash":"9da5f5c97bb3846d4e1205b0393e915a92f409d3","modified":1553580490556},{"_id":"public/content.json","hash":"6584c7d1111bcd599e6d047b37180462c58a0a97","modified":1553580490557},{"_id":"public/sitemap.xml","hash":"4e94fbd6519eb6b73ad3f5618aa50a1c33944507","modified":1553580491348},{"_id":"public/categories/index.html","hash":"f763a3cb5beafd1e7245fd93d087d34130c590ae","modified":1553580491386},{"_id":"public/2019/01/22/angular-errer/index.html","hash":"643e4908d81e40b080cf7cca27372e4b12efde07","modified":1553580491386},{"_id":"public/2019/01/13/js-design-model/index.html","hash":"2f39c5826ac3c28107edf5436dff21afcb6dc02a","modified":1553580491387},{"_id":"public/2019/01/07/font-end-dev-system-config/index.html","hash":"830e243956ee04d9480d26b5e4b8736381cdb82c","modified":1553580491387},{"_id":"public/2019/01/07/vue-notice/index.html","hash":"23ae12b582fa78828852706456c7399e91c0b9f4","modified":1553580491387},{"_id":"public/2019/01/07/angular-notice/index.html","hash":"2c105006bf2d4cef925122548ce9711401574e1e","modified":1553580491387},{"_id":"public/2019/01/07/font-end-text/index.html","hash":"a6e3b10833da44d5ebbfc0cb0ee61d17630f703d","modified":1553580491387},{"_id":"public/2019/01/07/egret-primary/index.html","hash":"ab0107771f0f349748b6c05dafbd835f5dd7218d","modified":1553580491387},{"_id":"public/2019/01/04/font-end-good-website/index.html","hash":"fdf1a0c29574d9f4f3cd273f6195397b21d002eb","modified":1553580491387},{"_id":"public/2018/12/31/git-error/index.html","hash":"8925311081476ead73bf2d0e427922f5278a4d88","modified":1553580491387},{"_id":"public/2018/12/31/windows-cmd/index.html","hash":"cb7ab6ace13a1af3595c283a20816d936d142d54","modified":1553580491387},{"_id":"public/2018/12/27/Serverless-services/index.html","hash":"8447443db6c36e7204a8381d891bd040a2d60eba","modified":1553580491387},{"_id":"public/2018/12/27/node-nvm/index.html","hash":"f78f4f3d0556bd888ee4a8271e4112bf8b22278d","modified":1553580491387},{"_id":"public/2018/12/27/hello-world/index.html","hash":"9374b2daa48a1e5145a832a1e34d135e4da93cf0","modified":1553580491387},{"_id":"public/2018/12/25/git/index.html","hash":"ccd052fdc1819ae3035035647c76ceb236bcb8ab","modified":1553580491388},{"_id":"public/categories/angular/index.html","hash":"1662c0cf65d5ac2961a5b409ead5818eef84ac2e","modified":1553580491388},{"_id":"public/categories/前端/angular/index.html","hash":"382ebb619c29f39dd557440a6b91cd17d22fae33","modified":1553580491388},{"_id":"public/categories/前端/angular7/index.html","hash":"eaacc851f0ef487e8c76cefa8b89c0bc1ca53d98","modified":1553580491388},{"_id":"public/categories/git/index.html","hash":"5e14fff9d1c18856c87b5ee1aa9c9bcd76c8333c","modified":1553580491388},{"_id":"public/categories/angular/分类2/index.html","hash":"22dcf3036cad35c0ce6f2ddfcc7aee75d4c2e49c","modified":1553580491388},{"_id":"public/categories/工具/index.html","hash":"9ab8fc8b334e7c73f46e895a01995c75fa0efdec","modified":1553580491388},{"_id":"public/categories/Egret/index.html","hash":"013883b4d6e27427b8e9287bbd7b7e0e993481f0","modified":1553580491388},{"_id":"public/categories/前端/工具/index.html","hash":"0f708c5fecaecc9d88eec12374d5737af004eb5c","modified":1553580491388},{"_id":"public/categories/前端/分类2/index.html","hash":"e092a33e7a0ff155086482679115a254acaf7cb5","modified":1553580491388},{"_id":"public/categories/git/工具/index.html","hash":"25fc978ef955c23767b9328e018fb2ac2d84bf05","modified":1553580491388},{"_id":"public/categories/工具/前端/index.html","hash":"e6b0e10023dc6826e084a2771d3689685fb5ec14","modified":1553580491388},{"_id":"public/categories/Egret/分类2/index.html","hash":"4e3d494b830fd98179cfb280c1213136aee01bea","modified":1553580491389},{"_id":"public/categories/windows/index.html","hash":"9bd605425308b915869f8221d44d00c3a4ff5715","modified":1553580491389},{"_id":"public/categories/windows/工具/index.html","hash":"16e9a055d26e02bd9cf67625b2e21ce69216e5b7","modified":1553580491389},{"_id":"public/tags/angular/index.html","hash":"16df660eddc903b2710b79939bf7108a81ac3d1f","modified":1553580491389},{"_id":"public/tags/git/index.html","hash":"46dafe485a1cc04a3c35a526409f618ac643cb42","modified":1553580491389},{"_id":"public/tags/工具/index.html","hash":"e136be2ffdf5fa58a317d70720b285f74ac5dc8c","modified":1553580491389},{"_id":"public/tags/node/index.html","hash":"c1c9647226392479d5d5baea88a110495e3d2b73","modified":1553580491389},{"_id":"public/tags/css/index.html","hash":"28846bb8bce9135f3c8a69e35ed0bd4494b7411c","modified":1553580491389},{"_id":"public/tags/javaScript/index.html","hash":"0d71396a42f4a453ced4d341792ae133af82de8f","modified":1553580491389},{"_id":"public/tags/命令行/index.html","hash":"a217d2270c03a6578d41db51534f20b68282b525","modified":1553580491389},{"_id":"public/tags/hexo/index.html","hash":"c8c3c2ea8c3252cb27c7dbd4af5fcaed3d2fdc0a","modified":1553580491390},{"_id":"public/2019/01/10/scss/index.html","hash":"78b22ff741fb1735af1307d93325581c36c4e995","modified":1553580491390},{"_id":"public/2019/01/10/angular-pipe/index.html","hash":"8446fec349f93f338d3000f444c7c938fd3c6eaa","modified":1553580491390},{"_id":"public/archives/index.html","hash":"d8a180785548327a1fe495e871096339f54573d7","modified":1553580491390},{"_id":"public/archives/page/2/index.html","hash":"d8a180785548327a1fe495e871096339f54573d7","modified":1553580491390},{"_id":"public/archives/2018/index.html","hash":"46c2f2e3a8fdfd6e1966a205e7887299dc91f76a","modified":1553580491390},{"_id":"public/archives/2018/12/index.html","hash":"10f9456621d14e863ef0d70fc1fdced2ed774cc9","modified":1553580491390},{"_id":"public/archives/2019/index.html","hash":"b3b8e3ec12c36e542c962cf8beba191e5d1cbf5d","modified":1553580491390},{"_id":"public/archives/2019/01/index.html","hash":"31243fe4386cd77288ab836228dad75e8e11ed49","modified":1553580491390},{"_id":"public/categories/前端/index.html","hash":"e7c3eecc4821437be82815c3fbde1348244234d4","modified":1553580491391},{"_id":"public/categories/分类1/index.html","hash":"0c492c5c7d69753f8ddb9594b5cb7fb73f1eb89c","modified":1553580491391},{"_id":"public/categories/分类1/分类2/index.html","hash":"cead4963d1d725f73f577a651508a891964f0c24","modified":1553580491391},{"_id":"public/index.html","hash":"576b2e0eea026f4093fb8849656fc1abae75b5fc","modified":1553580491391},{"_id":"public/page/2/index.html","hash":"86fe987e58eee88e0d026ddc21dc345e214eb53b","modified":1553580491391},{"_id":"public/tags/前端/index.html","hash":"2fe1aa44f78937605949429e3ab10e87ad38f482","modified":1553580491391},{"_id":"public/tags/标签2/index.html","hash":"6a693871f45813d79ae600f5871fcdcff31aa71f","modified":1553580491391},{"_id":"public/tags/标签1/index.html","hash":"a2d8fd2a8abe941d4d363614bdcccee18217ab7c","modified":1553580491391},{"_id":"public/favicon.ico","hash":"65f26147ea3433ffd64d3f18bf281af48dc5d06e","modified":1553580491396},{"_id":"public/img/branding.png","hash":"18bee49d6a4c521ad230047c0b416245e009c2c9","modified":1553580491397},{"_id":"public/img/avatar.jpg","hash":"512025710a8c6c938ab636fcb3c9da1c8df0eec0","modified":1553580491397},{"_id":"public/img/timeline-clock.gif","hash":"2bec1bf5efd948ab2e5942b6da8164faa41b62b2","modified":1553580491397},{"_id":"public/img/head-img.jpg","hash":"a318d304665c2f410f79e6d2eb1b98119f675b4b","modified":1553580491397},{"_id":"public/img/reward-wepay.jpg","hash":"2a56391f2b6282b49e724b72bf610b0dabf53742","modified":1553580491397},{"_id":"public/img/timeline-dot.gif","hash":"c85ef87be5b631c009e7c5737d33b61dfe580a4d","modified":1553580491397},{"_id":"public/img/timeline.gif","hash":"b7c7aac44e618df19626d882dc46db48a4aa3673","modified":1553580491397},{"_id":"public/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1553580491402},{"_id":"public/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1553580491404},{"_id":"public/img/loading.gif","hash":"6cea4dc953ac09fb744c7fedc12a1f4736faf8ec","modified":1553580491405},{"_id":"public/assets/highlight.pack.js","hash":"f39840759ec9afe56ec1ca30579d1f1c9d1f6026","modified":1553580491410},{"_id":"public/js/app.js","hash":"eca509fc5b45dcd1a0007c62f740529ca31a122f","modified":1553580491410},{"_id":"public/js/search.js","hash":"a6c7ac73821e5c7db7d4ae6de2d00f44367a858e","modified":1553580491411},{"_id":"public/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1553580491411},{"_id":"public/assets/tagcanvas.min.js","hash":"a14280f4e924428ac0cdbac7635a7279cab1b6bf","modified":1553580491411},{"_id":"public/css/style.css","hash":"2edc5ac5eb44118c44f7e29c4dbbbd0c5c84d113","modified":1553580491411},{"_id":"public/assets/valine.min.js","hash":"d9d4a8f81f288b77b3d0a3866d004e2b5eb30038","modified":1553580491412},{"_id":"public/css/bootstrap.min.css","hash":"6527d8bf3e1e9368bab8c7b60f56bc01fa3afd68","modified":1553580491412},{"_id":"public/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1553580491412},{"_id":"public/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1553580491413},{"_id":"public/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1553580491413},{"_id":"public/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1553580491424}],"Category":[{"name":"前端","_id":"cjtpdplvg00023yxyiy80wg5b"},{"name":"angular","_id":"cjtpdplvu000b3yxyzmlt8osk"},{"name":"分类1","_id":"cjtpdplw0000h3yxywgksosoc"},{"name":"angular","parent":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplw4000m3yxykqbr6xfz"},{"name":"angular7","parent":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplw9000u3yxye9b9dszr"},{"name":"git","_id":"cjtpdplwa000z3yxyhxxiysmw"},{"name":"分类2","parent":"cjtpdplvu000b3yxyzmlt8osk","_id":"cjtpdplwd00183yxyplm6prr0"},{"name":"工具","_id":"cjtpdplwe001c3yxyk8c0inic"},{"name":"Egret","_id":"cjtpdplwe001f3yxyk7g8xcl4"},{"name":"分类2","parent":"cjtpdplw0000h3yxywgksosoc","_id":"cjtpdplwg001k3yxy53wyrm20"},{"name":"工具","parent":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwh001n3yxy7gl9jeqr"},{"name":"分类2","parent":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwj001s3yxyoyih7vu6"},{"name":"工具","parent":"cjtpdplwa000z3yxyhxxiysmw","_id":"cjtpdplwn00273yxy2kw1m3pk"},{"name":"前端","parent":"cjtpdplwe001c3yxyk8c0inic","_id":"cjtpdplwq002i3yxy8wi77j1q"},{"name":"分类2","parent":"cjtpdplwe001f3yxyk7g8xcl4","_id":"cjtpdplwr002o3yxy5l2juepx"},{"name":"windows","_id":"cjtpdplx2002x3yxynsysh5fe"},{"name":"工具","parent":"cjtpdplx2002x3yxynsysh5fe","_id":"cjtpdplx600343yxyy5r89vmr"},{"name":"后端","_id":"cjtpdtwe9000052xycog6p1j0"}],"Data":[],"Page":[{"title":"categories","date":"2018-12-24T18:11:05.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-12-25 02:11:05\n---\n","updated":"2019-01-21T04:15:22.610Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjtpdplwz002v3yxyjuo9621k","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Serverless services -- 无服务器服务","comments":0,"abbrlink":60926,"date":"2018-12-26T18:15:54.000Z","img":null,"_content":"\n> Serverless被翻译为“无服务器架构”，这个概念在2012年时便已经存在，比微服务和Service Mesh的概念出现都要早，但是直到微服务概念大红大紫之后，Serverless才重新又被人们所关注。\n\n> Serverless（无服务器架构）并不意味着没有任何服务器去运行代码，Serverless是无需管理服务器，只需要关注代码，而提供者将处理其余部分工作。“无服务器架构”也可以指部分服务器端逻辑依然由应用程序开发者来编写的应用程序，但与传统架构的不同之处在于，这些逻辑运行在完全由第三方管理，由事件触发的无状态（Stateless）暂存于计算容器内。\n\n对于开发者来说，Serverless架构可以将其服务器端应用程序分解成多个执行不同任务的函数，整个应用分为几个独立、松散耦合的组件，这些组件可以在任何规模上运行。\n\n### Serverless架构优势\n\n**缩短交付时间：** Serverless架构允许开发人员在极短时间内（几小时、几天）交付新的应用程序，而不是像以前一样需要几个星期或几个月。在新的应用程序中，依赖于第三方API提供服务的例子很多，如认证(OAuth)、社交、地图、人工智能等。\n\n**增强可伸缩性：**所有人都希望自己开发的应用能够快速获取大量的新增用户，但是当活跃用户快速增长的时候，服务器的压力也会激增。使用Serverless架构的体系不再有上述担忧，可以及时、灵活进行扩展来应对快速增长的活跃用户带来的访问压力。\n\n**降低成本：** Serverless架构模式可以降低计算能力和人力资源方面的成本，如果不需要服务器，就不用花费时间重新造轮子、风险监测、图像处理，以及基础设施管理，操作成本会直线下降。\n\n**改善用户体验：** 用户通常不太关心基础设施，而更注重于功能和用户体验。Serverless架构允许团队将资源集中在用户体验上。\n\n**减少延迟及优化地理位置信息：**应用规模能力取决于三个方面：用户数量、所在位置及网络延迟。当应用要面向全国甚至全球用户的时候，通常会产生较高的延迟，从而降低用户体验。在Serverless架构下，供应商在每个用户附近都有节点，大幅度降低了访问延迟，因此所有用户的体验都可以得到提升。\n\n\n> 在微服务与容器技术火热之后，Serverless（无服务器架构）成为新的热点，无服务器云函数可以让用户无需关心服务器的部署运营，只需开发最核心的业务逻辑，即可实现上线运营，具备分布容灾能力，可以依据负载自动扩缩容，并按照实际调用次数与时长计费。\n\n使用Serverless架构可以免除所有运维性操作，开发人员可以更加专注于核心业务的开发，实现快速上线和迭代，把握业务发展的节奏。Serverless架构可以认为是对微服务和容器化的一种补充，为用户提供了一种新的选择，来应对复杂多变的需求，尤其适合快速发展的初创型公司。\n\n\n\n* 国外:  firebase\n* 国内:  阿里百川  友盟\n\n\n文章\n[Angular && Serverless](https://blog.csdn.net/m0_37529303/article/details/80878654) \n\n[Google FireBase的简单介绍和使用](https://www.jianshu.com/p/eeb760c63a53)","source":"_posts/Serverless-services.md","raw":"---\ntitle: Serverless services -- 无服务器服务\ncategories:\n  - 后端\ncomments: false\nabbrlink: 60926\ndate: 2018-12-27 02:15:54\nimg:\n---\n\n> Serverless被翻译为“无服务器架构”，这个概念在2012年时便已经存在，比微服务和Service Mesh的概念出现都要早，但是直到微服务概念大红大紫之后，Serverless才重新又被人们所关注。\n\n> Serverless（无服务器架构）并不意味着没有任何服务器去运行代码，Serverless是无需管理服务器，只需要关注代码，而提供者将处理其余部分工作。“无服务器架构”也可以指部分服务器端逻辑依然由应用程序开发者来编写的应用程序，但与传统架构的不同之处在于，这些逻辑运行在完全由第三方管理，由事件触发的无状态（Stateless）暂存于计算容器内。\n\n对于开发者来说，Serverless架构可以将其服务器端应用程序分解成多个执行不同任务的函数，整个应用分为几个独立、松散耦合的组件，这些组件可以在任何规模上运行。\n\n### Serverless架构优势\n\n**缩短交付时间：** Serverless架构允许开发人员在极短时间内（几小时、几天）交付新的应用程序，而不是像以前一样需要几个星期或几个月。在新的应用程序中，依赖于第三方API提供服务的例子很多，如认证(OAuth)、社交、地图、人工智能等。\n\n**增强可伸缩性：**所有人都希望自己开发的应用能够快速获取大量的新增用户，但是当活跃用户快速增长的时候，服务器的压力也会激增。使用Serverless架构的体系不再有上述担忧，可以及时、灵活进行扩展来应对快速增长的活跃用户带来的访问压力。\n\n**降低成本：** Serverless架构模式可以降低计算能力和人力资源方面的成本，如果不需要服务器，就不用花费时间重新造轮子、风险监测、图像处理，以及基础设施管理，操作成本会直线下降。\n\n**改善用户体验：** 用户通常不太关心基础设施，而更注重于功能和用户体验。Serverless架构允许团队将资源集中在用户体验上。\n\n**减少延迟及优化地理位置信息：**应用规模能力取决于三个方面：用户数量、所在位置及网络延迟。当应用要面向全国甚至全球用户的时候，通常会产生较高的延迟，从而降低用户体验。在Serverless架构下，供应商在每个用户附近都有节点，大幅度降低了访问延迟，因此所有用户的体验都可以得到提升。\n\n\n> 在微服务与容器技术火热之后，Serverless（无服务器架构）成为新的热点，无服务器云函数可以让用户无需关心服务器的部署运营，只需开发最核心的业务逻辑，即可实现上线运营，具备分布容灾能力，可以依据负载自动扩缩容，并按照实际调用次数与时长计费。\n\n使用Serverless架构可以免除所有运维性操作，开发人员可以更加专注于核心业务的开发，实现快速上线和迭代，把握业务发展的节奏。Serverless架构可以认为是对微服务和容器化的一种补充，为用户提供了一种新的选择，来应对复杂多变的需求，尤其适合快速发展的初创型公司。\n\n\n\n* 国外:  firebase\n* 国内:  阿里百川  友盟\n\n\n文章\n[Angular && Serverless](https://blog.csdn.net/m0_37529303/article/details/80878654) \n\n[Google FireBase的简单介绍和使用](https://www.jianshu.com/p/eeb760c63a53)","slug":"Serverless-services","published":1,"updated":"2019-03-26T06:11:29.364Z","_id":"cjtpdplv800003yxy7zw14pm5","layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>Serverless被翻译为“无服务器架构”，这个概念在2012年时便已经存在，比微服务和Service Mesh的概念出现都要早，但是直到微服务概念大红大紫之后，Serverless才重新又被人们所关注。</p>\n</blockquote>\n<blockquote>\n<p>Serverless（无服务器架构）并不意味着没有任何服务器去运行代码，Serverless是无需管理服务器，只需要关注代码，而提供者将处理其余部分工作。“无服务器架构”也可以指部分服务器端逻辑依然由应用程序开发者来编写的应用程序，但与传统架构的不同之处在于，这些逻辑运行在完全由第三方管理，由事件触发的无状态（Stateless）暂存于计算容器内。</p>\n</blockquote>\n<p>对于开发者来说，Serverless架构可以将其服务器端应用程序分解成多个执行不同任务的函数，整个应用分为几个独立、松散耦合的组件，这些组件可以在任何规模上运行。</p>\n<h3 id=\"Serverless架构优势\"><a href=\"#Serverless架构优势\" class=\"headerlink\" title=\"Serverless架构优势\"></a>Serverless架构优势</h3><p><strong>缩短交付时间：</strong> Serverless架构允许开发人员在极短时间内（几小时、几天）交付新的应用程序，而不是像以前一样需要几个星期或几个月。在新的应用程序中，依赖于第三方API提供服务的例子很多，如认证(OAuth)、社交、地图、人工智能等。</p>\n<p><strong>增强可伸缩性：</strong>所有人都希望自己开发的应用能够快速获取大量的新增用户，但是当活跃用户快速增长的时候，服务器的压力也会激增。使用Serverless架构的体系不再有上述担忧，可以及时、灵活进行扩展来应对快速增长的活跃用户带来的访问压力。</p>\n<p><strong>降低成本：</strong> Serverless架构模式可以降低计算能力和人力资源方面的成本，如果不需要服务器，就不用花费时间重新造轮子、风险监测、图像处理，以及基础设施管理，操作成本会直线下降。</p>\n<p><strong>改善用户体验：</strong> 用户通常不太关心基础设施，而更注重于功能和用户体验。Serverless架构允许团队将资源集中在用户体验上。</p>\n<p><strong>减少延迟及优化地理位置信息：</strong>应用规模能力取决于三个方面：用户数量、所在位置及网络延迟。当应用要面向全国甚至全球用户的时候，通常会产生较高的延迟，从而降低用户体验。在Serverless架构下，供应商在每个用户附近都有节点，大幅度降低了访问延迟，因此所有用户的体验都可以得到提升。</p>\n<blockquote>\n<p>在微服务与容器技术火热之后，Serverless（无服务器架构）成为新的热点，无服务器云函数可以让用户无需关心服务器的部署运营，只需开发最核心的业务逻辑，即可实现上线运营，具备分布容灾能力，可以依据负载自动扩缩容，并按照实际调用次数与时长计费。</p>\n</blockquote>\n<p>使用Serverless架构可以免除所有运维性操作，开发人员可以更加专注于核心业务的开发，实现快速上线和迭代，把握业务发展的节奏。Serverless架构可以认为是对微服务和容器化的一种补充，为用户提供了一种新的选择，来应对复杂多变的需求，尤其适合快速发展的初创型公司。</p>\n<ul>\n<li>国外:  firebase</li>\n<li>国内:  阿里百川  友盟</li>\n</ul>\n<p>文章<br><a href=\"https://blog.csdn.net/m0_37529303/article/details/80878654\" target=\"_blank\" rel=\"noopener\">Angular &amp;&amp; Serverless</a> </p>\n<p><a href=\"https://www.jianshu.com/p/eeb760c63a53\" target=\"_blank\" rel=\"noopener\">Google FireBase的简单介绍和使用</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Serverless被翻译为“无服务器架构”，这个概念在2012年时便已经存在，比微服务和Service Mesh的概念出现都要早，但是直到微服务概念大红大紫之后，Serverless才重新又被人们所关注。</p>\n</blockquote>\n<blockquote>\n<p>Serverless（无服务器架构）并不意味着没有任何服务器去运行代码，Serverless是无需管理服务器，只需要关注代码，而提供者将处理其余部分工作。“无服务器架构”也可以指部分服务器端逻辑依然由应用程序开发者来编写的应用程序，但与传统架构的不同之处在于，这些逻辑运行在完全由第三方管理，由事件触发的无状态（Stateless）暂存于计算容器内。</p>\n</blockquote>\n<p>对于开发者来说，Serverless架构可以将其服务器端应用程序分解成多个执行不同任务的函数，整个应用分为几个独立、松散耦合的组件，这些组件可以在任何规模上运行。</p>\n<h3 id=\"Serverless架构优势\"><a href=\"#Serverless架构优势\" class=\"headerlink\" title=\"Serverless架构优势\"></a>Serverless架构优势</h3><p><strong>缩短交付时间：</strong> Serverless架构允许开发人员在极短时间内（几小时、几天）交付新的应用程序，而不是像以前一样需要几个星期或几个月。在新的应用程序中，依赖于第三方API提供服务的例子很多，如认证(OAuth)、社交、地图、人工智能等。</p>\n<p><strong>增强可伸缩性：</strong>所有人都希望自己开发的应用能够快速获取大量的新增用户，但是当活跃用户快速增长的时候，服务器的压力也会激增。使用Serverless架构的体系不再有上述担忧，可以及时、灵活进行扩展来应对快速增长的活跃用户带来的访问压力。</p>\n<p><strong>降低成本：</strong> Serverless架构模式可以降低计算能力和人力资源方面的成本，如果不需要服务器，就不用花费时间重新造轮子、风险监测、图像处理，以及基础设施管理，操作成本会直线下降。</p>\n<p><strong>改善用户体验：</strong> 用户通常不太关心基础设施，而更注重于功能和用户体验。Serverless架构允许团队将资源集中在用户体验上。</p>\n<p><strong>减少延迟及优化地理位置信息：</strong>应用规模能力取决于三个方面：用户数量、所在位置及网络延迟。当应用要面向全国甚至全球用户的时候，通常会产生较高的延迟，从而降低用户体验。在Serverless架构下，供应商在每个用户附近都有节点，大幅度降低了访问延迟，因此所有用户的体验都可以得到提升。</p>\n<blockquote>\n<p>在微服务与容器技术火热之后，Serverless（无服务器架构）成为新的热点，无服务器云函数可以让用户无需关心服务器的部署运营，只需开发最核心的业务逻辑，即可实现上线运营，具备分布容灾能力，可以依据负载自动扩缩容，并按照实际调用次数与时长计费。</p>\n</blockquote>\n<p>使用Serverless架构可以免除所有运维性操作，开发人员可以更加专注于核心业务的开发，实现快速上线和迭代，把握业务发展的节奏。Serverless架构可以认为是对微服务和容器化的一种补充，为用户提供了一种新的选择，来应对复杂多变的需求，尤其适合快速发展的初创型公司。</p>\n<ul>\n<li>国外:  firebase</li>\n<li>国内:  阿里百川  友盟</li>\n</ul>\n<p>文章<br><a href=\"https://blog.csdn.net/m0_37529303/article/details/80878654\" target=\"_blank\" rel=\"noopener\">Angular &amp;&amp; Serverless</a> </p>\n<p><a href=\"https://www.jianshu.com/p/eeb760c63a53\" target=\"_blank\" rel=\"noopener\">Google FireBase的简单介绍和使用</a></p>\n"},{"title":"angular6开发不完全笔记（一）","comments":0,"abbrlink":38363,"date":"2019-01-06T19:52:36.000Z","img":null,"_content":"\n### 新建项目\n\n请在终端/控制台窗口中运行  `ng -v` 命令。 确定您已安装@angular/cli\nif没有执行 `npm install -g @angular/cli` 全局安装 Angular CLI。\n\n```\nng new project-name \n```\n就具体项目开发前调研技术栈追加相关参数\n\n* 样式style 如 ` --style=scss `  value值可以是（css | scss | sass | less | stylus ）等\n\n* 项目中使用路由routing 如 `--routing` 生成routing module\n\n* 前缀 prefix 如 `--prefix` 或 `-p`  默认为app,参数自定义  比如 `--prefix=wn`\n\n后话\n> angular.json 文件中 `\"prefix\": \"app\"`, 会更改为`\"prefix\": \"wn\"`\n>  tslint验证规则 项目中所有的组件前缀都改为`wn`开头的 index.html文件`<app-root></app-root>`变为`<wn-root><wn-root>` \n> 所有 `ng g c component-name` 生成的组件 prefix默认时使用`<app-componet-name></app-componet-name>` 自定义前缀后 `<wn-componet-name></wn-componet-name>`\n#####综合上述 `ng new project-name --style=scss --routing --prefix=wn`\n\n更多参数参考 [ng new](https://github.com/angular/angular-cli/wiki/new)\n\n\n### 启动项目\n`ng serve` 或者 `npm run start`\n\n* 开发环境项目如开始对接接口需要配置本地代理 \n1. 一般在根目录下添加proxy.config.json文件\n```\n{\n  \"/api\": {\n    \"target\": \"http://xxx.xxx.com\",\n    \"secure\": false,\n    // \"logLevel\":\"debug\",\n    \"changeOrigin\": true,\n    \"pathRewrite\":{\n      \"^/api\":\"\"\n    }\n  }\n}\n```\n2. 文件package.json中scripts 下 start的value值`ng serve --proxy-config proxy.config.json `   或者在angular.json 中  serve下 options添加属性 ` \"proxyConfig\"：\"proxy.config.json\"`\n\n> ng serve 其他参数\n* 接口默认4200 `--port 4201`\n* 启动时自动打开浏览器 `--open` 简写`-o`\n* 用host指定运行主机 `--host 0.0.0.0 ` 或`--public-host 192.168.1.111` 指定浏览器客户端将使用的URL\n* 正在生成的应用程序的基URL `--base-href /admin/`或者 `--base-href http://www.example.com/`  相当于index.html添加<base>html标签  属性href规定页面中所有相对链接的基准 URL。 如 `<base href=\"http://www.example.com/\">` 注：参数值后面一定要多个 `/` 结尾，否则无效\n\n#####综合上述1（未对接） `ng serve --port 4201 --open`\n#####综合上述2 `ng serve --proxy-config proxy.config.json --host 0.0.0.0 --port 4201 --open`\n\n更多参数参考 [ng serve](https://github.com/angular/angular-cli/wiki/serve)\n\n\n### 项目开发\n\n1. 生成组件 \n+ `ng g c component-name` 生成在src下全局组件\n+ `ng g c module-name/component-name` 组件生成在某模块下src下，并声明注册该模块\n+ `ng g c path/component-name` 组件生成在项目path路径下，默认注册父模块，由父模块决定是否是全局组件还是某模块组件；\n\n[禁止生成spec.ts文件](https://www.itsvse.com/thread-5196-1-1.html)\n\n2. 生成模块 `ng g m module-name` 同上\n其他参数\n+  `--routing` 生成路由模块。  \n+ `--module` 允许指定声明模块\n####综上： `ng g m module-name --routing --module module-name`\n\n3. 生成服务 `ng g s service-name` 同上\n\n4. 生成管道(原1.x中过滤器) `ng g p pipe-name`\n\n5. 生成指令 `ng g d directive-name`\n   指令分 属性型指令和结构型指令\n\n6. 生成class `ng g cl class-name` class-mame一般首字母大写，驼峰\n\n7. 生成接口interface `ng g i interface-name` 接口为ts特性 类型检查 声明参数类型\n\n更多参数参考 [ng generate](https://github.com/angular/angular-cli/wiki/generate)\n\n\n### 编译项目\n`ng build` 或 `npm run build`\n\n参数\n* `--base-href /myUrl/ ` 相当于在index.html中添加<base href=\"/myUrl/\">，默认<base href=\"/\">\n\n* `--prod` 通过UglifyJS 删除更多未使用的代码，使项目编译后更小体积\n\n* `--output-hashing all ` 编译后输出文件名以哈希模式，便于缓存\n\n* `--stats-json` 生成一个“stats.json”文件，可以使用诸如：webpack bundle analyzer'或https://webpack.github.io/analyse.等工具进行前端分析。\n\n* `--aot` 启用aot预编译\n* `--build-optimizer` 使用“aot”选项时启用@angular-devkit/build-optimizer 优化。\n\n更多参数参考 [ng build](https://github.com/angular/angular-cli/wiki/build) ","source":"_posts/angular-notice.md","raw":"---\ntitle: angular6开发不完全笔记（一）\ncategories:\n  - 前端\n  - angular7\ntags:\n  - 前端\n  - angular\ncomments: false\nabbrlink: 38363\ndate: 2019-01-07 03:52:36\nimg:\n---\n\n### 新建项目\n\n请在终端/控制台窗口中运行  `ng -v` 命令。 确定您已安装@angular/cli\nif没有执行 `npm install -g @angular/cli` 全局安装 Angular CLI。\n\n```\nng new project-name \n```\n就具体项目开发前调研技术栈追加相关参数\n\n* 样式style 如 ` --style=scss `  value值可以是（css | scss | sass | less | stylus ）等\n\n* 项目中使用路由routing 如 `--routing` 生成routing module\n\n* 前缀 prefix 如 `--prefix` 或 `-p`  默认为app,参数自定义  比如 `--prefix=wn`\n\n后话\n> angular.json 文件中 `\"prefix\": \"app\"`, 会更改为`\"prefix\": \"wn\"`\n>  tslint验证规则 项目中所有的组件前缀都改为`wn`开头的 index.html文件`<app-root></app-root>`变为`<wn-root><wn-root>` \n> 所有 `ng g c component-name` 生成的组件 prefix默认时使用`<app-componet-name></app-componet-name>` 自定义前缀后 `<wn-componet-name></wn-componet-name>`\n#####综合上述 `ng new project-name --style=scss --routing --prefix=wn`\n\n更多参数参考 [ng new](https://github.com/angular/angular-cli/wiki/new)\n\n\n### 启动项目\n`ng serve` 或者 `npm run start`\n\n* 开发环境项目如开始对接接口需要配置本地代理 \n1. 一般在根目录下添加proxy.config.json文件\n```\n{\n  \"/api\": {\n    \"target\": \"http://xxx.xxx.com\",\n    \"secure\": false,\n    // \"logLevel\":\"debug\",\n    \"changeOrigin\": true,\n    \"pathRewrite\":{\n      \"^/api\":\"\"\n    }\n  }\n}\n```\n2. 文件package.json中scripts 下 start的value值`ng serve --proxy-config proxy.config.json `   或者在angular.json 中  serve下 options添加属性 ` \"proxyConfig\"：\"proxy.config.json\"`\n\n> ng serve 其他参数\n* 接口默认4200 `--port 4201`\n* 启动时自动打开浏览器 `--open` 简写`-o`\n* 用host指定运行主机 `--host 0.0.0.0 ` 或`--public-host 192.168.1.111` 指定浏览器客户端将使用的URL\n* 正在生成的应用程序的基URL `--base-href /admin/`或者 `--base-href http://www.example.com/`  相当于index.html添加<base>html标签  属性href规定页面中所有相对链接的基准 URL。 如 `<base href=\"http://www.example.com/\">` 注：参数值后面一定要多个 `/` 结尾，否则无效\n\n#####综合上述1（未对接） `ng serve --port 4201 --open`\n#####综合上述2 `ng serve --proxy-config proxy.config.json --host 0.0.0.0 --port 4201 --open`\n\n更多参数参考 [ng serve](https://github.com/angular/angular-cli/wiki/serve)\n\n\n### 项目开发\n\n1. 生成组件 \n+ `ng g c component-name` 生成在src下全局组件\n+ `ng g c module-name/component-name` 组件生成在某模块下src下，并声明注册该模块\n+ `ng g c path/component-name` 组件生成在项目path路径下，默认注册父模块，由父模块决定是否是全局组件还是某模块组件；\n\n[禁止生成spec.ts文件](https://www.itsvse.com/thread-5196-1-1.html)\n\n2. 生成模块 `ng g m module-name` 同上\n其他参数\n+  `--routing` 生成路由模块。  \n+ `--module` 允许指定声明模块\n####综上： `ng g m module-name --routing --module module-name`\n\n3. 生成服务 `ng g s service-name` 同上\n\n4. 生成管道(原1.x中过滤器) `ng g p pipe-name`\n\n5. 生成指令 `ng g d directive-name`\n   指令分 属性型指令和结构型指令\n\n6. 生成class `ng g cl class-name` class-mame一般首字母大写，驼峰\n\n7. 生成接口interface `ng g i interface-name` 接口为ts特性 类型检查 声明参数类型\n\n更多参数参考 [ng generate](https://github.com/angular/angular-cli/wiki/generate)\n\n\n### 编译项目\n`ng build` 或 `npm run build`\n\n参数\n* `--base-href /myUrl/ ` 相当于在index.html中添加<base href=\"/myUrl/\">，默认<base href=\"/\">\n\n* `--prod` 通过UglifyJS 删除更多未使用的代码，使项目编译后更小体积\n\n* `--output-hashing all ` 编译后输出文件名以哈希模式，便于缓存\n\n* `--stats-json` 生成一个“stats.json”文件，可以使用诸如：webpack bundle analyzer'或https://webpack.github.io/analyse.等工具进行前端分析。\n\n* `--aot` 启用aot预编译\n* `--build-optimizer` 使用“aot”选项时启用@angular-devkit/build-optimizer 优化。\n\n更多参数参考 [ng build](https://github.com/angular/angular-cli/wiki/build) ","slug":"angular-notice","published":1,"updated":"2019-03-26T06:02:57.677Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvd00013yxyd09kkb7u","content":"<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>请在终端/控制台窗口中运行  <code>ng -v</code> 命令。 确定您已安装@angular/cli<br>if没有执行 <code>npm install -g @angular/cli</code> 全局安装 Angular CLI。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng new project-name</span><br></pre></td></tr></table></figure>\n<p>就具体项目开发前调研技术栈追加相关参数</p>\n<ul>\n<li><p>样式style 如 <code>--style=scss</code>  value值可以是（css | scss | sass | less | stylus ）等</p>\n</li>\n<li><p>项目中使用路由routing 如 <code>--routing</code> 生成routing module</p>\n</li>\n<li><p>前缀 prefix 如 <code>--prefix</code> 或 <code>-p</code>  默认为app,参数自定义  比如 <code>--prefix=wn</code></p>\n</li>\n</ul>\n<p>后话</p>\n<blockquote>\n<p>angular.json 文件中 <code>&quot;prefix&quot;: &quot;app&quot;</code>, 会更改为<code>&quot;prefix&quot;: &quot;wn&quot;</code><br> tslint验证规则 项目中所有的组件前缀都改为<code>wn</code>开头的 index.html文件<code>&lt;app-root&gt;&lt;/app-root&gt;</code>变为<code>&lt;wn-root&gt;&lt;wn-root&gt;</code><br>所有 <code>ng g c component-name</code> 生成的组件 prefix默认时使用<code>&lt;app-componet-name&gt;&lt;/app-componet-name&gt;</code> 自定义前缀后 <code>&lt;wn-componet-name&gt;&lt;/wn-componet-name&gt;</code></p>\n</blockquote>\n<p>#####综合上述 <code>ng new project-name --style=scss --routing --prefix=wn</code></p>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/new\" target=\"_blank\" rel=\"noopener\">ng new</a></p>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><p><code>ng serve</code> 或者 <code>npm run start</code></p>\n<ul>\n<li>开发环境项目如开始对接接口需要配置本地代理 </li>\n</ul>\n<ol>\n<li><p>一般在根目录下添加proxy.config.json文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;/api&quot;: &#123;</span><br><span class=\"line\">    &quot;target&quot;: &quot;http://xxx.xxx.com&quot;,</span><br><span class=\"line\">    &quot;secure&quot;: false,</span><br><span class=\"line\">    // &quot;logLevel&quot;:&quot;debug&quot;,</span><br><span class=\"line\">    &quot;changeOrigin&quot;: true,</span><br><span class=\"line\">    &quot;pathRewrite&quot;:&#123;</span><br><span class=\"line\">      &quot;^/api&quot;:&quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文件package.json中scripts 下 start的value值<code>ng serve --proxy-config proxy.config.json</code>   或者在angular.json 中  serve下 options添加属性 <code>&quot;proxyConfig&quot;：&quot;proxy.config.json&quot;</code></p>\n</li>\n</ol>\n<blockquote>\n<p>ng serve 其他参数</p>\n<ul>\n<li>接口默认4200 <code>--port 4201</code></li>\n<li>启动时自动打开浏览器 <code>--open</code> 简写<code>-o</code></li>\n<li>用host指定运行主机 <code>--host 0.0.0.0</code> 或<code>--public-host 192.168.1.111</code> 指定浏览器客户端将使用的URL</li>\n<li>正在生成的应用程序的基URL <code>--base-href /admin/</code>或者 <code>--base-href http://www.example.com/</code>  相当于index.html添加<base>html标签  属性href规定页面中所有相对链接的基准 URL。 如 <code>&lt;base href=&quot;http://www.example.com/&quot;&gt;</code> 注：参数值后面一定要多个 <code>/</code> 结尾，否则无效</li>\n</ul>\n</blockquote>\n<p>#####综合上述1（未对接） <code>ng serve --port 4201 --open</code></p>\n<p>#####综合上述2 <code>ng serve --proxy-config proxy.config.json --host 0.0.0.0 --port 4201 --open</code></p>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/serve\" target=\"_blank\" rel=\"noopener\">ng serve</a></p>\n<h3 id=\"项目开发\"><a href=\"#项目开发\" class=\"headerlink\" title=\"项目开发\"></a>项目开发</h3><ol>\n<li>生成组件 </li>\n</ol>\n<ul>\n<li><code>ng g c component-name</code> 生成在src下全局组件</li>\n<li><code>ng g c module-name/component-name</code> 组件生成在某模块下src下，并声明注册该模块</li>\n<li><code>ng g c path/component-name</code> 组件生成在项目path路径下，默认注册父模块，由父模块决定是否是全局组件还是某模块组件；</li>\n</ul>\n<p><a href=\"https://www.itsvse.com/thread-5196-1-1.html\" target=\"_blank\" rel=\"noopener\">禁止生成spec.ts文件</a></p>\n<ol start=\"2\">\n<li>生成模块 <code>ng g m module-name</code> 同上<br>其他参数</li>\n</ol>\n<ul>\n<li><code>--routing</code> 生成路由模块。  </li>\n<li><code>--module</code> 允许指定声明模块<br>####综上： <code>ng g m module-name --routing --module module-name</code></li>\n</ul>\n<ol start=\"3\">\n<li><p>生成服务 <code>ng g s service-name</code> 同上</p>\n</li>\n<li><p>生成管道(原1.x中过滤器) <code>ng g p pipe-name</code></p>\n</li>\n<li><p>生成指令 <code>ng g d directive-name</code><br>指令分 属性型指令和结构型指令</p>\n</li>\n<li><p>生成class <code>ng g cl class-name</code> class-mame一般首字母大写，驼峰</p>\n</li>\n<li><p>生成接口interface <code>ng g i interface-name</code> 接口为ts特性 类型检查 声明参数类型</p>\n</li>\n</ol>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/generate\" target=\"_blank\" rel=\"noopener\">ng generate</a></p>\n<h3 id=\"编译项目\"><a href=\"#编译项目\" class=\"headerlink\" title=\"编译项目\"></a>编译项目</h3><p><code>ng build</code> 或 <code>npm run build</code></p>\n<p>参数</p>\n<ul>\n<li><p><code>--base-href /myUrl/</code> 相当于在index.html中添加<base href=\"/myUrl/\">，默认<base href=\"/\"></p>\n</li>\n<li><p><code>--prod</code> 通过UglifyJS 删除更多未使用的代码，使项目编译后更小体积</p>\n</li>\n<li><p><code>--output-hashing all</code> 编译后输出文件名以哈希模式，便于缓存</p>\n</li>\n<li><p><code>--stats-json</code> 生成一个“stats.json”文件，可以使用诸如：webpack bundle analyzer’或<a href=\"https://webpack.github.io/analyse.等工具进行前端分析。\" target=\"_blank\" rel=\"noopener\">https://webpack.github.io/analyse.等工具进行前端分析。</a></p>\n</li>\n<li><p><code>--aot</code> 启用aot预编译</p>\n</li>\n<li><code>--build-optimizer</code> 使用“aot”选项时启用@angular-devkit/build-optimizer 优化。</li>\n</ul>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/build\" target=\"_blank\" rel=\"noopener\">ng build</a> </p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>请在终端/控制台窗口中运行  <code>ng -v</code> 命令。 确定您已安装@angular/cli<br>if没有执行 <code>npm install -g @angular/cli</code> 全局安装 Angular CLI。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ng new project-name</span><br></pre></td></tr></table></figure>\n<p>就具体项目开发前调研技术栈追加相关参数</p>\n<ul>\n<li><p>样式style 如 <code>--style=scss</code>  value值可以是（css | scss | sass | less | stylus ）等</p>\n</li>\n<li><p>项目中使用路由routing 如 <code>--routing</code> 生成routing module</p>\n</li>\n<li><p>前缀 prefix 如 <code>--prefix</code> 或 <code>-p</code>  默认为app,参数自定义  比如 <code>--prefix=wn</code></p>\n</li>\n</ul>\n<p>后话</p>\n<blockquote>\n<p>angular.json 文件中 <code>&quot;prefix&quot;: &quot;app&quot;</code>, 会更改为<code>&quot;prefix&quot;: &quot;wn&quot;</code><br> tslint验证规则 项目中所有的组件前缀都改为<code>wn</code>开头的 index.html文件<code>&lt;app-root&gt;&lt;/app-root&gt;</code>变为<code>&lt;wn-root&gt;&lt;wn-root&gt;</code><br>所有 <code>ng g c component-name</code> 生成的组件 prefix默认时使用<code>&lt;app-componet-name&gt;&lt;/app-componet-name&gt;</code> 自定义前缀后 <code>&lt;wn-componet-name&gt;&lt;/wn-componet-name&gt;</code></p>\n</blockquote>\n<p>#####综合上述 <code>ng new project-name --style=scss --routing --prefix=wn</code></p>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/new\" target=\"_blank\" rel=\"noopener\">ng new</a></p>\n<h3 id=\"启动项目\"><a href=\"#启动项目\" class=\"headerlink\" title=\"启动项目\"></a>启动项目</h3><p><code>ng serve</code> 或者 <code>npm run start</code></p>\n<ul>\n<li>开发环境项目如开始对接接口需要配置本地代理 </li>\n</ul>\n<ol>\n<li><p>一般在根目录下添加proxy.config.json文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;/api&quot;: &#123;</span><br><span class=\"line\">    &quot;target&quot;: &quot;http://xxx.xxx.com&quot;,</span><br><span class=\"line\">    &quot;secure&quot;: false,</span><br><span class=\"line\">    // &quot;logLevel&quot;:&quot;debug&quot;,</span><br><span class=\"line\">    &quot;changeOrigin&quot;: true,</span><br><span class=\"line\">    &quot;pathRewrite&quot;:&#123;</span><br><span class=\"line\">      &quot;^/api&quot;:&quot;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文件package.json中scripts 下 start的value值<code>ng serve --proxy-config proxy.config.json</code>   或者在angular.json 中  serve下 options添加属性 <code>&quot;proxyConfig&quot;：&quot;proxy.config.json&quot;</code></p>\n</li>\n</ol>\n<blockquote>\n<p>ng serve 其他参数</p>\n<ul>\n<li>接口默认4200 <code>--port 4201</code></li>\n<li>启动时自动打开浏览器 <code>--open</code> 简写<code>-o</code></li>\n<li>用host指定运行主机 <code>--host 0.0.0.0</code> 或<code>--public-host 192.168.1.111</code> 指定浏览器客户端将使用的URL</li>\n<li>正在生成的应用程序的基URL <code>--base-href /admin/</code>或者 <code>--base-href http://www.example.com/</code>  相当于index.html添加<base>html标签  属性href规定页面中所有相对链接的基准 URL。 如 <code>&lt;base href=&quot;http://www.example.com/&quot;&gt;</code> 注：参数值后面一定要多个 <code>/</code> 结尾，否则无效</li>\n</ul>\n</blockquote>\n<p>#####综合上述1（未对接） <code>ng serve --port 4201 --open</code></p>\n<p>#####综合上述2 <code>ng serve --proxy-config proxy.config.json --host 0.0.0.0 --port 4201 --open</code></p>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/serve\" target=\"_blank\" rel=\"noopener\">ng serve</a></p>\n<h3 id=\"项目开发\"><a href=\"#项目开发\" class=\"headerlink\" title=\"项目开发\"></a>项目开发</h3><ol>\n<li>生成组件 </li>\n</ol>\n<ul>\n<li><code>ng g c component-name</code> 生成在src下全局组件</li>\n<li><code>ng g c module-name/component-name</code> 组件生成在某模块下src下，并声明注册该模块</li>\n<li><code>ng g c path/component-name</code> 组件生成在项目path路径下，默认注册父模块，由父模块决定是否是全局组件还是某模块组件；</li>\n</ul>\n<p><a href=\"https://www.itsvse.com/thread-5196-1-1.html\" target=\"_blank\" rel=\"noopener\">禁止生成spec.ts文件</a></p>\n<ol start=\"2\">\n<li>生成模块 <code>ng g m module-name</code> 同上<br>其他参数</li>\n</ol>\n<ul>\n<li><code>--routing</code> 生成路由模块。  </li>\n<li><code>--module</code> 允许指定声明模块<br>####综上： <code>ng g m module-name --routing --module module-name</code></li>\n</ul>\n<ol start=\"3\">\n<li><p>生成服务 <code>ng g s service-name</code> 同上</p>\n</li>\n<li><p>生成管道(原1.x中过滤器) <code>ng g p pipe-name</code></p>\n</li>\n<li><p>生成指令 <code>ng g d directive-name</code><br>指令分 属性型指令和结构型指令</p>\n</li>\n<li><p>生成class <code>ng g cl class-name</code> class-mame一般首字母大写，驼峰</p>\n</li>\n<li><p>生成接口interface <code>ng g i interface-name</code> 接口为ts特性 类型检查 声明参数类型</p>\n</li>\n</ol>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/generate\" target=\"_blank\" rel=\"noopener\">ng generate</a></p>\n<h3 id=\"编译项目\"><a href=\"#编译项目\" class=\"headerlink\" title=\"编译项目\"></a>编译项目</h3><p><code>ng build</code> 或 <code>npm run build</code></p>\n<p>参数</p>\n<ul>\n<li><p><code>--base-href /myUrl/</code> 相当于在index.html中添加<base href=\"/myUrl/\">，默认<base href=\"/\"></p>\n</li>\n<li><p><code>--prod</code> 通过UglifyJS 删除更多未使用的代码，使项目编译后更小体积</p>\n</li>\n<li><p><code>--output-hashing all</code> 编译后输出文件名以哈希模式，便于缓存</p>\n</li>\n<li><p><code>--stats-json</code> 生成一个“stats.json”文件，可以使用诸如：webpack bundle analyzer’或<a href=\"https://webpack.github.io/analyse.等工具进行前端分析。\" target=\"_blank\" rel=\"noopener\">https://webpack.github.io/analyse.等工具进行前端分析。</a></p>\n</li>\n<li><p><code>--aot</code> 启用aot预编译</p>\n</li>\n<li><code>--build-optimizer</code> 使用“aot”选项时启用@angular-devkit/build-optimizer 优化。</li>\n</ul>\n<p>更多参数参考 <a href=\"https://github.com/angular/angular-cli/wiki/build\" target=\"_blank\" rel=\"noopener\">ng build</a> </p>\n"},{"title":"ngular6开发不完全笔记（三）-- 报错指南","comments":0,"abbrlink":4817,"date":"2019-01-22T14:01:25.000Z","img":null,"_content":"\n#### router\n> Uncaught Error: Template parse errors:\n> 'router-outlet' is not a known element:\n> 1. If 'router-outlet' is an Angular component, then verify that it is part of this module.\n> 2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n\n* 解决方法\n1. 每个模块中都添加 `import { RouterModule } from '@angular/router';`   然后 import即可 \n2. 【推荐】建立shared模块 在分享模块中导入 `RouterModule` 然后导出，其他有使用 `<router-outlet></router-outlet>` 的模块都导入 shared模块\n> 主要是导入RouterModule指令， 根据自己的写法调整， 二者选一即可","source":"_posts/angular-errer.md","raw":"---\ntitle: ngular6开发不完全笔记（三）-- 报错指南\ncategories:\n  - angular\n  - 分类2\ntags:\n  - 前端\n  - 标签2\ncomments: false\nabbrlink: 4817\ndate: 2019-01-22 22:01:25\nimg:\n---\n\n#### router\n> Uncaught Error: Template parse errors:\n> 'router-outlet' is not a known element:\n> 1. If 'router-outlet' is an Angular component, then verify that it is part of this module.\n> 2. If 'router-outlet' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\n\n* 解决方法\n1. 每个模块中都添加 `import { RouterModule } from '@angular/router';`   然后 import即可 \n2. 【推荐】建立shared模块 在分享模块中导入 `RouterModule` 然后导出，其他有使用 `<router-outlet></router-outlet>` 的模块都导入 shared模块\n> 主要是导入RouterModule指令， 根据自己的写法调整， 二者选一即可","slug":"angular-errer","published":1,"updated":"2019-03-26T06:08:09.912Z","_id":"cjtpdplvi00033yxy50ili785","layout":"post","photos":[],"link":"","content":"<h4 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h4><blockquote>\n<p>Uncaught Error: Template parse errors:<br>‘router-outlet’ is not a known element:</p>\n<ol>\n<li>If ‘router-outlet’ is an Angular component, then verify that it is part of this module.</li>\n<li>If ‘router-outlet’ is a Web Component then add ‘CUSTOM_ELEMENTS_SCHEMA’ to the <a href=\"mailto:&#39;@NgModule.schemas\" target=\"_blank\" rel=\"noopener\">&#39;@NgModule.schemas</a>‘ of this component to suppress this message.</li>\n</ol>\n</blockquote>\n<ul>\n<li>解决方法</li>\n</ul>\n<ol>\n<li>每个模块中都添加 <code>import { RouterModule } from &#39;@angular/router&#39;;</code>   然后 import即可 </li>\n<li>【推荐】建立shared模块 在分享模块中导入 <code>RouterModule</code> 然后导出，其他有使用 <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code> 的模块都导入 shared模块<blockquote>\n<p>主要是导入RouterModule指令， 根据自己的写法调整， 二者选一即可</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"router\"><a href=\"#router\" class=\"headerlink\" title=\"router\"></a>router</h4><blockquote>\n<p>Uncaught Error: Template parse errors:<br>‘router-outlet’ is not a known element:</p>\n<ol>\n<li>If ‘router-outlet’ is an Angular component, then verify that it is part of this module.</li>\n<li>If ‘router-outlet’ is a Web Component then add ‘CUSTOM_ELEMENTS_SCHEMA’ to the <a href=\"mailto:&#39;@NgModule.schemas\" target=\"_blank\" rel=\"noopener\">&#39;@NgModule.schemas</a>‘ of this component to suppress this message.</li>\n</ol>\n</blockquote>\n<ul>\n<li>解决方法</li>\n</ul>\n<ol>\n<li>每个模块中都添加 <code>import { RouterModule } from &#39;@angular/router&#39;;</code>   然后 import即可 </li>\n<li>【推荐】建立shared模块 在分享模块中导入 <code>RouterModule</code> 然后导出，其他有使用 <code>&lt;router-outlet&gt;&lt;/router-outlet&gt;</code> 的模块都导入 shared模块<blockquote>\n<p>主要是导入RouterModule指令， 根据自己的写法调整， 二者选一即可</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"font-end-dev-system-config","comments":0,"abbrlink":32495,"date":"2019-01-06T19:53:44.000Z","img":null,"_content":"","source":"_posts/font-end-dev-system-config.md","raw":"---\ntitle: font-end-dev-system-config\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 32495\ndate: 2019-01-07 03:53:44\nimg:\n---\n","slug":"font-end-dev-system-config","published":1,"updated":"2019-01-21T04:15:22.608Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvk00053yxyy6yitmu0","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"ngular6开发不完全笔记（一）-- 管道","comments":0,"abbrlink":1184,"date":"2019-01-09T19:43:12.000Z","img":null,"_content":"\n> 自定义管道 管道（过滤器）为过滤数据显示下列list数据\n\n* pip.ts 文件\n ```ts\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TableType } from './add-student.service';\n\n@Pipe({\n  name: 'studyProjectType'\n})\nexport class StudyProjectTypePipe implements PipeTransform {\n  transform( allstudyProjects: any[], typeParams: any): any {\n    // console.log(typeParams);\n    return allstudyProjects.filter(type => typeParams.indexOf(type.type) !== -1);\n  }\n}\n ```\n\ntransform 方法是管道的基本要素。 PipeTransform接口中定义了它. 当每个输入值被传给 transform 方法时，还会带上另一个参数\nallstudyProjects 是输入值 ，也就是html 页面中 `|`  前面的studyProjectList是管道名   typeParams是管道名后的参数 传进管道中\n以上这两个为形参，名字自定义，建议命名规范，尤其是写分享管道 . transform 函数里return 是输入数据过滤filter，里面是一个函数\n\n> 这里的思路是 对比 请求下的数据 studyProjectList 每个列表的type属性 对比下面typeParams, 结果为true 就通过过滤显示\n\n本地数据来源\n```\npublic types: TabType[] = [\n    {\n      name: '课程',\n      id: 'courseDate',\n      tags: ['在线课', '线上课', '直播课', '线下课'],\n    },\n    {\n      name: '考试',\n      id: 'examDate',\n      tags: ['试卷'],\n    },\n    {\n      name: '作业',\n      id: 'taskDate',\n      tags: ['作业'],\n    },\n    {\n      name: '问卷',\n      id: 'questionnaireDate',\n      tags: ['问卷'],\n    },\n  ];\n  private typeParams: string[] = this.types[0].tags;    //初始值\n```\n\n* html 文件\n```\n  <div class=\"table-responsive\">\n    <!-- {{ studyProjectList | studyProjectType }} -->\n    <app-project-assign-list  [studyProjectList] = \"studyProjectList | studyProjectType: typeParams \"></app-project-assign-list>\n  </div>\n```\n> app-project-assign-list 为列表样式组件\n```\n  //click 点击事件 改变types[i]\n  switchType (i) {\n    this.typeParams = this.types[i].tags;\n  }\n```\n\n线上数据来源\n```\n /*\n * 数据来源 \n * addStudentService 服务提供 getStudyProject方法\n  */\n dataSource: Observable<any>;\n  // studyProjectList: Array<any> = [];\n   studyProjectList: TableType[] = [];\n  constructor(\n    private addStudentService: AddStudentService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.dataSource = this.addStudentService.getStudyProject();\n    this.dataSource.subscribe(\n      (data) => {\n        console.log(data);\n        this.studyProjectList = data.students;\n      }\n    );\n  }\n```","source":"_posts/angular-pipe.md","raw":"---\ntitle: ngular6开发不完全笔记（一）-- 管道\ncategories:\n  - 前端\n  - angular\ntags:\n  - 前端\n  - angular\ncomments: false\nabbrlink: 1184\ndate: 2019-01-10 03:43:12\nimg:\n---\n\n> 自定义管道 管道（过滤器）为过滤数据显示下列list数据\n\n* pip.ts 文件\n ```ts\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { TableType } from './add-student.service';\n\n@Pipe({\n  name: 'studyProjectType'\n})\nexport class StudyProjectTypePipe implements PipeTransform {\n  transform( allstudyProjects: any[], typeParams: any): any {\n    // console.log(typeParams);\n    return allstudyProjects.filter(type => typeParams.indexOf(type.type) !== -1);\n  }\n}\n ```\n\ntransform 方法是管道的基本要素。 PipeTransform接口中定义了它. 当每个输入值被传给 transform 方法时，还会带上另一个参数\nallstudyProjects 是输入值 ，也就是html 页面中 `|`  前面的studyProjectList是管道名   typeParams是管道名后的参数 传进管道中\n以上这两个为形参，名字自定义，建议命名规范，尤其是写分享管道 . transform 函数里return 是输入数据过滤filter，里面是一个函数\n\n> 这里的思路是 对比 请求下的数据 studyProjectList 每个列表的type属性 对比下面typeParams, 结果为true 就通过过滤显示\n\n本地数据来源\n```\npublic types: TabType[] = [\n    {\n      name: '课程',\n      id: 'courseDate',\n      tags: ['在线课', '线上课', '直播课', '线下课'],\n    },\n    {\n      name: '考试',\n      id: 'examDate',\n      tags: ['试卷'],\n    },\n    {\n      name: '作业',\n      id: 'taskDate',\n      tags: ['作业'],\n    },\n    {\n      name: '问卷',\n      id: 'questionnaireDate',\n      tags: ['问卷'],\n    },\n  ];\n  private typeParams: string[] = this.types[0].tags;    //初始值\n```\n\n* html 文件\n```\n  <div class=\"table-responsive\">\n    <!-- {{ studyProjectList | studyProjectType }} -->\n    <app-project-assign-list  [studyProjectList] = \"studyProjectList | studyProjectType: typeParams \"></app-project-assign-list>\n  </div>\n```\n> app-project-assign-list 为列表样式组件\n```\n  //click 点击事件 改变types[i]\n  switchType (i) {\n    this.typeParams = this.types[i].tags;\n  }\n```\n\n线上数据来源\n```\n /*\n * 数据来源 \n * addStudentService 服务提供 getStudyProject方法\n  */\n dataSource: Observable<any>;\n  // studyProjectList: Array<any> = [];\n   studyProjectList: TableType[] = [];\n  constructor(\n    private addStudentService: AddStudentService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.dataSource = this.addStudentService.getStudyProject();\n    this.dataSource.subscribe(\n      (data) => {\n        console.log(data);\n        this.studyProjectList = data.students;\n      }\n    );\n  }\n```","slug":"angular-pipe","published":1,"updated":"2019-03-26T06:03:30.146Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvm00063yxy94tknyp3","content":"<blockquote>\n<p>自定义管道 管道（过滤器）为过滤数据显示下列list数据</p>\n</blockquote>\n<ul>\n<li>pip.ts 文件<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Pipe, PipeTransform &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; TableType &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./add-student.service'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Pipe</span>(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'studyProjectType'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> StudyProjectTypePipe <span class=\"keyword\">implements</span> PipeTransform &#123;</span><br><span class=\"line\">  transform( allstudyProjects: <span class=\"built_in\">any</span>[], typeParams: <span class=\"built_in\">any</span>): <span class=\"built_in\">any</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(typeParams);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> allstudyProjects.filter(<span class=\"function\"><span class=\"params\">type</span> =&gt;</span> typeParams.indexOf(<span class=\"keyword\">type</span>.type) !== <span class=\"number\">-1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>transform 方法是管道的基本要素。 PipeTransform接口中定义了它. 当每个输入值被传给 transform 方法时，还会带上另一个参数<br>allstudyProjects 是输入值 ，也就是html 页面中 <code>|</code>  前面的studyProjectList是管道名   typeParams是管道名后的参数 传进管道中<br>以上这两个为形参，名字自定义，建议命名规范，尤其是写分享管道 . transform 函数里return 是输入数据过滤filter，里面是一个函数</p>\n<blockquote>\n<p>这里的思路是 对比 请求下的数据 studyProjectList 每个列表的type属性 对比下面typeParams, 结果为true 就通过过滤显示</p>\n</blockquote>\n<p>本地数据来源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public types: TabType[] = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;课程&apos;,</span><br><span class=\"line\">      id: &apos;courseDate&apos;,</span><br><span class=\"line\">      tags: [&apos;在线课&apos;, &apos;线上课&apos;, &apos;直播课&apos;, &apos;线下课&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;考试&apos;,</span><br><span class=\"line\">      id: &apos;examDate&apos;,</span><br><span class=\"line\">      tags: [&apos;试卷&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;作业&apos;,</span><br><span class=\"line\">      id: &apos;taskDate&apos;,</span><br><span class=\"line\">      tags: [&apos;作业&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;问卷&apos;,</span><br><span class=\"line\">      id: &apos;questionnaireDate&apos;,</span><br><span class=\"line\">      tags: [&apos;问卷&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  private typeParams: string[] = this.types[0].tags;    //初始值</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>html 文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;table-responsive&quot;&gt;</span><br><span class=\"line\">  &lt;!-- &#123;&#123; studyProjectList | studyProjectType &#125;&#125; --&gt;</span><br><span class=\"line\">  &lt;app-project-assign-list  [studyProjectList] = &quot;studyProjectList | studyProjectType: typeParams &quot;&gt;&lt;/app-project-assign-list&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>app-project-assign-list 为列表样式组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//click 点击事件 改变types[i]</span><br><span class=\"line\">switchType (i) &#123;</span><br><span class=\"line\">  this.typeParams = this.types[i].tags;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>线上数据来源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">* 数据来源 </span><br><span class=\"line\">* addStudentService 服务提供 getStudyProject方法</span><br><span class=\"line\"> */</span><br><span class=\"line\">dataSource: Observable&lt;any&gt;;</span><br><span class=\"line\"> // studyProjectList: Array&lt;any&gt; = [];</span><br><span class=\"line\">  studyProjectList: TableType[] = [];</span><br><span class=\"line\"> constructor(</span><br><span class=\"line\">   private addStudentService: AddStudentService,</span><br><span class=\"line\"> ) &#123;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> ngOnInit() &#123;</span><br><span class=\"line\">   this.dataSource = this.addStudentService.getStudyProject();</span><br><span class=\"line\">   this.dataSource.subscribe(</span><br><span class=\"line\">     (data) =&gt; &#123;</span><br><span class=\"line\">       console.log(data);</span><br><span class=\"line\">       this.studyProjectList = data.students;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>自定义管道 管道（过滤器）为过滤数据显示下列list数据</p>\n</blockquote>\n<ul>\n<li>pip.ts 文件<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; Pipe, PipeTransform &#125; <span class=\"keyword\">from</span> <span class=\"string\">'@angular/core'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; TableType &#125; <span class=\"keyword\">from</span> <span class=\"string\">'./add-student.service'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Pipe</span>(&#123;</span><br><span class=\"line\">  name: <span class=\"string\">'studyProjectType'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">class</span> StudyProjectTypePipe <span class=\"keyword\">implements</span> PipeTransform &#123;</span><br><span class=\"line\">  transform( allstudyProjects: <span class=\"built_in\">any</span>[], typeParams: <span class=\"built_in\">any</span>): <span class=\"built_in\">any</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// console.log(typeParams);</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> allstudyProjects.filter(<span class=\"function\"><span class=\"params\">type</span> =&gt;</span> typeParams.indexOf(<span class=\"keyword\">type</span>.type) !== <span class=\"number\">-1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>transform 方法是管道的基本要素。 PipeTransform接口中定义了它. 当每个输入值被传给 transform 方法时，还会带上另一个参数<br>allstudyProjects 是输入值 ，也就是html 页面中 <code>|</code>  前面的studyProjectList是管道名   typeParams是管道名后的参数 传进管道中<br>以上这两个为形参，名字自定义，建议命名规范，尤其是写分享管道 . transform 函数里return 是输入数据过滤filter，里面是一个函数</p>\n<blockquote>\n<p>这里的思路是 对比 请求下的数据 studyProjectList 每个列表的type属性 对比下面typeParams, 结果为true 就通过过滤显示</p>\n</blockquote>\n<p>本地数据来源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public types: TabType[] = [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;课程&apos;,</span><br><span class=\"line\">      id: &apos;courseDate&apos;,</span><br><span class=\"line\">      tags: [&apos;在线课&apos;, &apos;线上课&apos;, &apos;直播课&apos;, &apos;线下课&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;考试&apos;,</span><br><span class=\"line\">      id: &apos;examDate&apos;,</span><br><span class=\"line\">      tags: [&apos;试卷&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;作业&apos;,</span><br><span class=\"line\">      id: &apos;taskDate&apos;,</span><br><span class=\"line\">      tags: [&apos;作业&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: &apos;问卷&apos;,</span><br><span class=\"line\">      id: &apos;questionnaireDate&apos;,</span><br><span class=\"line\">      tags: [&apos;问卷&apos;],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ];</span><br><span class=\"line\">  private typeParams: string[] = this.types[0].tags;    //初始值</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>html 文件<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;table-responsive&quot;&gt;</span><br><span class=\"line\">  &lt;!-- &#123;&#123; studyProjectList | studyProjectType &#125;&#125; --&gt;</span><br><span class=\"line\">  &lt;app-project-assign-list  [studyProjectList] = &quot;studyProjectList | studyProjectType: typeParams &quot;&gt;&lt;/app-project-assign-list&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<blockquote>\n<p>app-project-assign-list 为列表样式组件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//click 点击事件 改变types[i]</span><br><span class=\"line\">switchType (i) &#123;</span><br><span class=\"line\">  this.typeParams = this.types[i].tags;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p>线上数据来源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">* 数据来源 </span><br><span class=\"line\">* addStudentService 服务提供 getStudyProject方法</span><br><span class=\"line\"> */</span><br><span class=\"line\">dataSource: Observable&lt;any&gt;;</span><br><span class=\"line\"> // studyProjectList: Array&lt;any&gt; = [];</span><br><span class=\"line\">  studyProjectList: TableType[] = [];</span><br><span class=\"line\"> constructor(</span><br><span class=\"line\">   private addStudentService: AddStudentService,</span><br><span class=\"line\"> ) &#123;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> ngOnInit() &#123;</span><br><span class=\"line\">   this.dataSource = this.addStudentService.getStudyProject();</span><br><span class=\"line\">   this.dataSource.subscribe(</span><br><span class=\"line\">     (data) =&gt; &#123;</span><br><span class=\"line\">       console.log(data);</span><br><span class=\"line\">       this.studyProjectList = data.students;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   );</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"前端开发功能--参考网站统计","comments":0,"abbrlink":247,"date":"2019-01-03T16:45:21.000Z","img":null,"_content":"\n[codemirror.net](https://codemirror.net/)\n\n> CodeMirror是一个用JavaScript实现的多功能文本编辑器。它专门用于编辑代码，并带有许多语言模式和插件 ，可实现更高级的编辑功能。\n\n[Linux运维日志 .centos.bz](https://www.centos.bz/)","source":"_posts/font-end-good-website.md","raw":"---\ntitle: 前端开发功能--参考网站统计\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 247\ndate: 2019-01-04 00:45:21\nimg:\n---\n\n[codemirror.net](https://codemirror.net/)\n\n> CodeMirror是一个用JavaScript实现的多功能文本编辑器。它专门用于编辑代码，并带有许多语言模式和插件 ，可实现更高级的编辑功能。\n\n[Linux运维日志 .centos.bz](https://www.centos.bz/)","slug":"font-end-good-website","published":1,"updated":"2019-03-26T06:05:49.974Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvr00083yxyj2gak14v","content":"<p><a href=\"https://codemirror.net/\" target=\"_blank\" rel=\"noopener\">codemirror.net</a></p>\n<blockquote>\n<p>CodeMirror是一个用JavaScript实现的多功能文本编辑器。它专门用于编辑代码，并带有许多语言模式和插件 ，可实现更高级的编辑功能。</p>\n</blockquote>\n<p><a href=\"https://www.centos.bz/\" target=\"_blank\" rel=\"noopener\">Linux运维日志 .centos.bz</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://codemirror.net/\" target=\"_blank\" rel=\"noopener\">codemirror.net</a></p>\n<blockquote>\n<p>CodeMirror是一个用JavaScript实现的多功能文本编辑器。它专门用于编辑代码，并带有许多语言模式和插件 ，可实现更高级的编辑功能。</p>\n</blockquote>\n<p><a href=\"https://www.centos.bz/\" target=\"_blank\" rel=\"noopener\">Linux运维日志 .centos.bz</a></p>\n"},{"title":"经查-- git使用报错及解决办法","comments":0,"abbrlink":52025,"date":"2018-12-31T08:14:34.000Z","img":null,"_content":"\n### git push 错误 ```error: failed to push some refs to 'git@github.com:charblus/ ...' ```\n\n> 本地和远程的文件应该合并后才能上传本地的新文件\n解决办法1： 先拉(pull)后推(push)  \n解决办法2： 导致这种报错2是因为没有git add 就去提交空，一般因为这个出现这个问题，此报错上还有一行: `error: src refspec master does not match any.`\n\n### git pull 错误 ``` fatal: refusing to merge unrelated histories```\n> 更新代码失败\n`git pull origin master --allow-unrelated-histories`\n后面加上 --allow-unrelated-histories ， 把两段不相干的 分支进行强行合并\n\n`git add .` && `git commit -m \"***\"` && `git push origin master`\n[cankao](http://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories)\n\n### git branch 错误 ```fatal: Not a valid object name: 'master'.```\n\ngit项目下没有任何文件可以commit，或没有新项目没有一次commit ,是不能创建分支的；只有先commit之后才会真正建立master分支，此时才可以建立其它分支。\n\n由于刚创建的git仓库默认的master分支要在第一次有效的commit之后（可以先不push）才会真正建立，否则就像你声明了个对象但没初始化一样。\n\n","source":"_posts/git-error.md","raw":"---\ntitle: 经查-- git使用报错及解决办法\ncategories:\n  - git\n  - 工具\ntags:\n  - git\n  - 工具\ncomments: false\nabbrlink: 52025\ndate: 2018-12-31 16:14:34\nimg:\n---\n\n### git push 错误 ```error: failed to push some refs to 'git@github.com:charblus/ ...' ```\n\n> 本地和远程的文件应该合并后才能上传本地的新文件\n解决办法1： 先拉(pull)后推(push)  \n解决办法2： 导致这种报错2是因为没有git add 就去提交空，一般因为这个出现这个问题，此报错上还有一行: `error: src refspec master does not match any.`\n\n### git pull 错误 ``` fatal: refusing to merge unrelated histories```\n> 更新代码失败\n`git pull origin master --allow-unrelated-histories`\n后面加上 --allow-unrelated-histories ， 把两段不相干的 分支进行强行合并\n\n`git add .` && `git commit -m \"***\"` && `git push origin master`\n[cankao](http://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories)\n\n### git branch 错误 ```fatal: Not a valid object name: 'master'.```\n\ngit项目下没有任何文件可以commit，或没有新项目没有一次commit ,是不能创建分支的；只有先commit之后才会真正建立master分支，此时才可以建立其它分支。\n\n由于刚创建的git仓库默认的master分支要在第一次有效的commit之后（可以先不push）才会真正建立，否则就像你声明了个对象但没初始化一样。\n\n","slug":"git-error","published":1,"updated":"2019-03-26T06:06:01.762Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvt000a3yxyzmgt7xib","content":"<h3 id=\"git-push-错误\"><a href=\"#git-push-错误\" class=\"headerlink\" title=\"git push 错误 \"></a>git push 错误 <figure class=\"highlight plain\"><figcaption><span>failed to push some refs to 'git@github.com:charblus/ ...' ```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; 本地和远程的文件应该合并后才能上传本地的新文件</span><br><span class=\"line\">解决办法1： 先拉(pull)后推(push)  </span><br><span class=\"line\">解决办法2： 导致这种报错2是因为没有git add 就去提交空，一般因为这个出现这个问题，此报错上还有一行: `error: src refspec master does not match any.`</span><br><span class=\"line\"></span><br><span class=\"line\">### git pull 错误 ``` fatal: refusing to merge unrelated histories</span><br></pre></td></tr></table></figure></h3><blockquote>\n<p>更新代码失败<br><code>git pull origin master --allow-unrelated-histories</code><br>后面加上 –allow-unrelated-histories ， 把两段不相干的 分支进行强行合并</p>\n</blockquote>\n<p><code>git add .</code> &amp;&amp; <code>git commit -m &quot;***&quot;</code> &amp;&amp; <code>git push origin master</code><br><a href=\"http://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories\" target=\"_blank\" rel=\"noopener\">cankao</a></p>\n<h3 id=\"git-branch-错误-fatal-Not-a-valid-object-name-39-master-39\"><a href=\"#git-branch-错误-fatal-Not-a-valid-object-name-39-master-39\" class=\"headerlink\" title=\"git branch 错误 fatal: Not a valid object name: &#39;master&#39;.\"></a>git branch 错误 <code>fatal: Not a valid object name: &#39;master&#39;.</code></h3><p>git项目下没有任何文件可以commit，或没有新项目没有一次commit ,是不能创建分支的；只有先commit之后才会真正建立master分支，此时才可以建立其它分支。</p>\n<p>由于刚创建的git仓库默认的master分支要在第一次有效的commit之后（可以先不push）才会真正建立，否则就像你声明了个对象但没初始化一样。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"git-push-错误\"><a href=\"#git-push-错误\" class=\"headerlink\" title=\"git push 错误 \"></a>git push 错误 <figure class=\"highlight plain\"><figcaption><span>failed to push some refs to 'git@github.com:charblus/ ...' ```</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&gt; 本地和远程的文件应该合并后才能上传本地的新文件</span><br><span class=\"line\">解决办法1： 先拉(pull)后推(push)  </span><br><span class=\"line\">解决办法2： 导致这种报错2是因为没有git add 就去提交空，一般因为这个出现这个问题，此报错上还有一行: `error: src refspec master does not match any.`</span><br><span class=\"line\"></span><br><span class=\"line\">### git pull 错误 ``` fatal: refusing to merge unrelated histories</span><br></pre></td></tr></table></figure></h3><blockquote>\n<p>更新代码失败<br><code>git pull origin master --allow-unrelated-histories</code><br>后面加上 –allow-unrelated-histories ， 把两段不相干的 分支进行强行合并</p>\n</blockquote>\n<p><code>git add .</code> &amp;&amp; <code>git commit -m &quot;***&quot;</code> &amp;&amp; <code>git push origin master</code><br><a href=\"http://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories\" target=\"_blank\" rel=\"noopener\">cankao</a></p>\n<h3 id=\"git-branch-错误-fatal-Not-a-valid-object-name-39-master-39\"><a href=\"#git-branch-错误-fatal-Not-a-valid-object-name-39-master-39\" class=\"headerlink\" title=\"git branch 错误 fatal: Not a valid object name: &#39;master&#39;.\"></a>git branch 错误 <code>fatal: Not a valid object name: &#39;master&#39;.</code></h3><p>git项目下没有任何文件可以commit，或没有新项目没有一次commit ,是不能创建分支的；只有先commit之后才会真正建立master分支，此时才可以建立其它分支。</p>\n<p>由于刚创建的git仓库默认的master分支要在第一次有效的commit之后（可以先不push）才会真正建立，否则就像你声明了个对象但没初始化一样。</p>\n"},{"title":"font-end-text","comments":0,"abbrlink":36752,"date":"2019-01-06T19:51:17.000Z","img":null,"_content":"","source":"_posts/font-end-text.md","raw":"---\ntitle: font-end-text\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 36752\ndate: 2019-01-07 03:51:17\nimg:\n---\n","slug":"font-end-text","published":1,"updated":"2019-01-21T04:15:22.608Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvv000d3yxyn3cau0s4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"git基本配置及使用","comments":0,"abbrlink":43167,"date":"2018-12-25T01:23:27.000Z","img":null,"_content":"\nGit是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。\n\ngit 命令\n[TOC]\n\n### 设置git\n\n* 基本配置\n```\n$ git config --global user.name \"charblus\"\n$ git config --global user.email \"charblus7582@gmail.com\"\n\n```\n\n* 生成ssh 密钥\n1. 查看是否已经有了ssh密钥：`cd ~/.ssh` ; 如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥  （email@email.com是github的账号，即上面的email）\n```\n$ ssh-keygen -t rsa -C “email@email.com”\n```\n> 按3个回车，密码为空； 如果不执行第一步或没有删除：第一个回车后会出现coverage 提示你是否覆盖文件 yes/no；最后得到了两个文件：id_rsa和id_rsa.pub\n\n### git remote\n\n```\n git remote 不带参数，列出已经存在的远程分支\n git remote -v | --verbose 列出详细信息，在每一个名字后面列出其远程url\n git remote add origin ssh://***.git   添加远程仓库\n git remote show origin  显示远程信息\n```\n\n### git-flow \n> git-flow 是一个 git 扩展集，按 Vincent Driessen 的分支模型提供高层次的库操作\n[git-flow 备忘清单](http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html)\n\n### git merge 与 git rebase\n* git merge 和 git rebase 都是将远程分支与本地分支合并的一种方法，git merge 会生成一个新的节点，例如A和B都位于同一个HEAD，A提交了2个commit C1和C2，B 提交了2个commit C3和C4，git merge的结果是在C3和C4之后合并生成C5，这样提交历史比较清晰，但多了一个C5\n* 假设A已经将C1和C2 push到了远程分支，那么B 使用git rebase则会将C3和C4缓存到.git/rebase中，恢复到之前的状态，更新C1和C2，然后再将C3和C4作为补丁应用到C2的状态上。结果如下：\n原始状态 ` ->C1->C2->C3'->C4' `，C3'和C4'为git 根据C3和C4生成的补丁，log是一条直线，而且没有多余的C5，但是平行信息丢失。\n[git pull和git pull --rebase之间的区别](https://stackoverflow.com/questions/18930527/difference-between-git-pull-and-git-pull-rebase)\n\n\n### 参考\n[廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)","source":"_posts/git.md","raw":"---\ntitle: git基本配置及使用\ncategories:\n  - 工具\n  - 前端\ntags:\n  - git\n  - 前端\ncomments: false\nabbrlink: 43167\ndate: 2018-12-25 09:23:27\nimg:\n---\n\nGit是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。\n\ngit 命令\n[TOC]\n\n### 设置git\n\n* 基本配置\n```\n$ git config --global user.name \"charblus\"\n$ git config --global user.email \"charblus7582@gmail.com\"\n\n```\n\n* 生成ssh 密钥\n1. 查看是否已经有了ssh密钥：`cd ~/.ssh` ; 如果没有密钥则不会有此文件夹，有则备份删除\n2. 生成密钥  （email@email.com是github的账号，即上面的email）\n```\n$ ssh-keygen -t rsa -C “email@email.com”\n```\n> 按3个回车，密码为空； 如果不执行第一步或没有删除：第一个回车后会出现coverage 提示你是否覆盖文件 yes/no；最后得到了两个文件：id_rsa和id_rsa.pub\n\n### git remote\n\n```\n git remote 不带参数，列出已经存在的远程分支\n git remote -v | --verbose 列出详细信息，在每一个名字后面列出其远程url\n git remote add origin ssh://***.git   添加远程仓库\n git remote show origin  显示远程信息\n```\n\n### git-flow \n> git-flow 是一个 git 扩展集，按 Vincent Driessen 的分支模型提供高层次的库操作\n[git-flow 备忘清单](http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html)\n\n### git merge 与 git rebase\n* git merge 和 git rebase 都是将远程分支与本地分支合并的一种方法，git merge 会生成一个新的节点，例如A和B都位于同一个HEAD，A提交了2个commit C1和C2，B 提交了2个commit C3和C4，git merge的结果是在C3和C4之后合并生成C5，这样提交历史比较清晰，但多了一个C5\n* 假设A已经将C1和C2 push到了远程分支，那么B 使用git rebase则会将C3和C4缓存到.git/rebase中，恢复到之前的状态，更新C1和C2，然后再将C3和C4作为补丁应用到C2的状态上。结果如下：\n原始状态 ` ->C1->C2->C3'->C4' `，C3'和C4'为git 根据C3和C4生成的补丁，log是一条直线，而且没有多余的C5，但是平行信息丢失。\n[git pull和git pull --rebase之间的区别](https://stackoverflow.com/questions/18930527/difference-between-git-pull-and-git-pull-rebase)\n\n\n### 参考\n[廖雪峰git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)","slug":"git","published":1,"updated":"2019-03-26T06:06:53.621Z","layout":"post","photos":[],"link":"","_id":"cjtpdplvx000f3yxysrytgqkn","content":"<p>Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。</p>\n<p>git 命令<br>[TOC]</p>\n<h3 id=\"设置git\"><a href=\"#设置git\" class=\"headerlink\" title=\"设置git\"></a>设置git</h3><ul>\n<li><p>基本配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;charblus&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;charblus7582@gmail.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成ssh 密钥</p>\n</li>\n</ul>\n<ol>\n<li>查看是否已经有了ssh密钥：<code>cd ~/.ssh</code> ; 如果没有密钥则不会有此文件夹，有则备份删除</li>\n<li>生成密钥  （<a href=\"mailto:email@email.com\" target=\"_blank\" rel=\"noopener\">email@email.com</a>是github的账号，即上面的email）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C “email@email.com”</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>按3个回车，密码为空； 如果不执行第一步或没有删除：第一个回车后会出现coverage 提示你是否覆盖文件 yes/no；最后得到了两个文件：id_rsa和id_rsa.pub</p>\n</blockquote>\n<h3 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote 不带参数，列出已经存在的远程分支</span><br><span class=\"line\">git remote -v | --verbose 列出详细信息，在每一个名字后面列出其远程url</span><br><span class=\"line\">git remote add origin ssh://***.git   添加远程仓库</span><br><span class=\"line\">git remote show origin  显示远程信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"git-flow\"><a href=\"#git-flow\" class=\"headerlink\" title=\"git-flow\"></a>git-flow</h3><blockquote>\n<p>git-flow 是一个 git 扩展集，按 Vincent Driessen 的分支模型提供高层次的库操作<br><a href=\"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html\" target=\"_blank\" rel=\"noopener\">git-flow 备忘清单</a></p>\n</blockquote>\n<h3 id=\"git-merge-与-git-rebase\"><a href=\"#git-merge-与-git-rebase\" class=\"headerlink\" title=\"git merge 与 git rebase\"></a>git merge 与 git rebase</h3><ul>\n<li>git merge 和 git rebase 都是将远程分支与本地分支合并的一种方法，git merge 会生成一个新的节点，例如A和B都位于同一个HEAD，A提交了2个commit C1和C2，B 提交了2个commit C3和C4，git merge的结果是在C3和C4之后合并生成C5，这样提交历史比较清晰，但多了一个C5</li>\n<li>假设A已经将C1和C2 push到了远程分支，那么B 使用git rebase则会将C3和C4缓存到.git/rebase中，恢复到之前的状态，更新C1和C2，然后再将C3和C4作为补丁应用到C2的状态上。结果如下：<br>原始状态 <code>-&gt;C1-&gt;C2-&gt;C3&#39;-&gt;C4&#39;</code>，C3’和C4’为git 根据C3和C4生成的补丁，log是一条直线，而且没有多余的C5，但是平行信息丢失。<br><a href=\"https://stackoverflow.com/questions/18930527/difference-between-git-pull-and-git-pull-rebase\" target=\"_blank\" rel=\"noopener\">git pull和git pull –rebase之间的区别</a></li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰git教程</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。</p>\n<p>git 命令<br>[TOC]</p>\n<h3 id=\"设置git\"><a href=\"#设置git\" class=\"headerlink\" title=\"设置git\"></a>设置git</h3><ul>\n<li><p>基本配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git config --global user.name &quot;charblus&quot;</span><br><span class=\"line\">$ git config --global user.email &quot;charblus7582@gmail.com&quot;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成ssh 密钥</p>\n</li>\n</ul>\n<ol>\n<li>查看是否已经有了ssh密钥：<code>cd ~/.ssh</code> ; 如果没有密钥则不会有此文件夹，有则备份删除</li>\n<li>生成密钥  （<a href=\"mailto:email@email.com\" target=\"_blank\" rel=\"noopener\">email@email.com</a>是github的账号，即上面的email）<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh-keygen -t rsa -C “email@email.com”</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<blockquote>\n<p>按3个回车，密码为空； 如果不执行第一步或没有删除：第一个回车后会出现coverage 提示你是否覆盖文件 yes/no；最后得到了两个文件：id_rsa和id_rsa.pub</p>\n</blockquote>\n<h3 id=\"git-remote\"><a href=\"#git-remote\" class=\"headerlink\" title=\"git remote\"></a>git remote</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote 不带参数，列出已经存在的远程分支</span><br><span class=\"line\">git remote -v | --verbose 列出详细信息，在每一个名字后面列出其远程url</span><br><span class=\"line\">git remote add origin ssh://***.git   添加远程仓库</span><br><span class=\"line\">git remote show origin  显示远程信息</span><br></pre></td></tr></table></figure>\n<h3 id=\"git-flow\"><a href=\"#git-flow\" class=\"headerlink\" title=\"git-flow\"></a>git-flow</h3><blockquote>\n<p>git-flow 是一个 git 扩展集，按 Vincent Driessen 的分支模型提供高层次的库操作<br><a href=\"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html\" target=\"_blank\" rel=\"noopener\">git-flow 备忘清单</a></p>\n</blockquote>\n<h3 id=\"git-merge-与-git-rebase\"><a href=\"#git-merge-与-git-rebase\" class=\"headerlink\" title=\"git merge 与 git rebase\"></a>git merge 与 git rebase</h3><ul>\n<li>git merge 和 git rebase 都是将远程分支与本地分支合并的一种方法，git merge 会生成一个新的节点，例如A和B都位于同一个HEAD，A提交了2个commit C1和C2，B 提交了2个commit C3和C4，git merge的结果是在C3和C4之后合并生成C5，这样提交历史比较清晰，但多了一个C5</li>\n<li>假设A已经将C1和C2 push到了远程分支，那么B 使用git rebase则会将C3和C4缓存到.git/rebase中，恢复到之前的状态，更新C1和C2，然后再将C3和C4作为补丁应用到C2的状态上。结果如下：<br>原始状态 <code>-&gt;C1-&gt;C2-&gt;C3&#39;-&gt;C4&#39;</code>，C3’和C4’为git 根据C3和C4生成的补丁，log是一条直线，而且没有多余的C5，但是平行信息丢失。<br><a href=\"https://stackoverflow.com/questions/18930527/difference-between-git-pull-and-git-pull-rebase\" target=\"_blank\" rel=\"noopener\">git pull和git pull –rebase之间的区别</a></li>\n</ul>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰git教程</a></p>\n"},{"title":"Egret引擎开发基础（一）","comments":0,"abbrlink":38481,"date":"2019-01-06T17:25:06.000Z","img":null,"_content":"\n\n\n#### 显示图片\n\n```\n  var batman:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n  batman.x = 0;\n  batman.y = 20;\n  this.addChild( batman );\n\n```\n\n### 改变图片显示深度（层级）\n\n```\n     var batman:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman.x = 0;\n        batman.y = 20;\n        this.addChild( batman );\n\n        var batman1:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman1.x = 60;\n        batman1.y = 60;\n        this.addChild( batman1 );\n\n\n        var batman2:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman2.x = 120;\n        batman2.y = 80;\n        this.addChild( batman2 );\n\n        this.setChildIndex(batman1, this.getChildIndex( batman2 )); // 获取batman2 深度 给batmain1\n\n```\n\n\n#### Tween 动画\n```\n  this.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, () => {\n  egret.Tween.get(batman).to({x: batman1.x}, 300, egret.Ease.circIn )\n  egret.Tween.get(batman1).to({x: batman.x}, 300, egret.Ease.circIn )\n\n  egret.Tween.get( batman1 ).to( {scaleX: .4, scaleY:.4, alpha: .3}, 300, egret.Ease.circIn).to({scaleX: 1, scaleY: 1, alpha: 1}, 300, egret.Ease.circIn)\n  \n  }, this);\n\n\n```\n\n#### 声音\n\n```\n  var sound:egret.Sound = RES.getRes('jimp_mp3'); sound.play();\n\n```\n\n\n### 手册\n[文档](http://edn.egret.com/cn/docs/)\n[命令行手册](http://edn.egret.com/cn/docs/page/582)\n* UI扩展库 旧版GUI 新版EUI\n","source":"_posts/egret-primary.md","raw":"---\ntitle: Egret引擎开发基础（一）\ncategories:\n  - Egret\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 38481\ndate: 2019-01-07 01:25:06\nimg:\n---\n\n\n\n#### 显示图片\n\n```\n  var batman:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n  batman.x = 0;\n  batman.y = 20;\n  this.addChild( batman );\n\n```\n\n### 改变图片显示深度（层级）\n\n```\n     var batman:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman.x = 0;\n        batman.y = 20;\n        this.addChild( batman );\n\n        var batman1:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman1.x = 60;\n        batman1.y = 60;\n        this.addChild( batman1 );\n\n\n        var batman2:egret.Bitmap = new egret.Bitmap( RES.getRes('hexo-huaheshang_png'));\n        batman2.x = 120;\n        batman2.y = 80;\n        this.addChild( batman2 );\n\n        this.setChildIndex(batman1, this.getChildIndex( batman2 )); // 获取batman2 深度 给batmain1\n\n```\n\n\n#### Tween 动画\n```\n  this.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, () => {\n  egret.Tween.get(batman).to({x: batman1.x}, 300, egret.Ease.circIn )\n  egret.Tween.get(batman1).to({x: batman.x}, 300, egret.Ease.circIn )\n\n  egret.Tween.get( batman1 ).to( {scaleX: .4, scaleY:.4, alpha: .3}, 300, egret.Ease.circIn).to({scaleX: 1, scaleY: 1, alpha: 1}, 300, egret.Ease.circIn)\n  \n  }, this);\n\n\n```\n\n#### 声音\n\n```\n  var sound:egret.Sound = RES.getRes('jimp_mp3'); sound.play();\n\n```\n\n\n### 手册\n[文档](http://edn.egret.com/cn/docs/)\n[命令行手册](http://edn.egret.com/cn/docs/page/582)\n* UI扩展库 旧版GUI 新版EUI\n","slug":"egret-primary","published":1,"updated":"2019-03-26T06:04:47.160Z","layout":"post","photos":[],"link":"","_id":"cjtpdplw0000i3yxyi013wbom","content":"<h4 id=\"显示图片\"><a href=\"#显示图片\" class=\"headerlink\" title=\"显示图片\"></a>显示图片</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var batman:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">batman.x = 0;</span><br><span class=\"line\">batman.y = 20;</span><br><span class=\"line\">this.addChild( batman );</span><br></pre></td></tr></table></figure>\n<h3 id=\"改变图片显示深度（层级）\"><a href=\"#改变图片显示深度（层级）\" class=\"headerlink\" title=\"改变图片显示深度（层级）\"></a>改变图片显示深度（层级）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var batman:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman.x = 0;</span><br><span class=\"line\">   batman.y = 20;</span><br><span class=\"line\">   this.addChild( batman );</span><br><span class=\"line\"></span><br><span class=\"line\">   var batman1:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman1.x = 60;</span><br><span class=\"line\">   batman1.y = 60;</span><br><span class=\"line\">   this.addChild( batman1 );</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   var batman2:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman2.x = 120;</span><br><span class=\"line\">   batman2.y = 80;</span><br><span class=\"line\">   this.addChild( batman2 );</span><br><span class=\"line\"></span><br><span class=\"line\">   this.setChildIndex(batman1, this.getChildIndex( batman2 )); // 获取batman2 深度 给batmain1</span><br></pre></td></tr></table></figure>\n<h4 id=\"Tween-动画\"><a href=\"#Tween-动画\" class=\"headerlink\" title=\"Tween 动画\"></a>Tween 动画</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, () =&gt; &#123;</span><br><span class=\"line\">egret.Tween.get(batman).to(&#123;x: batman1.x&#125;, 300, egret.Ease.circIn )</span><br><span class=\"line\">egret.Tween.get(batman1).to(&#123;x: batman.x&#125;, 300, egret.Ease.circIn )</span><br><span class=\"line\"></span><br><span class=\"line\">egret.Tween.get( batman1 ).to( &#123;scaleX: .4, scaleY:.4, alpha: .3&#125;, 300, egret.Ease.circIn).to(&#123;scaleX: 1, scaleY: 1, alpha: 1&#125;, 300, egret.Ease.circIn)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;, this);</span><br></pre></td></tr></table></figure>\n<h4 id=\"声音\"><a href=\"#声音\" class=\"headerlink\" title=\"声音\"></a>声音</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var sound:egret.Sound = RES.getRes(&apos;jimp_mp3&apos;); sound.play();</span><br></pre></td></tr></table></figure>\n<h3 id=\"手册\"><a href=\"#手册\" class=\"headerlink\" title=\"手册\"></a>手册</h3><p><a href=\"http://edn.egret.com/cn/docs/\" target=\"_blank\" rel=\"noopener\">文档</a><br><a href=\"http://edn.egret.com/cn/docs/page/582\" target=\"_blank\" rel=\"noopener\">命令行手册</a></p>\n<ul>\n<li>UI扩展库 旧版GUI 新版EUI</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"显示图片\"><a href=\"#显示图片\" class=\"headerlink\" title=\"显示图片\"></a>显示图片</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var batman:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">batman.x = 0;</span><br><span class=\"line\">batman.y = 20;</span><br><span class=\"line\">this.addChild( batman );</span><br></pre></td></tr></table></figure>\n<h3 id=\"改变图片显示深度（层级）\"><a href=\"#改变图片显示深度（层级）\" class=\"headerlink\" title=\"改变图片显示深度（层级）\"></a>改变图片显示深度（层级）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var batman:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman.x = 0;</span><br><span class=\"line\">   batman.y = 20;</span><br><span class=\"line\">   this.addChild( batman );</span><br><span class=\"line\"></span><br><span class=\"line\">   var batman1:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman1.x = 60;</span><br><span class=\"line\">   batman1.y = 60;</span><br><span class=\"line\">   this.addChild( batman1 );</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">   var batman2:egret.Bitmap = new egret.Bitmap( RES.getRes(&apos;hexo-huaheshang_png&apos;));</span><br><span class=\"line\">   batman2.x = 120;</span><br><span class=\"line\">   batman2.y = 80;</span><br><span class=\"line\">   this.addChild( batman2 );</span><br><span class=\"line\"></span><br><span class=\"line\">   this.setChildIndex(batman1, this.getChildIndex( batman2 )); // 获取batman2 深度 给batmain1</span><br></pre></td></tr></table></figure>\n<h4 id=\"Tween-动画\"><a href=\"#Tween-动画\" class=\"headerlink\" title=\"Tween 动画\"></a>Tween 动画</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">this.stage.addEventListener(egret.TouchEvent.TOUCH_TAP, () =&gt; &#123;</span><br><span class=\"line\">egret.Tween.get(batman).to(&#123;x: batman1.x&#125;, 300, egret.Ease.circIn )</span><br><span class=\"line\">egret.Tween.get(batman1).to(&#123;x: batman.x&#125;, 300, egret.Ease.circIn )</span><br><span class=\"line\"></span><br><span class=\"line\">egret.Tween.get( batman1 ).to( &#123;scaleX: .4, scaleY:.4, alpha: .3&#125;, 300, egret.Ease.circIn).to(&#123;scaleX: 1, scaleY: 1, alpha: 1&#125;, 300, egret.Ease.circIn)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;, this);</span><br></pre></td></tr></table></figure>\n<h4 id=\"声音\"><a href=\"#声音\" class=\"headerlink\" title=\"声音\"></a>声音</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var sound:egret.Sound = RES.getRes(&apos;jimp_mp3&apos;); sound.play();</span><br></pre></td></tr></table></figure>\n<h3 id=\"手册\"><a href=\"#手册\" class=\"headerlink\" title=\"手册\"></a>手册</h3><p><a href=\"http://edn.egret.com/cn/docs/\" target=\"_blank\" rel=\"noopener\">文档</a><br><a href=\"http://edn.egret.com/cn/docs/page/582\" target=\"_blank\" rel=\"noopener\">命令行手册</a></p>\n<ul>\n<li>UI扩展库 旧版GUI 新版EUI</li>\n</ul>\n"},{"title":"node包管理工具--nvm","comments":0,"abbrlink":8241,"date":"2018-12-26T18:04:27.000Z","img":null,"_content":"\n> mac 用nvm 管理node版本; (直接使用npm安装nrm, 不需要其他配置)\n> windows 安装nvw-windows 使用nvm工具； \n\n#### windows使用nvm-noinstall.zip安装\n> nvm-noinstall.zip 这个是绿色免安装版本，但是使用之前需要配置\n1. [nvm-windows 下载](https://github.com/coreybutler/nvm-windows/releases) \n 下载最新版本 Assets下 nvm-noinstall.zip文件\n\n2. 把nvm_noinstall.zip解压到比如 `C:/dev/nvm` 中(其它盘也可以)；\n\n3. 右键以管理员的身份运行install.cmd . 直接按回车,在C盘根目录下会生成一个settins,txt.并拷贝到C:/dev/nvm.修改内容:\n\n```\nroot: C:\\dev\\nvm\npath: C:\\dev\\nodejs\narch: 64\nproxy: none\nnode_mirror: http://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n\n```\n> root 配置为当前nvm.exe所在的目录；\n> path 配置为node快捷方式所在的目录；\n> arch 配置为当前操作系统的位数（32/64）；\n> proxy 表示代理，一般不用配置，有的直接设置为none；\n> 使用nvm install 8.11.1 下载node v8.11.1 版本，可能网速慢或者需要翻墙导致error下载失败，这里配置使用淘宝node镜像node_mirror和淘宝npm镜像npm_mirror\n\n4. 配置环境变量\n   打开‘控制面板主页->高级系统设置->高级->环境变量’后会有‘用户变量’和‘系统变量’两个选项，建议在‘用户变量’里面设置:\n   ```\n    变量名: NVM_HOME    变量值: C:\\dev\\nvm\n    变量名: NVM_SYMLINK 变量值: C:\\dev\\nodejs\n    变量名: PATH:       变量值: %NVM_HOME%;%NVM_SYMLINK%  (在PATH的最后添加%NVM_HOME%;%NVM_SYMLINK%)\n   ```\n5. npm 相关配置\n   * npm全局安装\n    - `npm config set prefix \"c:\\dev\\nvm\\npm\"`  配置用npm下载包时全局安装的包路径\n   * 配置npm环境变量\n    - 变量名: NPM_HOME 变量值: c:\\dev\\nvm\\npm (一定要放在NVM_SYMLINK之前;第4步：在PATH的最后添加%NVM_HOME%;%NPM_HOME%;%NVM_SYMLINK%);\n\n6. nrm 安装和使用\n   直接下载： `npm install –g nrm` \n   镜像下载： `npm install nrm –g --registry=https://registry.npm.taobao.org`\n\n   ```bash\n   nrm ls         // 列出所有镜像(下载源)\n   nrm use taobao     // 选择使用淘宝镜像\n   ```\n\n7. nvm 使用\n   * `nvm list` 列出所有已经安装的nodejs版本\n   * `nvm install lastest ` 下载最新版本的nodejs\n   * `nvm install 8.11.1 ` 下载版本为v8.11.1的nodejs\n   * `nvm use 8.11.1`   使用指定版本 为v8.11.1的nodejs (注意：如果操作系统为32位的，使用nvm use [版本号] 命令时，后面要加上32。也就是nvm use 8.11.1 32 ）\n   * `nvm ls available` 查看可用的（可下载的）全部node版本\n\n   > `node -v` 查看nodejs的版本号\n","source":"_posts/node-nvm.md","raw":"---\ntitle: node包管理工具--nvm\ncategories:\n  - 前端\n  - 工具\ntags:\n  - node\n  - 前端\ncomments: false\nabbrlink: 8241\ndate: 2018-12-27 02:04:27\nimg:\n---\n\n> mac 用nvm 管理node版本; (直接使用npm安装nrm, 不需要其他配置)\n> windows 安装nvw-windows 使用nvm工具； \n\n#### windows使用nvm-noinstall.zip安装\n> nvm-noinstall.zip 这个是绿色免安装版本，但是使用之前需要配置\n1. [nvm-windows 下载](https://github.com/coreybutler/nvm-windows/releases) \n 下载最新版本 Assets下 nvm-noinstall.zip文件\n\n2. 把nvm_noinstall.zip解压到比如 `C:/dev/nvm` 中(其它盘也可以)；\n\n3. 右键以管理员的身份运行install.cmd . 直接按回车,在C盘根目录下会生成一个settins,txt.并拷贝到C:/dev/nvm.修改内容:\n\n```\nroot: C:\\dev\\nvm\npath: C:\\dev\\nodejs\narch: 64\nproxy: none\nnode_mirror: http://npm.taobao.org/mirrors/node/\nnpm_mirror: https://npm.taobao.org/mirrors/npm/\n\n```\n> root 配置为当前nvm.exe所在的目录；\n> path 配置为node快捷方式所在的目录；\n> arch 配置为当前操作系统的位数（32/64）；\n> proxy 表示代理，一般不用配置，有的直接设置为none；\n> 使用nvm install 8.11.1 下载node v8.11.1 版本，可能网速慢或者需要翻墙导致error下载失败，这里配置使用淘宝node镜像node_mirror和淘宝npm镜像npm_mirror\n\n4. 配置环境变量\n   打开‘控制面板主页->高级系统设置->高级->环境变量’后会有‘用户变量’和‘系统变量’两个选项，建议在‘用户变量’里面设置:\n   ```\n    变量名: NVM_HOME    变量值: C:\\dev\\nvm\n    变量名: NVM_SYMLINK 变量值: C:\\dev\\nodejs\n    变量名: PATH:       变量值: %NVM_HOME%;%NVM_SYMLINK%  (在PATH的最后添加%NVM_HOME%;%NVM_SYMLINK%)\n   ```\n5. npm 相关配置\n   * npm全局安装\n    - `npm config set prefix \"c:\\dev\\nvm\\npm\"`  配置用npm下载包时全局安装的包路径\n   * 配置npm环境变量\n    - 变量名: NPM_HOME 变量值: c:\\dev\\nvm\\npm (一定要放在NVM_SYMLINK之前;第4步：在PATH的最后添加%NVM_HOME%;%NPM_HOME%;%NVM_SYMLINK%);\n\n6. nrm 安装和使用\n   直接下载： `npm install –g nrm` \n   镜像下载： `npm install nrm –g --registry=https://registry.npm.taobao.org`\n\n   ```bash\n   nrm ls         // 列出所有镜像(下载源)\n   nrm use taobao     // 选择使用淘宝镜像\n   ```\n\n7. nvm 使用\n   * `nvm list` 列出所有已经安装的nodejs版本\n   * `nvm install lastest ` 下载最新版本的nodejs\n   * `nvm install 8.11.1 ` 下载版本为v8.11.1的nodejs\n   * `nvm use 8.11.1`   使用指定版本 为v8.11.1的nodejs (注意：如果操作系统为32位的，使用nvm use [版本号] 命令时，后面要加上32。也就是nvm use 8.11.1 32 ）\n   * `nvm ls available` 查看可用的（可下载的）全部node版本\n\n   > `node -v` 查看nodejs的版本号\n","slug":"node-nvm","published":1,"updated":"2019-01-21T04:15:22.610Z","layout":"post","photos":[],"link":"","_id":"cjtpdplw3000l3yxywduknkt3","content":"<blockquote>\n<p>mac 用nvm 管理node版本; (直接使用npm安装nrm, 不需要其他配置)<br>windows 安装nvw-windows 使用nvm工具； </p>\n</blockquote>\n<h4 id=\"windows使用nvm-noinstall-zip安装\"><a href=\"#windows使用nvm-noinstall-zip安装\" class=\"headerlink\" title=\"windows使用nvm-noinstall.zip安装\"></a>windows使用nvm-noinstall.zip安装</h4><blockquote>\n<p>nvm-noinstall.zip 这个是绿色免安装版本，但是使用之前需要配置</p>\n<ol>\n<li><a href=\"https://github.com/coreybutler/nvm-windows/releases\" target=\"_blank\" rel=\"noopener\">nvm-windows 下载</a><br>下载最新版本 Assets下 nvm-noinstall.zip文件</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li><p>把nvm_noinstall.zip解压到比如 <code>C:/dev/nvm</code> 中(其它盘也可以)；</p>\n</li>\n<li><p>右键以管理员的身份运行install.cmd . 直接按回车,在C盘根目录下会生成一个settins,txt.并拷贝到C:/dev/nvm.修改内容:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root: C:\\dev\\nvm</span><br><span class=\"line\">path: C:\\dev\\nodejs</span><br><span class=\"line\">arch: 64</span><br><span class=\"line\">proxy: none</span><br><span class=\"line\">node_mirror: http://npm.taobao.org/mirrors/node/</span><br><span class=\"line\">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>root 配置为当前nvm.exe所在的目录；<br>path 配置为node快捷方式所在的目录；<br>arch 配置为当前操作系统的位数（32/64）；<br>proxy 表示代理，一般不用配置，有的直接设置为none；<br>使用nvm install 8.11.1 下载node v8.11.1 版本，可能网速慢或者需要翻墙导致error下载失败，这里配置使用淘宝node镜像node_mirror和淘宝npm镜像npm_mirror</p>\n</blockquote>\n<ol start=\"4\">\n<li><p>配置环境变量<br>打开‘控制面板主页-&gt;高级系统设置-&gt;高级-&gt;环境变量’后会有‘用户变量’和‘系统变量’两个选项，建议在‘用户变量’里面设置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名: NVM_HOME    变量值: C:\\dev\\nvm</span><br><span class=\"line\">变量名: NVM_SYMLINK 变量值: C:\\dev\\nodejs</span><br><span class=\"line\">变量名: PATH:       变量值: %NVM_HOME%;%NVM_SYMLINK%  (在PATH的最后添加%NVM_HOME%;%NVM_SYMLINK%)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>npm 相关配置</p>\n<ul>\n<li>npm全局安装<ul>\n<li><code>npm config set prefix &quot;c:\\dev\\nvm\\npm&quot;</code>  配置用npm下载包时全局安装的包路径</li>\n</ul>\n</li>\n<li>配置npm环境变量<ul>\n<li>变量名: NPM_HOME 变量值: c:\\dev\\nvm\\npm (一定要放在NVM_SYMLINK之前;第4步：在PATH的最后添加%NVM_HOME%;%NPM_HOME%;%NVM_SYMLINK%);</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>nrm 安装和使用<br>直接下载： <code>npm install –g nrm</code><br>镜像下载： <code>npm install nrm –g --registry=https://registry.npm.taobao.org</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm ls         // 列出所有镜像(下载源)</span><br><span class=\"line\">nrm use taobao     // 选择使用淘宝镜像</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>nvm 使用</p>\n<ul>\n<li><code>nvm list</code> 列出所有已经安装的nodejs版本</li>\n<li><code>nvm install lastest</code> 下载最新版本的nodejs</li>\n<li><code>nvm install 8.11.1</code> 下载版本为v8.11.1的nodejs</li>\n<li><code>nvm use 8.11.1</code>   使用指定版本 为v8.11.1的nodejs (注意：如果操作系统为32位的，使用nvm use [版本号] 命令时，后面要加上32。也就是nvm use 8.11.1 32 ）</li>\n<li><code>nvm ls available</code> 查看可用的（可下载的）全部node版本</li>\n</ul>\n<blockquote>\n<p><code>node -v</code> 查看nodejs的版本号</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>mac 用nvm 管理node版本; (直接使用npm安装nrm, 不需要其他配置)<br>windows 安装nvw-windows 使用nvm工具； </p>\n</blockquote>\n<h4 id=\"windows使用nvm-noinstall-zip安装\"><a href=\"#windows使用nvm-noinstall-zip安装\" class=\"headerlink\" title=\"windows使用nvm-noinstall.zip安装\"></a>windows使用nvm-noinstall.zip安装</h4><blockquote>\n<p>nvm-noinstall.zip 这个是绿色免安装版本，但是使用之前需要配置</p>\n<ol>\n<li><a href=\"https://github.com/coreybutler/nvm-windows/releases\" target=\"_blank\" rel=\"noopener\">nvm-windows 下载</a><br>下载最新版本 Assets下 nvm-noinstall.zip文件</li>\n</ol>\n</blockquote>\n<ol start=\"2\">\n<li><p>把nvm_noinstall.zip解压到比如 <code>C:/dev/nvm</code> 中(其它盘也可以)；</p>\n</li>\n<li><p>右键以管理员的身份运行install.cmd . 直接按回车,在C盘根目录下会生成一个settins,txt.并拷贝到C:/dev/nvm.修改内容:</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root: C:\\dev\\nvm</span><br><span class=\"line\">path: C:\\dev\\nodejs</span><br><span class=\"line\">arch: 64</span><br><span class=\"line\">proxy: none</span><br><span class=\"line\">node_mirror: http://npm.taobao.org/mirrors/node/</span><br><span class=\"line\">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>root 配置为当前nvm.exe所在的目录；<br>path 配置为node快捷方式所在的目录；<br>arch 配置为当前操作系统的位数（32/64）；<br>proxy 表示代理，一般不用配置，有的直接设置为none；<br>使用nvm install 8.11.1 下载node v8.11.1 版本，可能网速慢或者需要翻墙导致error下载失败，这里配置使用淘宝node镜像node_mirror和淘宝npm镜像npm_mirror</p>\n</blockquote>\n<ol start=\"4\">\n<li><p>配置环境变量<br>打开‘控制面板主页-&gt;高级系统设置-&gt;高级-&gt;环境变量’后会有‘用户变量’和‘系统变量’两个选项，建议在‘用户变量’里面设置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名: NVM_HOME    变量值: C:\\dev\\nvm</span><br><span class=\"line\">变量名: NVM_SYMLINK 变量值: C:\\dev\\nodejs</span><br><span class=\"line\">变量名: PATH:       变量值: %NVM_HOME%;%NVM_SYMLINK%  (在PATH的最后添加%NVM_HOME%;%NVM_SYMLINK%)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>npm 相关配置</p>\n<ul>\n<li>npm全局安装<ul>\n<li><code>npm config set prefix &quot;c:\\dev\\nvm\\npm&quot;</code>  配置用npm下载包时全局安装的包路径</li>\n</ul>\n</li>\n<li>配置npm环境变量<ul>\n<li>变量名: NPM_HOME 变量值: c:\\dev\\nvm\\npm (一定要放在NVM_SYMLINK之前;第4步：在PATH的最后添加%NVM_HOME%;%NPM_HOME%;%NVM_SYMLINK%);</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>nrm 安装和使用<br>直接下载： <code>npm install –g nrm</code><br>镜像下载： <code>npm install nrm –g --registry=https://registry.npm.taobao.org</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nrm ls         // 列出所有镜像(下载源)</span><br><span class=\"line\">nrm use taobao     // 选择使用淘宝镜像</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>nvm 使用</p>\n<ul>\n<li><code>nvm list</code> 列出所有已经安装的nodejs版本</li>\n<li><code>nvm install lastest</code> 下载最新版本的nodejs</li>\n<li><code>nvm install 8.11.1</code> 下载版本为v8.11.1的nodejs</li>\n<li><code>nvm use 8.11.1</code>   使用指定版本 为v8.11.1的nodejs (注意：如果操作系统为32位的，使用nvm use [版本号] 命令时，后面要加上32。也就是nvm use 8.11.1 32 ）</li>\n<li><code>nvm ls available</code> 查看可用的（可下载的）全部node版本</li>\n</ul>\n<blockquote>\n<p><code>node -v</code> 查看nodejs的版本号</p>\n</blockquote>\n</li>\n</ol>\n"},{"title":"scss","comments":0,"abbrlink":20366,"date":"2019-01-09T19:59:01.000Z","img":null,"_content":"\n### sass嵌套\n1. 选择器嵌套\n> 这里的 & 代表 nav a ,理解起来有点 像js中this 的意思\n\n```html\n<header>\n    <nav>\n        <a href=\"#\">home</a>\n        <a href=\"#\">page</a>\n    </nav>\n</header>\n\n```\n\n```css\n\n    nav a {\n        color:red;\n    }\n    header nav a {\n        color:green;\n    }\n```\n\n```scss\nnav {\n  a {\n    color: red;\n    \n    header & {\n      color:green;\n    }\n  }  \n}\n```\n\n2. 属性嵌套(有相同的属性前缀)\n> 如 font, background等，也有可能是 -webkit-\n\n```css\n.box {\n     font-size: 12px;\n     font-weight: bold;\n}\n```\n\n```scss\n.box {\n  font: {\n   size: 12px;\n   weight: bold;\n  }  \n}\n```\n\n3. 伪类嵌套\n> 同上选择器嵌套一样  使用 & 关键字 \n\n```scss\n.clearfix{\n&:before,\n&:after {\n    content:\"\";\n    display: table;\n  }\n&:after {\n    clear:both;\n    overflow: hidden;\n  }\n}\n```\n\n```css\nclearfix:before, .clearfix:after {\n  content: \"\";\n  display: table;\n}\n.clearfix:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n### 占位符：\n语法：%placeholder，\b\n用法：占位符不被 @extend 调用不产生任何代码\n\n```scss\n%bg {\n  background-color: #FF0;\n}\n%w {\n  width: 100px;\n}\n.box {\n  @extend %w;\n  height: 100px;\n  @extend %bg;\n}\n```\n\n### sass 语法\n允许使用变量 以 $ 开头\n\n```\n$test: #ff9500\ndiv{\n       color: $test;\n}\n```\n\n也可以字符串拼接\n\n```\n$side : left;\n  \n.rounded { \n        border-#{$side}-radius: 5px;\n }\n```\n\n也可以加减乘除 简单计算\n\n\n\n\n### sass分享：\n内容：全局、默认、局部变量\n使用：默认变量 在局部中无效，覆盖 默认变量 不分上下顺序\n\n```html\n<div class=\"box1\">\n  <div class=\"box2\">box2</div>\n</div>\n```\n\n```scss\n$backgroundColor: #FF0;                  // 全局变量\n$backgroundColor: #000 !default;      // 默认变量\n$color: #F0F;\n\n.box1 {\n  $color: #CCC;                                   // 局部变量\n  width: 100px;\n  height: 100px;\n  background-color: $backgroundColor; // #FF0\n  .box2 {\n    color: $color;                                      // #CCC\n  }\n}\n```\n\n\n### 控制指令 (Control Directives)\n混合指令\n\nmixin  技术文档翻译  混合类型\nmixing  混合 （mix 的现在分词）\n\nmixin    sass官方文档称  混合指令\n@mixin  为定义混合指令\n@include   为引用楼上定义的混合指令\n\n```html\n<div class= \"parent\">\n111\n</div>\n<div class= \"child\">\n222\n</div>\n<div class= \"test\">\n333\n</div>\n\n```\n\n```scss\n.parent {\n  color: red;\n}\n.child {\n  @extend .parent;\n  font-size: (21px * 3);\n}\n@minxin auto {\n  margin: 0 auto;\n}\n.test {\n  width: 200px;\n  @include auto;\n}\n\n```\n\n####  sass 的 @if  控制指令\n\n```html\n<div class=\"demo\"></div>\n\n```\n\n单独使用@if：\n> 当@if 的表达式不是false或者null时， 条件成立， 输出{} 内的代码\n\n```scss\n.demo{\n  $fx: bottom;\n  @if ($fx == top) {\n    border-color: transparent transparent pink transparent;\n    border-style: dashed dashed solid dashed;\n  }\n  @else if($fx == right){\n    border-color: transparent transparent transparent pink;\n    border-style: dashed dashed dashed solid;\n  }\n  @else if($fx == bottom){\n    border-color: pink transparent transparent transparent;\n    border-style: solid dashed dashed dashed;\n  }\n  @else if($fx == left){\n    border-color: transparent pink transparent transparent;\n    border-style: dashed solid dashed dashed;\n  }\n\n  width: 0px;\n  height: 0px;\n  overflow: hidden;\n  border-width: 60px;\n}\n\n```\n\n混合指令 + @if 指令\n\n```scss\n// 画三角形@mixin声明\n@mixin sj($fx:top,$size:100px,$color:red){\n\n  @if ($fx == top) {\n    border-color: transparent transparent $color transparent;\n    border-style: dashed dashed solid dashed;\n  }\n  @else if($fx == right){\n    border-color: transparent transparent transparent $color;\n    border-style: dashed dashed dashed solid;\n  }\n  @else if($fx == bottom){\n    border-color: $color transparent transparent transparent;\n    border-style: solid dashed dashed dashed;\n  }\n  @else if($fx == left){\n    border-color: transparent $color transparent transparent;\n    border-style: dashed solid dashed dashed;\n  }\n\n  width: 0px;\n  height: 0px;\n  overflow: hidden;\n  border-width: $size;\n\n}\n\n//mixin的调用\n.demo{\n  @include sj(left, 66px, pink);\n}\n```\n\n\n\nless 与sass有个很明显的区别\n变量\n 咱们sass 变量用   $  开头     \nless  是以 @ 开头的\n\n\n###  sass语法  @for 控制指令\n> @for 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动；\n\n这个指令包含两种格式：\n@for $var from <start> through <end>，\n  或者\n  @for $var from <start> to <end>\n\n\n```html\n<ul>\n  <li class=\"item-1\">至尊魔法师</li>\n  <li class=\"item-2\">王</li>\n  <li class=\"item-3\">奇异博士</li>\n  <li class=\"item-4\">莫度男爵</li>\n  <li class=\"item-5\">哈姆雷特</li>\n  <li class=\"item-6\">蜘蛛侠</li>\n  <li class=\"item-7\">非人哉</li>\n</ul>\n\n```\n\nfrom ... through\n\n// 当使用 through 时，条件范围包含 <start> 与 <end> 的值\n\n// 个人分析： 可以将一个页面，不同div中嵌套的元素设置样式，只要命名符合一定的规律\n\n```scss\n@for $i from 1 through 7 {\n  .item-#{$i} { \n    width: 6em * $i;\n    background: pink;\n    margin: 6px 0;\n  }\n}\n```\n\nfrom ... to\n> 使用 to 时条件范围只包含 <start> 的值不包含 <end> 的值。另外，$var 可以是任何变量，比如 $i；<start> 和 <end> 必须是整数值。\n```scss\n@for $i from 1 to 7 {\n  .item-#{$i} { \n    width: 6em * $i;\n    background: pink;\n    margin: 6px 0;\n  }\n}\n\n```\n\n\n\n```\n@each $usr in nezha, aolie, xiaoyu, xiaotian {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n     }\n}\n```\n\n\n\n@each 后面的 $usr 变量用于保存每次遍历到的元素，然后使用差值语法（#{var}）来拼接正确的图片路径\n\n\n\n\n//@each 指令同样可以用于循环输出，和 @for 的差别在于，@each 通过遍历 list 或者 map 实现循环输出\n// 如果遍历的对象是一个 map，那么我们就可以使用两个变量来存储元素的 key 和 value\n\n```\n$frz: ( usr1:xiaotian, usr2:sanyan, usr3:shancai, usr4:longnv );\n\n@each $key, $usr in $frz {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n    }\n}\n\n```\n\n\n运算的坑\n> 加号居然可以不需要空格隔开,但必须单位统一\n\n```scss\n\n$sidebar-width: 220px;\n$content-width: 720px;\n$gap-width: 20px;\n$other-width: 2em;\n\n.container {\n    // width: $sidebar-width+$content-width + $gap-width;\n    width: $sidebar-width + $other-width;\n    margin: 0 auto;\n}\n\n```\n\n\n>  还可以做字符连接\n\n1. 如果有引号的字符串被添加了一个没有引号的字符串 （也就是，带引号的字符串在 + 符号左侧）， 结果会是一个有引号的字符串。 \n2. 如果一个没有引号的字符串被添加了一个有引号的字符串 （没有引号的字符串在 + 符号左侧）， 结果将是一个没有引号的字符串。\n\n\n```scss\np:before {\n  content: \"bing\" + jian;\n  font-family: sans- + \"serif\";\n}\n```\n\n编译后\n\n\n```css\np:before {\n  content: \"bingjian\";\n  font-family: sans-serif;\n}\n```\n\n\n> 减法 - 需要注意空格了，否则就完蛋喽\n\n```scss\n$full-width: 960px;\n$sidebar-width: 200px;\n\n.content {\n  width: $full-width - $sidebar-width;\n}\n```\n> 乘法\n能够支持多种单位（比如 em ,px , %）；\n如果进行乘法运算时，两个值单位相同时，只需要为一个数值提供单位即可(多个乘数中只需要一个乘数提供单位，否则报错)。\n\n```scss\n.box {\n  width: 10px * 2;\n}\n```\n否则\n\n```\n.box {\n  width: 10px * 6px;\n}\n```\n> error: 60px*px isn't a valid CSS value.\n\n\n> 除法\n\n众所周知“/”符号在 CSS 中已做为一种符号使用。其在 CSS 中通常起到分隔数字的用途，\n因此在 Sass 中做除法运算时，直接使用“/”符号做为除号时，将不会生效，\n编译时既得不到我们需要的效果，也不会报错。\n需要给运算的外面添加一个小括号()才能执行除法运算\n\n```scss\n.box {\n  width: (100px / 2);\n}\n```\n\n总结: ”/  ”符号被当作除法运算符时有以下几种情况：\n   　　 如果数值或它的任意部分是存储在一个变量中或是函数的返回值。\n    　　如果数值被圆括号包围。\n    　　如果数值是另一个数学表达式的一部分。\n\n\n```scss\np {\n  font: 10px/8px;        // 纯 CSS，不是除法运算\n  $width: 1000px;\n  width: $width/2;          // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了圆括号，是除法运算\n  margin-left: 5px + 8px/2px;  // 使用了加（+）号，是除法运算\n}\n\n```\n\n\n还有一种情况\n> Sass 的除法运算还有一个情况。先回忆一下，在乘法运算时，如果两个值带有相同单位时，做乘法运算时，出来的结果并不是我们需要的结果。但在除法运算时，如果两个值带有相同的单位值时，除法运算之后会得到一个不带单位的数值。　\n\n```scss\n.box {\n  width: (1000px / 100px);ß\n}\n```\n\n> 颜色运算 - 分段运算\n\n　　所有算数运算都支持颜色值，并且是分段运算的。也就是说，红、绿和蓝各颜色分段单独进行运算。如：\n\n```scss\np {\n  background-color: #012423 + #120923;\n  color: #324334 * 2\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 有顺工作\n\n将所有的Mixins、Placeholder、Functions和变量放置在一起。将他们放置一起，可以确认他们可以很快的编写以及将来重复使用。\n\n1. 整站的元素应该放在一个base文件夹中。base文件夹应该包括全局的变量，如字体和颜色等\n2. 对于特定模块的Mixins、Functions 和变量，为了保证模块能正常运行，需要将这些集中放置在module文件中\n\n\n### 限制嵌套\n**使用嵌套的黄金规则：**\n\n1. 嵌套永远不要超过三个层级\n2. 确保输出的CSS简洁、可重用\n3. 使用嵌套是很有意义的，而不是默认选项\n\n> 过度的嵌套会导致很多问题的发生,代码变得复杂，而且太过于依赖HTML结构。这样将导致后面的样式需要使用!important来覆盖\n\n\n\n\n## scss 基本用法\n\n1. 变量（局部/全局）声明：$+变量名：变量值；默认变量在变量名后加default，!global变成全局变量。\n2. 混合宏（可重用的代码块）：声明混合宏@mixin border-radius { }； 调用混合宏 @include。 border-radius; 声明的时候还可以带默认参数，调用可以传参。\n3. 继承： @extend .btn; 继承btn class。任何选择器都能继承，可以连续继承。\n4. 占位符%：占位符声明的代码如果不被@extend调用，就不会被编译产生css代码。\n5. 插值：#{$参数名}，插入传入或定义的参数。\n6. 注释：/* */ :会在编译出来的css文件中显示；//内容：不会显示。/!/：重要注释，任何style的css文件中都会有，一般放置css文件版权说明等信息。\n7. 加减法：同单位的数值之间可以做加减法。\n8. 乘除法：只能乘数值；如果除式中没有变量或者不是在一个数学表达式中（有加法减法等），就要将除式运算用小括号括起来，否则“/”不会被当做除号运算。\n9. 颜色运算：算术运算都支持颜色值，并且是分段计算的，01+05=06\n10. 字符串连接：+，$content: \"Hello\" + \"\" + \"Sass!\";cursor: e + -resize；有引号的字符串和没有引号的字符串相加，以左边字符有无引号为准。\n11. 父类选择器：&，表示引用父元素，\n12. if语法：@if,@else,\n13. 循环语法：@for,@while,@each,\n14. 函数：@function double ($number){ @return $number*2; }\n15. import：导入其他的scss\n\n","source":"_posts/scss.md","raw":"---\ntitle: scss\ncategories:\n  - 前端\n  - 分类2\ntags:\n  - 前端\n  - css\ncomments: false\nabbrlink: 20366\ndate: 2019-01-10 03:59:01\nimg:\n---\n\n### sass嵌套\n1. 选择器嵌套\n> 这里的 & 代表 nav a ,理解起来有点 像js中this 的意思\n\n```html\n<header>\n    <nav>\n        <a href=\"#\">home</a>\n        <a href=\"#\">page</a>\n    </nav>\n</header>\n\n```\n\n```css\n\n    nav a {\n        color:red;\n    }\n    header nav a {\n        color:green;\n    }\n```\n\n```scss\nnav {\n  a {\n    color: red;\n    \n    header & {\n      color:green;\n    }\n  }  \n}\n```\n\n2. 属性嵌套(有相同的属性前缀)\n> 如 font, background等，也有可能是 -webkit-\n\n```css\n.box {\n     font-size: 12px;\n     font-weight: bold;\n}\n```\n\n```scss\n.box {\n  font: {\n   size: 12px;\n   weight: bold;\n  }  \n}\n```\n\n3. 伪类嵌套\n> 同上选择器嵌套一样  使用 & 关键字 \n\n```scss\n.clearfix{\n&:before,\n&:after {\n    content:\"\";\n    display: table;\n  }\n&:after {\n    clear:both;\n    overflow: hidden;\n  }\n}\n```\n\n```css\nclearfix:before, .clearfix:after {\n  content: \"\";\n  display: table;\n}\n.clearfix:after {\n  clear: both;\n  overflow: hidden;\n}\n```\n\n### 占位符：\n语法：%placeholder，\b\n用法：占位符不被 @extend 调用不产生任何代码\n\n```scss\n%bg {\n  background-color: #FF0;\n}\n%w {\n  width: 100px;\n}\n.box {\n  @extend %w;\n  height: 100px;\n  @extend %bg;\n}\n```\n\n### sass 语法\n允许使用变量 以 $ 开头\n\n```\n$test: #ff9500\ndiv{\n       color: $test;\n}\n```\n\n也可以字符串拼接\n\n```\n$side : left;\n  \n.rounded { \n        border-#{$side}-radius: 5px;\n }\n```\n\n也可以加减乘除 简单计算\n\n\n\n\n### sass分享：\n内容：全局、默认、局部变量\n使用：默认变量 在局部中无效，覆盖 默认变量 不分上下顺序\n\n```html\n<div class=\"box1\">\n  <div class=\"box2\">box2</div>\n</div>\n```\n\n```scss\n$backgroundColor: #FF0;                  // 全局变量\n$backgroundColor: #000 !default;      // 默认变量\n$color: #F0F;\n\n.box1 {\n  $color: #CCC;                                   // 局部变量\n  width: 100px;\n  height: 100px;\n  background-color: $backgroundColor; // #FF0\n  .box2 {\n    color: $color;                                      // #CCC\n  }\n}\n```\n\n\n### 控制指令 (Control Directives)\n混合指令\n\nmixin  技术文档翻译  混合类型\nmixing  混合 （mix 的现在分词）\n\nmixin    sass官方文档称  混合指令\n@mixin  为定义混合指令\n@include   为引用楼上定义的混合指令\n\n```html\n<div class= \"parent\">\n111\n</div>\n<div class= \"child\">\n222\n</div>\n<div class= \"test\">\n333\n</div>\n\n```\n\n```scss\n.parent {\n  color: red;\n}\n.child {\n  @extend .parent;\n  font-size: (21px * 3);\n}\n@minxin auto {\n  margin: 0 auto;\n}\n.test {\n  width: 200px;\n  @include auto;\n}\n\n```\n\n####  sass 的 @if  控制指令\n\n```html\n<div class=\"demo\"></div>\n\n```\n\n单独使用@if：\n> 当@if 的表达式不是false或者null时， 条件成立， 输出{} 内的代码\n\n```scss\n.demo{\n  $fx: bottom;\n  @if ($fx == top) {\n    border-color: transparent transparent pink transparent;\n    border-style: dashed dashed solid dashed;\n  }\n  @else if($fx == right){\n    border-color: transparent transparent transparent pink;\n    border-style: dashed dashed dashed solid;\n  }\n  @else if($fx == bottom){\n    border-color: pink transparent transparent transparent;\n    border-style: solid dashed dashed dashed;\n  }\n  @else if($fx == left){\n    border-color: transparent pink transparent transparent;\n    border-style: dashed solid dashed dashed;\n  }\n\n  width: 0px;\n  height: 0px;\n  overflow: hidden;\n  border-width: 60px;\n}\n\n```\n\n混合指令 + @if 指令\n\n```scss\n// 画三角形@mixin声明\n@mixin sj($fx:top,$size:100px,$color:red){\n\n  @if ($fx == top) {\n    border-color: transparent transparent $color transparent;\n    border-style: dashed dashed solid dashed;\n  }\n  @else if($fx == right){\n    border-color: transparent transparent transparent $color;\n    border-style: dashed dashed dashed solid;\n  }\n  @else if($fx == bottom){\n    border-color: $color transparent transparent transparent;\n    border-style: solid dashed dashed dashed;\n  }\n  @else if($fx == left){\n    border-color: transparent $color transparent transparent;\n    border-style: dashed solid dashed dashed;\n  }\n\n  width: 0px;\n  height: 0px;\n  overflow: hidden;\n  border-width: $size;\n\n}\n\n//mixin的调用\n.demo{\n  @include sj(left, 66px, pink);\n}\n```\n\n\n\nless 与sass有个很明显的区别\n变量\n 咱们sass 变量用   $  开头     \nless  是以 @ 开头的\n\n\n###  sass语法  @for 控制指令\n> @for 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动；\n\n这个指令包含两种格式：\n@for $var from <start> through <end>，\n  或者\n  @for $var from <start> to <end>\n\n\n```html\n<ul>\n  <li class=\"item-1\">至尊魔法师</li>\n  <li class=\"item-2\">王</li>\n  <li class=\"item-3\">奇异博士</li>\n  <li class=\"item-4\">莫度男爵</li>\n  <li class=\"item-5\">哈姆雷特</li>\n  <li class=\"item-6\">蜘蛛侠</li>\n  <li class=\"item-7\">非人哉</li>\n</ul>\n\n```\n\nfrom ... through\n\n// 当使用 through 时，条件范围包含 <start> 与 <end> 的值\n\n// 个人分析： 可以将一个页面，不同div中嵌套的元素设置样式，只要命名符合一定的规律\n\n```scss\n@for $i from 1 through 7 {\n  .item-#{$i} { \n    width: 6em * $i;\n    background: pink;\n    margin: 6px 0;\n  }\n}\n```\n\nfrom ... to\n> 使用 to 时条件范围只包含 <start> 的值不包含 <end> 的值。另外，$var 可以是任何变量，比如 $i；<start> 和 <end> 必须是整数值。\n```scss\n@for $i from 1 to 7 {\n  .item-#{$i} { \n    width: 6em * $i;\n    background: pink;\n    margin: 6px 0;\n  }\n}\n\n```\n\n\n\n```\n@each $usr in nezha, aolie, xiaoyu, xiaotian {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n     }\n}\n```\n\n\n\n@each 后面的 $usr 变量用于保存每次遍历到的元素，然后使用差值语法（#{var}）来拼接正确的图片路径\n\n\n\n\n//@each 指令同样可以用于循环输出，和 @for 的差别在于，@each 通过遍历 list 或者 map 实现循环输出\n// 如果遍历的对象是一个 map，那么我们就可以使用两个变量来存储元素的 key 和 value\n\n```\n$frz: ( usr1:xiaotian, usr2:sanyan, usr3:shancai, usr4:longnv );\n\n@each $key, $usr in $frz {\n    .#{$usr}-avatar {\n        background-image: url('/img/#{$usr}.png');\n    }\n}\n\n```\n\n\n运算的坑\n> 加号居然可以不需要空格隔开,但必须单位统一\n\n```scss\n\n$sidebar-width: 220px;\n$content-width: 720px;\n$gap-width: 20px;\n$other-width: 2em;\n\n.container {\n    // width: $sidebar-width+$content-width + $gap-width;\n    width: $sidebar-width + $other-width;\n    margin: 0 auto;\n}\n\n```\n\n\n>  还可以做字符连接\n\n1. 如果有引号的字符串被添加了一个没有引号的字符串 （也就是，带引号的字符串在 + 符号左侧）， 结果会是一个有引号的字符串。 \n2. 如果一个没有引号的字符串被添加了一个有引号的字符串 （没有引号的字符串在 + 符号左侧）， 结果将是一个没有引号的字符串。\n\n\n```scss\np:before {\n  content: \"bing\" + jian;\n  font-family: sans- + \"serif\";\n}\n```\n\n编译后\n\n\n```css\np:before {\n  content: \"bingjian\";\n  font-family: sans-serif;\n}\n```\n\n\n> 减法 - 需要注意空格了，否则就完蛋喽\n\n```scss\n$full-width: 960px;\n$sidebar-width: 200px;\n\n.content {\n  width: $full-width - $sidebar-width;\n}\n```\n> 乘法\n能够支持多种单位（比如 em ,px , %）；\n如果进行乘法运算时，两个值单位相同时，只需要为一个数值提供单位即可(多个乘数中只需要一个乘数提供单位，否则报错)。\n\n```scss\n.box {\n  width: 10px * 2;\n}\n```\n否则\n\n```\n.box {\n  width: 10px * 6px;\n}\n```\n> error: 60px*px isn't a valid CSS value.\n\n\n> 除法\n\n众所周知“/”符号在 CSS 中已做为一种符号使用。其在 CSS 中通常起到分隔数字的用途，\n因此在 Sass 中做除法运算时，直接使用“/”符号做为除号时，将不会生效，\n编译时既得不到我们需要的效果，也不会报错。\n需要给运算的外面添加一个小括号()才能执行除法运算\n\n```scss\n.box {\n  width: (100px / 2);\n}\n```\n\n总结: ”/  ”符号被当作除法运算符时有以下几种情况：\n   　　 如果数值或它的任意部分是存储在一个变量中或是函数的返回值。\n    　　如果数值被圆括号包围。\n    　　如果数值是另一个数学表达式的一部分。\n\n\n```scss\np {\n  font: 10px/8px;        // 纯 CSS，不是除法运算\n  $width: 1000px;\n  width: $width/2;          // 使用了变量，是除法运算\n  width: round(1.5)/2;        // 使用了函数，是除法运算\n  height: (500px/2);          // 使用了圆括号，是除法运算\n  margin-left: 5px + 8px/2px;  // 使用了加（+）号，是除法运算\n}\n\n```\n\n\n还有一种情况\n> Sass 的除法运算还有一个情况。先回忆一下，在乘法运算时，如果两个值带有相同单位时，做乘法运算时，出来的结果并不是我们需要的结果。但在除法运算时，如果两个值带有相同的单位值时，除法运算之后会得到一个不带单位的数值。　\n\n```scss\n.box {\n  width: (1000px / 100px);ß\n}\n```\n\n> 颜色运算 - 分段运算\n\n　　所有算数运算都支持颜色值，并且是分段运算的。也就是说，红、绿和蓝各颜色分段单独进行运算。如：\n\n```scss\np {\n  background-color: #012423 + #120923;\n  color: #324334 * 2\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### 有顺工作\n\n将所有的Mixins、Placeholder、Functions和变量放置在一起。将他们放置一起，可以确认他们可以很快的编写以及将来重复使用。\n\n1. 整站的元素应该放在一个base文件夹中。base文件夹应该包括全局的变量，如字体和颜色等\n2. 对于特定模块的Mixins、Functions 和变量，为了保证模块能正常运行，需要将这些集中放置在module文件中\n\n\n### 限制嵌套\n**使用嵌套的黄金规则：**\n\n1. 嵌套永远不要超过三个层级\n2. 确保输出的CSS简洁、可重用\n3. 使用嵌套是很有意义的，而不是默认选项\n\n> 过度的嵌套会导致很多问题的发生,代码变得复杂，而且太过于依赖HTML结构。这样将导致后面的样式需要使用!important来覆盖\n\n\n\n\n## scss 基本用法\n\n1. 变量（局部/全局）声明：$+变量名：变量值；默认变量在变量名后加default，!global变成全局变量。\n2. 混合宏（可重用的代码块）：声明混合宏@mixin border-radius { }； 调用混合宏 @include。 border-radius; 声明的时候还可以带默认参数，调用可以传参。\n3. 继承： @extend .btn; 继承btn class。任何选择器都能继承，可以连续继承。\n4. 占位符%：占位符声明的代码如果不被@extend调用，就不会被编译产生css代码。\n5. 插值：#{$参数名}，插入传入或定义的参数。\n6. 注释：/* */ :会在编译出来的css文件中显示；//内容：不会显示。/!/：重要注释，任何style的css文件中都会有，一般放置css文件版权说明等信息。\n7. 加减法：同单位的数值之间可以做加减法。\n8. 乘除法：只能乘数值；如果除式中没有变量或者不是在一个数学表达式中（有加法减法等），就要将除式运算用小括号括起来，否则“/”不会被当做除号运算。\n9. 颜色运算：算术运算都支持颜色值，并且是分段计算的，01+05=06\n10. 字符串连接：+，$content: \"Hello\" + \"\" + \"Sass!\";cursor: e + -resize；有引号的字符串和没有引号的字符串相加，以左边字符有无引号为准。\n11. 父类选择器：&，表示引用父元素，\n12. if语法：@if,@else,\n13. 循环语法：@for,@while,@each,\n14. 函数：@function double ($number){ @return $number*2; }\n15. import：导入其他的scss\n\n","slug":"scss","published":1,"updated":"2019-01-21T04:15:22.610Z","layout":"post","photos":[],"link":"","_id":"cjtpdplw5000n3yxyf2kl9o8m","content":"<h3 id=\"sass嵌套\"><a href=\"#sass嵌套\" class=\"headerlink\" title=\"sass嵌套\"></a>sass嵌套</h3><ol>\n<li>选择器嵌套<blockquote>\n<p>这里的 &amp; 代表 nav a ,理解起来有点 像js中this 的意思</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>page<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">header</span> <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"selector-tag\">header</span> &amp; &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>:green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>属性嵌套(有相同的属性前缀)<blockquote>\n<p>如 font, background等，也有可能是 -webkit-</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">   size: <span class=\"number\">12px</span>;</span><br><span class=\"line\">   weight: bold;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>伪类嵌套<blockquote>\n<p>同上选择器嵌套一样  使用 &amp; 关键字 </p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span>&#123;</span><br><span class=\"line\">&amp;:before,</span><br><span class=\"line\">&amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clearfix</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"占位符：\"><a href=\"#占位符：\" class=\"headerlink\" title=\"占位符：\"></a>占位符：</h3><p>语法：%placeholder，\b<br>用法：占位符不被 @extend 调用不产生任何代码</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%bg &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#FF0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%w &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %w;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %bg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"sass-语法\"><a href=\"#sass-语法\" class=\"headerlink\" title=\"sass 语法\"></a>sass 语法</h3><p>允许使用变量 以 $ 开头</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$test: #ff9500</span><br><span class=\"line\">div&#123;</span><br><span class=\"line\">       color: $test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以字符串拼接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$side : left;</span><br><span class=\"line\">  </span><br><span class=\"line\">.rounded &#123; </span><br><span class=\"line\">        border-#&#123;$side&#125;-radius: 5px;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>也可以加减乘除 简单计算</p>\n<h3 id=\"sass分享：\"><a href=\"#sass分享：\" class=\"headerlink\" title=\"sass分享：\"></a>sass分享：</h3><p>内容：全局、默认、局部变量<br>使用：默认变量 在局部中无效，覆盖 默认变量 不分上下顺序</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box2\"</span>&gt;</span>box2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$backgroundColor</span>: <span class=\"number\">#FF0</span>;                  <span class=\"comment\">// 全局变量</span></span><br><span class=\"line\"><span class=\"variable\">$backgroundColor</span>: <span class=\"number\">#000</span> !default;      <span class=\"comment\">// 默认变量</span></span><br><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#F0F</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$color</span>: <span class=\"number\">#CCC</span>;                                   <span class=\"comment\">// 局部变量</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$backgroundColor</span>; <span class=\"comment\">// #FF0</span></span><br><span class=\"line\">  <span class=\"selector-class\">.box2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;                                      <span class=\"comment\">// #CCC</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"控制指令-Control-Directives\"><a href=\"#控制指令-Control-Directives\" class=\"headerlink\" title=\"控制指令 (Control Directives)\"></a>控制指令 (Control Directives)</h3><p>混合指令</p>\n<p>mixin  技术文档翻译  混合类型<br>mixing  混合 （mix 的现在分词）</p>\n<p>mixin    sass官方文档称  混合指令<br>@mixin  为定义混合指令<br>@include   为引用楼上定义的混合指令</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"parent\"</span>&gt;</span></span><br><span class=\"line\">111</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"child\"</span>&gt;</span></span><br><span class=\"line\">222</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"test\"</span>&gt;</span></span><br><span class=\"line\">333</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.child</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .parent;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: (<span class=\"number\">21px</span> * <span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@minxin auto &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"sass-的-if-控制指令\"><a href=\"#sass-的-if-控制指令\" class=\"headerlink\" title=\"sass 的 @if  控制指令\"></a>sass 的 @if  控制指令</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>单独使用@if：</p>\n<blockquote>\n<p>当@if 的表达式不是false或者null时， 条件成立， 输出{} 内的代码</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$fx</span>: bottom;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> (<span class=\"variable\">$fx</span> == top) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent pink transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed solid dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == right)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent transparent pink;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed dashed solid;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == bottom)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: pink transparent transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid dashed dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == left)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent pink transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed solid dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>混合指令 + @if 指令</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 画三角形@mixin声明</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> sj(<span class=\"variable\">$fx</span>:top,<span class=\"variable\">$size</span>:<span class=\"number\">100px</span>,<span class=\"variable\">$color</span>:red)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> (<span class=\"variable\">$fx</span> == top) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent <span class=\"variable\">$color</span> transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed solid dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == right)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed dashed solid;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == bottom)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: <span class=\"variable\">$color</span> transparent transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid dashed dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == left)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent <span class=\"variable\">$color</span> transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed solid dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"variable\">$size</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//mixin的调用</span></span><br><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> sj(left, 66px, pink);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>less 与sass有个很明显的区别<br>变量<br> 咱们sass 变量用   $  开头<br>less  是以 @ 开头的</p>\n<h3 id=\"sass语法-for-控制指令\"><a href=\"#sass语法-for-控制指令\" class=\"headerlink\" title=\"sass语法  @for 控制指令\"></a>sass语法  @for 控制指令</h3><blockquote>\n<p>@for 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动；</p>\n</blockquote>\n<p>这个指令包含两种格式：<br>@for $var from <start> through <end>，<br>  或者<br>  @for $var from <start> to <end></end></start></end></start></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-1\"</span>&gt;</span>至尊魔法师<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-2\"</span>&gt;</span>王<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-3\"</span>&gt;</span>奇异博士<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-4\"</span>&gt;</span>莫度男爵<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-5\"</span>&gt;</span>哈姆雷特<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-6\"</span>&gt;</span>蜘蛛侠<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-7\"</span>&gt;</span>非人哉<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>from … through</p>\n<p>// 当使用 through 时，条件范围包含 <start> 与 <end> 的值</end></start></p>\n<p>// 个人分析： 可以将一个页面，不同div中嵌套的元素设置样式，只要命名符合一定的规律</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 through 7 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6em</span> * <span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">6px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>from … to</p>\n<blockquote>\n<p>使用 to 时条件范围只包含 <start> 的值不包含 <end> 的值。另外，$var 可以是任何变量，比如 $i；<start> 和 <end> 必须是整数值。<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 to 7 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6em</span> * <span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">6px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></end></start></end></start></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@each $usr in nezha, aolie, xiaoyu, xiaotian &#123;</span><br><span class=\"line\">    .#&#123;$usr&#125;-avatar &#123;</span><br><span class=\"line\">        background-image: url(&apos;/img/#&#123;$usr&#125;.png&apos;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>@each 后面的 $usr 变量用于保存每次遍历到的元素，然后使用差值语法（#{var}）来拼接正确的图片路径</p>\n<p>//@each 指令同样可以用于循环输出，和 @for 的差别在于，@each 通过遍历 list 或者 map 实现循环输出<br>// 如果遍历的对象是一个 map，那么我们就可以使用两个变量来存储元素的 key 和 value</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$frz: ( usr1:xiaotian, usr2:sanyan, usr3:shancai, usr4:longnv );</span><br><span class=\"line\"></span><br><span class=\"line\">@each $key, $usr in $frz &#123;</span><br><span class=\"line\">    .#&#123;$usr&#125;-avatar &#123;</span><br><span class=\"line\">        background-image: url(&apos;/img/#&#123;$usr&#125;.png&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运算的坑</p>\n<blockquote>\n<p>加号居然可以不需要空格隔开,但必须单位统一</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sidebar-width</span>: <span class=\"number\">220px</span>;</span><br><span class=\"line\"><span class=\"variable\">$content-width</span>: <span class=\"number\">720px</span>;</span><br><span class=\"line\"><span class=\"variable\">$gap-width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\"><span class=\"variable\">$other-width</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// width: $sidebar-width+$content-width + $gap-width;</span></span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar-width</span> + <span class=\"variable\">$other-width</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 还可以做字符连接</p>\n</blockquote>\n<ol>\n<li>如果有引号的字符串被添加了一个没有引号的字符串 （也就是，带引号的字符串在 + 符号左侧）， 结果会是一个有引号的字符串。 </li>\n<li>如果一个没有引号的字符串被添加了一个有引号的字符串 （没有引号的字符串在 + 符号左侧）， 结果将是一个没有引号的字符串。</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span>:before &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"bing\"</span> + jian;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans- + <span class=\"string\">\"serif\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"bingjian\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>减法 - 需要注意空格了，否则就完蛋喽</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$full-width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\"><span class=\"variable\">$sidebar-width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$full-width</span> - <span class=\"variable\">$sidebar-width</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>乘法<br>能够支持多种单位（比如 em ,px , %）；<br>如果进行乘法运算时，两个值单位相同时，只需要为一个数值提供单位即可(多个乘数中只需要一个乘数提供单位，否则报错)。</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">10px</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>否则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 10px * 6px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>error: 60px*px isn’t a valid CSS value.</p>\n</blockquote>\n<blockquote>\n<p>除法</p>\n</blockquote>\n<p>众所周知“/”符号在 CSS 中已做为一种符号使用。其在 CSS 中通常起到分隔数字的用途，<br>因此在 Sass 中做除法运算时，直接使用“/”符号做为除号时，将不会生效，<br>编译时既得不到我们需要的效果，也不会报错。<br>需要给运算的外面添加一个小括号()才能执行除法运算</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: (<span class=\"number\">100px</span> / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结: ”/  ”符号被当作除法运算符时有以下几种情况：<br>   　　 如果数值或它的任意部分是存储在一个变量中或是函数的返回值。<br>    　　如果数值被圆括号包围。<br>    　　如果数值是另一个数学表达式的一部分。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;        <span class=\"comment\">// 纯 CSS，不是除法运算</span></span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>/<span class=\"number\">2</span>;          <span class=\"comment\">// 使用了变量，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: round(<span class=\"number\">1.5</span>)/<span class=\"number\">2</span>;        <span class=\"comment\">// 使用了函数，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: (<span class=\"number\">500px</span>/<span class=\"number\">2</span>);          <span class=\"comment\">// 使用了圆括号，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span> + <span class=\"number\">8px</span>/<span class=\"number\">2px</span>;  <span class=\"comment\">// 使用了加（+）号，是除法运算</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有一种情况</p>\n<blockquote>\n<p>Sass 的除法运算还有一个情况。先回忆一下，在乘法运算时，如果两个值带有相同单位时，做乘法运算时，出来的结果并不是我们需要的结果。但在除法运算时，如果两个值带有相同的单位值时，除法运算之后会得到一个不带单位的数值。　</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: (<span class=\"number\">1000px</span> / <span class=\"number\">100px</span>);ß</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>颜色运算 - 分段运算</p>\n</blockquote>\n<p>　　所有算数运算都支持颜色值，并且是分段运算的。也就是说，红、绿和蓝各颜色分段单独进行运算。如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#012423</span> + <span class=\"number\">#120923</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#324334</span> * <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"有顺工作\"><a href=\"#有顺工作\" class=\"headerlink\" title=\"有顺工作\"></a>有顺工作</h3><p>将所有的Mixins、Placeholder、Functions和变量放置在一起。将他们放置一起，可以确认他们可以很快的编写以及将来重复使用。</p>\n<ol>\n<li>整站的元素应该放在一个base文件夹中。base文件夹应该包括全局的变量，如字体和颜色等</li>\n<li>对于特定模块的Mixins、Functions 和变量，为了保证模块能正常运行，需要将这些集中放置在module文件中</li>\n</ol>\n<h3 id=\"限制嵌套\"><a href=\"#限制嵌套\" class=\"headerlink\" title=\"限制嵌套\"></a>限制嵌套</h3><p><strong>使用嵌套的黄金规则：</strong></p>\n<ol>\n<li>嵌套永远不要超过三个层级</li>\n<li>确保输出的CSS简洁、可重用</li>\n<li>使用嵌套是很有意义的，而不是默认选项</li>\n</ol>\n<blockquote>\n<p>过度的嵌套会导致很多问题的发生,代码变得复杂，而且太过于依赖HTML结构。这样将导致后面的样式需要使用!important来覆盖</p>\n</blockquote>\n<h2 id=\"scss-基本用法\"><a href=\"#scss-基本用法\" class=\"headerlink\" title=\"scss 基本用法\"></a>scss 基本用法</h2><ol>\n<li>变量（局部/全局）声明：$+变量名：变量值；默认变量在变量名后加default，!global变成全局变量。</li>\n<li>混合宏（可重用的代码块）：声明混合宏@mixin border-radius { }； 调用混合宏 @include。 border-radius; 声明的时候还可以带默认参数，调用可以传参。</li>\n<li>继承： @extend .btn; 继承btn class。任何选择器都能继承，可以连续继承。</li>\n<li>占位符%：占位符声明的代码如果不被@extend调用，就不会被编译产生css代码。</li>\n<li>插值：#{$参数名}，插入传入或定义的参数。</li>\n<li>注释：/<em> </em>/ :会在编译出来的css文件中显示；//内容：不会显示。/!/：重要注释，任何style的css文件中都会有，一般放置css文件版权说明等信息。</li>\n<li>加减法：同单位的数值之间可以做加减法。</li>\n<li>乘除法：只能乘数值；如果除式中没有变量或者不是在一个数学表达式中（有加法减法等），就要将除式运算用小括号括起来，否则“/”不会被当做除号运算。</li>\n<li>颜色运算：算术运算都支持颜色值，并且是分段计算的，01+05=06</li>\n<li>字符串连接：+，$content: “Hello” + “” + “Sass!”;cursor: e + -resize；有引号的字符串和没有引号的字符串相加，以左边字符有无引号为准。</li>\n<li>父类选择器：&amp;，表示引用父元素，</li>\n<li>if语法：@if,@else,</li>\n<li>循环语法：@for,@while,@each,</li>\n<li>函数：@function double ($number){ @return $number*2; }</li>\n<li>import：导入其他的scss</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"sass嵌套\"><a href=\"#sass嵌套\" class=\"headerlink\" title=\"sass嵌套\"></a>sass嵌套</h3><ol>\n<li>选择器嵌套<blockquote>\n<p>这里的 &amp; 代表 nav a ,理解起来有点 像js中this 的意思</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">header</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>home<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"#\"</span>&gt;</span>page<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">nav</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">header</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">header</span> <span class=\"selector-tag\">nav</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"selector-tag\">header</span> &amp; &#123;</span><br><span class=\"line\">      <span class=\"attribute\">color</span>:green;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>属性嵌套(有相同的属性前缀)<blockquote>\n<p>如 font, background等，也有可能是 -webkit-</p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">     <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>;</span><br><span class=\"line\">     <span class=\"attribute\">font-weight</span>: bold;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: &#123;</span><br><span class=\"line\">   size: <span class=\"number\">12px</span>;</span><br><span class=\"line\">   weight: bold;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>伪类嵌套<blockquote>\n<p>同上选择器嵌套一样  使用 &amp; 关键字 </p>\n</blockquote>\n</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.clearfix</span>&#123;</span><br><span class=\"line\">&amp;:before,</span><br><span class=\"line\">&amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>:<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&amp;:after &#123;</span><br><span class=\"line\">    <span class=\"attribute\">clear</span>:both;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">clearfix</span><span class=\"selector-pseudo\">:before</span>, <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">:after</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"占位符：\"><a href=\"#占位符：\" class=\"headerlink\" title=\"占位符：\"></a>占位符：</h3><p>语法：%placeholder，\b<br>用法：占位符不被 @extend 调用不产生任何代码</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%bg &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#FF0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">%w &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %w;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> %bg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"sass-语法\"><a href=\"#sass-语法\" class=\"headerlink\" title=\"sass 语法\"></a>sass 语法</h3><p>允许使用变量 以 $ 开头</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$test: #ff9500</span><br><span class=\"line\">div&#123;</span><br><span class=\"line\">       color: $test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>也可以字符串拼接</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$side : left;</span><br><span class=\"line\">  </span><br><span class=\"line\">.rounded &#123; </span><br><span class=\"line\">        border-#&#123;$side&#125;-radius: 5px;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>也可以加减乘除 简单计算</p>\n<h3 id=\"sass分享：\"><a href=\"#sass分享：\" class=\"headerlink\" title=\"sass分享：\"></a>sass分享：</h3><p>内容：全局、默认、局部变量<br>使用：默认变量 在局部中无效，覆盖 默认变量 不分上下顺序</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"box2\"</span>&gt;</span>box2<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$backgroundColor</span>: <span class=\"number\">#FF0</span>;                  <span class=\"comment\">// 全局变量</span></span><br><span class=\"line\"><span class=\"variable\">$backgroundColor</span>: <span class=\"number\">#000</span> !default;      <span class=\"comment\">// 默认变量</span></span><br><span class=\"line\"><span class=\"variable\">$color</span>: <span class=\"number\">#F0F</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.box1</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$color</span>: <span class=\"number\">#CCC</span>;                                   <span class=\"comment\">// 局部变量</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"variable\">$backgroundColor</span>; <span class=\"comment\">// #FF0</span></span><br><span class=\"line\">  <span class=\"selector-class\">.box2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"variable\">$color</span>;                                      <span class=\"comment\">// #CCC</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"控制指令-Control-Directives\"><a href=\"#控制指令-Control-Directives\" class=\"headerlink\" title=\"控制指令 (Control Directives)\"></a>控制指令 (Control Directives)</h3><p>混合指令</p>\n<p>mixin  技术文档翻译  混合类型<br>mixing  混合 （mix 的现在分词）</p>\n<p>mixin    sass官方文档称  混合指令<br>@mixin  为定义混合指令<br>@include   为引用楼上定义的混合指令</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"parent\"</span>&gt;</span></span><br><span class=\"line\">111</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"child\"</span>&gt;</span></span><br><span class=\"line\">222</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>= <span class=\"string\">\"test\"</span>&gt;</span></span><br><span class=\"line\">333</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.parent</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.child</span> &#123;</span><br><span class=\"line\">  @<span class=\"keyword\">extend</span> .parent;</span><br><span class=\"line\">  <span class=\"attribute\">font-size</span>: (<span class=\"number\">21px</span> * <span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@minxin auto &#123;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.test</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"sass-的-if-控制指令\"><a href=\"#sass-的-if-控制指令\" class=\"headerlink\" title=\"sass 的 @if  控制指令\"></a>sass 的 @if  控制指令</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"demo\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>单独使用@if：</p>\n<blockquote>\n<p>当@if 的表达式不是false或者null时， 条件成立， 输出{} 内的代码</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">  <span class=\"variable\">$fx</span>: bottom;</span><br><span class=\"line\">  @<span class=\"keyword\">if</span> (<span class=\"variable\">$fx</span> == top) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent pink transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed solid dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == right)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent transparent pink;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed dashed solid;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == bottom)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: pink transparent transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid dashed dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == left)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent pink transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed solid dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">60px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>混合指令 + @if 指令</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 画三角形@mixin声明</span></span><br><span class=\"line\">@<span class=\"keyword\">mixin</span> sj(<span class=\"variable\">$fx</span>:top,<span class=\"variable\">$size</span>:<span class=\"number\">100px</span>,<span class=\"variable\">$color</span>:red)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @<span class=\"keyword\">if</span> (<span class=\"variable\">$fx</span> == top) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent <span class=\"variable\">$color</span> transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed solid dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == right)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent transparent transparent <span class=\"variable\">$color</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed dashed dashed solid;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == bottom)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: <span class=\"variable\">$color</span> transparent transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid dashed dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @<span class=\"keyword\">else</span> if(<span class=\"variable\">$fx</span> == left)&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: transparent <span class=\"variable\">$color</span> transparent transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: dashed solid dashed dashed;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"variable\">$size</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//mixin的调用</span></span><br><span class=\"line\"><span class=\"selector-class\">.demo</span>&#123;</span><br><span class=\"line\">  @<span class=\"keyword\">include</span> sj(left, 66px, pink);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>less 与sass有个很明显的区别<br>变量<br> 咱们sass 变量用   $  开头<br>less  是以 @ 开头的</p>\n<h3 id=\"sass语法-for-控制指令\"><a href=\"#sass语法-for-控制指令\" class=\"headerlink\" title=\"sass语法  @for 控制指令\"></a>sass语法  @for 控制指令</h3><blockquote>\n<p>@for 指令可以在限制的范围内重复输出格式，每次按要求（变量的值）对输出结果做出变动；</p>\n</blockquote>\n<p>这个指令包含两种格式：<br>@for $var from <start> through <end>，<br>  或者<br>  @for $var from <start> to <end></end></start></end></start></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-1\"</span>&gt;</span>至尊魔法师<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-2\"</span>&gt;</span>王<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-3\"</span>&gt;</span>奇异博士<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-4\"</span>&gt;</span>莫度男爵<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-5\"</span>&gt;</span>哈姆雷特<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-6\"</span>&gt;</span>蜘蛛侠<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">class</span>=<span class=\"string\">\"item-7\"</span>&gt;</span>非人哉<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>from … through</p>\n<p>// 当使用 through 时，条件范围包含 <start> 与 <end> 的值</end></start></p>\n<p>// 个人分析： 可以将一个页面，不同div中嵌套的元素设置样式，只要命名符合一定的规律</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 through 7 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6em</span> * <span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">6px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>from … to</p>\n<blockquote>\n<p>使用 to 时条件范围只包含 <start> 的值不包含 <end> 的值。另外，$var 可以是任何变量，比如 $i；<start> 和 <end> 必须是整数值。<br><figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"keyword\">for</span> <span class=\"variable\">$i</span> from 1 to 7 &#123;</span><br><span class=\"line\">  <span class=\"selector-class\">.item-</span>#&#123;<span class=\"variable\">$i</span>&#125; &#123; </span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">6em</span> * <span class=\"variable\">$i</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: pink;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">6px</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></end></start></end></start></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@each $usr in nezha, aolie, xiaoyu, xiaotian &#123;</span><br><span class=\"line\">    .#&#123;$usr&#125;-avatar &#123;</span><br><span class=\"line\">        background-image: url(&apos;/img/#&#123;$usr&#125;.png&apos;);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>@each 后面的 $usr 变量用于保存每次遍历到的元素，然后使用差值语法（#{var}）来拼接正确的图片路径</p>\n<p>//@each 指令同样可以用于循环输出，和 @for 的差别在于，@each 通过遍历 list 或者 map 实现循环输出<br>// 如果遍历的对象是一个 map，那么我们就可以使用两个变量来存储元素的 key 和 value</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$frz: ( usr1:xiaotian, usr2:sanyan, usr3:shancai, usr4:longnv );</span><br><span class=\"line\"></span><br><span class=\"line\">@each $key, $usr in $frz &#123;</span><br><span class=\"line\">    .#&#123;$usr&#125;-avatar &#123;</span><br><span class=\"line\">        background-image: url(&apos;/img/#&#123;$usr&#125;.png&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运算的坑</p>\n<blockquote>\n<p>加号居然可以不需要空格隔开,但必须单位统一</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sidebar-width</span>: <span class=\"number\">220px</span>;</span><br><span class=\"line\"><span class=\"variable\">$content-width</span>: <span class=\"number\">720px</span>;</span><br><span class=\"line\"><span class=\"variable\">$gap-width</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\"><span class=\"variable\">$other-width</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// width: $sidebar-width+$content-width + $gap-width;</span></span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"variable\">$sidebar-width</span> + <span class=\"variable\">$other-width</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">0</span> auto;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 还可以做字符连接</p>\n</blockquote>\n<ol>\n<li>如果有引号的字符串被添加了一个没有引号的字符串 （也就是，带引号的字符串在 + 符号左侧）， 结果会是一个有引号的字符串。 </li>\n<li>如果一个没有引号的字符串被添加了一个有引号的字符串 （没有引号的字符串在 + 符号左侧）， 结果将是一个没有引号的字符串。</li>\n</ol>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span>:before &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"bing\"</span> + jian;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans- + <span class=\"string\">\"serif\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>编译后</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: <span class=\"string\">\"bingjian\"</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: sans-serif;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>减法 - 需要注意空格了，否则就完蛋喽</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$full-width</span>: <span class=\"number\">960px</span>;</span><br><span class=\"line\"><span class=\"variable\">$sidebar-width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.content</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$full-width</span> - <span class=\"variable\">$sidebar-width</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>乘法<br>能够支持多种单位（比如 em ,px , %）；<br>如果进行乘法运算时，两个值单位相同时，只需要为一个数值提供单位即可(多个乘数中只需要一个乘数提供单位，否则报错)。</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">10px</span> * <span class=\"number\">2</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>否则</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box &#123;</span><br><span class=\"line\">  width: 10px * 6px;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>error: 60px*px isn’t a valid CSS value.</p>\n</blockquote>\n<blockquote>\n<p>除法</p>\n</blockquote>\n<p>众所周知“/”符号在 CSS 中已做为一种符号使用。其在 CSS 中通常起到分隔数字的用途，<br>因此在 Sass 中做除法运算时，直接使用“/”符号做为除号时，将不会生效，<br>编译时既得不到我们需要的效果，也不会报错。<br>需要给运算的外面添加一个小括号()才能执行除法运算</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: (<span class=\"number\">100px</span> / <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结: ”/  ”符号被当作除法运算符时有以下几种情况：<br>   　　 如果数值或它的任意部分是存储在一个变量中或是函数的返回值。<br>    　　如果数值被圆括号包围。<br>    　　如果数值是另一个数学表达式的一部分。</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font</span>: <span class=\"number\">10px</span>/<span class=\"number\">8px</span>;        <span class=\"comment\">// 纯 CSS，不是除法运算</span></span><br><span class=\"line\">  <span class=\"variable\">$width</span>: <span class=\"number\">1000px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"variable\">$width</span>/<span class=\"number\">2</span>;          <span class=\"comment\">// 使用了变量，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">width</span>: round(<span class=\"number\">1.5</span>)/<span class=\"number\">2</span>;        <span class=\"comment\">// 使用了函数，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">height</span>: (<span class=\"number\">500px</span>/<span class=\"number\">2</span>);          <span class=\"comment\">// 使用了圆括号，是除法运算</span></span><br><span class=\"line\">  <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span> + <span class=\"number\">8px</span>/<span class=\"number\">2px</span>;  <span class=\"comment\">// 使用了加（+）号，是除法运算</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>还有一种情况</p>\n<blockquote>\n<p>Sass 的除法运算还有一个情况。先回忆一下，在乘法运算时，如果两个值带有相同单位时，做乘法运算时，出来的结果并不是我们需要的结果。但在除法运算时，如果两个值带有相同的单位值时，除法运算之后会得到一个不带单位的数值。　</p>\n</blockquote>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: (<span class=\"number\">1000px</span> / <span class=\"number\">100px</span>);ß</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>颜色运算 - 分段运算</p>\n</blockquote>\n<p>　　所有算数运算都支持颜色值，并且是分段运算的。也就是说，红、绿和蓝各颜色分段单独进行运算。如：</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#012423</span> + <span class=\"number\">#120923</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#324334</span> * <span class=\"number\">2</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"有顺工作\"><a href=\"#有顺工作\" class=\"headerlink\" title=\"有顺工作\"></a>有顺工作</h3><p>将所有的Mixins、Placeholder、Functions和变量放置在一起。将他们放置一起，可以确认他们可以很快的编写以及将来重复使用。</p>\n<ol>\n<li>整站的元素应该放在一个base文件夹中。base文件夹应该包括全局的变量，如字体和颜色等</li>\n<li>对于特定模块的Mixins、Functions 和变量，为了保证模块能正常运行，需要将这些集中放置在module文件中</li>\n</ol>\n<h3 id=\"限制嵌套\"><a href=\"#限制嵌套\" class=\"headerlink\" title=\"限制嵌套\"></a>限制嵌套</h3><p><strong>使用嵌套的黄金规则：</strong></p>\n<ol>\n<li>嵌套永远不要超过三个层级</li>\n<li>确保输出的CSS简洁、可重用</li>\n<li>使用嵌套是很有意义的，而不是默认选项</li>\n</ol>\n<blockquote>\n<p>过度的嵌套会导致很多问题的发生,代码变得复杂，而且太过于依赖HTML结构。这样将导致后面的样式需要使用!important来覆盖</p>\n</blockquote>\n<h2 id=\"scss-基本用法\"><a href=\"#scss-基本用法\" class=\"headerlink\" title=\"scss 基本用法\"></a>scss 基本用法</h2><ol>\n<li>变量（局部/全局）声明：$+变量名：变量值；默认变量在变量名后加default，!global变成全局变量。</li>\n<li>混合宏（可重用的代码块）：声明混合宏@mixin border-radius { }； 调用混合宏 @include。 border-radius; 声明的时候还可以带默认参数，调用可以传参。</li>\n<li>继承： @extend .btn; 继承btn class。任何选择器都能继承，可以连续继承。</li>\n<li>占位符%：占位符声明的代码如果不被@extend调用，就不会被编译产生css代码。</li>\n<li>插值：#{$参数名}，插入传入或定义的参数。</li>\n<li>注释：/<em> </em>/ :会在编译出来的css文件中显示；//内容：不会显示。/!/：重要注释，任何style的css文件中都会有，一般放置css文件版权说明等信息。</li>\n<li>加减法：同单位的数值之间可以做加减法。</li>\n<li>乘除法：只能乘数值；如果除式中没有变量或者不是在一个数学表达式中（有加法减法等），就要将除式运算用小括号括起来，否则“/”不会被当做除号运算。</li>\n<li>颜色运算：算术运算都支持颜色值，并且是分段计算的，01+05=06</li>\n<li>字符串连接：+，$content: “Hello” + “” + “Sass!”;cursor: e + -resize；有引号的字符串和没有引号的字符串相加，以左边字符有无引号为准。</li>\n<li>父类选择器：&amp;，表示引用父元素，</li>\n<li>if语法：@if,@else,</li>\n<li>循环语法：@for,@while,@each,</li>\n<li>函数：@function double ($number){ @return $number*2; }</li>\n<li>import：导入其他的scss</li>\n</ol>\n"},{"title":"js-design-model","comments":0,"abbrlink":20302,"date":"2019-01-12T17:34:28.000Z","img":null,"_content":"","source":"_posts/js-design-model.md","raw":"---\ntitle: js-design-model\ncategories:\n  - 前端\n  - 分类2\ntags:\n  - javaScript\n  - 标签2\ncomments: false\nabbrlink: 20302\ndate: 2019-01-13 01:34:28\nimg:\n---\n","slug":"js-design-model","published":1,"updated":"2019-01-21T04:15:22.609Z","layout":"post","photos":[],"link":"","_id":"cjtpdplw6000p3yxy0thrse3r","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"windows 常用快捷键和dos命令","comments":0,"abbrlink":58024,"date":"2018-12-30T21:27:26.000Z","img":null,"_content":"\n### 快捷键\nwin + R 打开dos命令行窗口\nwin + E 打开资源管理窗口 （计算机）\n\nshift + 鼠标右击  + select 在此处打开命令窗口   可在资源管理目录下打开dos命令\n\n#### windows下chrome 快捷键\nctrl + E   地址栏foucs搜索(默认搜索引擎) \n\n## 常用dos命令\n> win键 + R  点击确定，打开命令行窗口 或 运行的设置窗口，在输入栏里输入cmd，然后点击确定\n\n> 注： mac 和linux 目录都是 c:/dev/nvm  而windows 是 c:\\dev\\nvm\n\n### del 删除\n\n`del /?`   // 查看删除帮助\n`del c:\\settings.txt`     // 删除指定文件\n`del /F /S /Q c:\\dev `      // 删除文件夹\n\n```\n  /P            删除每一个文件之前提示确认。\n  /F            强制删除只读文件。\n  /S            删除所有子目录中的指定的文件。\n  /Q            安静模式。删除全局通配符时，不要求确认\n  /A            根据属性选择要删除的文件\n```\n","source":"_posts/windows-cmd.md","raw":"---\ntitle: windows 常用快捷键和dos命令 \ncategories:\n  - windows\n  - 工具\ntags:\n  - 命令行\n  - 工具\ncomments: false\nabbrlink: 58024\ndate: 2018-12-31 05:27:26\nimg:\n---\n\n### 快捷键\nwin + R 打开dos命令行窗口\nwin + E 打开资源管理窗口 （计算机）\n\nshift + 鼠标右击  + select 在此处打开命令窗口   可在资源管理目录下打开dos命令\n\n#### windows下chrome 快捷键\nctrl + E   地址栏foucs搜索(默认搜索引擎) \n\n## 常用dos命令\n> win键 + R  点击确定，打开命令行窗口 或 运行的设置窗口，在输入栏里输入cmd，然后点击确定\n\n> 注： mac 和linux 目录都是 c:/dev/nvm  而windows 是 c:\\dev\\nvm\n\n### del 删除\n\n`del /?`   // 查看删除帮助\n`del c:\\settings.txt`     // 删除指定文件\n`del /F /S /Q c:\\dev `      // 删除文件夹\n\n```\n  /P            删除每一个文件之前提示确认。\n  /F            强制删除只读文件。\n  /S            删除所有子目录中的指定的文件。\n  /Q            安静模式。删除全局通配符时，不要求确认\n  /A            根据属性选择要删除的文件\n```\n","slug":"windows-cmd","published":1,"updated":"2019-01-21T04:15:22.610Z","layout":"post","photos":[],"link":"","_id":"cjtpdplwy002u3yxycdwp2qzt","content":"<h3 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h3><p>win + R 打开dos命令行窗口<br>win + E 打开资源管理窗口 （计算机）</p>\n<p>shift + 鼠标右击  + select 在此处打开命令窗口   可在资源管理目录下打开dos命令</p>\n<h4 id=\"windows下chrome-快捷键\"><a href=\"#windows下chrome-快捷键\" class=\"headerlink\" title=\"windows下chrome 快捷键\"></a>windows下chrome 快捷键</h4><p>ctrl + E   地址栏foucs搜索(默认搜索引擎) </p>\n<h2 id=\"常用dos命令\"><a href=\"#常用dos命令\" class=\"headerlink\" title=\"常用dos命令\"></a>常用dos命令</h2><blockquote>\n<p>win键 + R  点击确定，打开命令行窗口 或 运行的设置窗口，在输入栏里输入cmd，然后点击确定</p>\n</blockquote>\n<blockquote>\n<p>注： mac 和linux 目录都是 c:/dev/nvm  而windows 是 c:\\dev\\nvm</p>\n</blockquote>\n<h3 id=\"del-删除\"><a href=\"#del-删除\" class=\"headerlink\" title=\"del 删除\"></a>del 删除</h3><p><code>del /?</code>   // 查看删除帮助<br><code>del c:\\settings.txt</code>     // 删除指定文件<br><code>del /F /S /Q c:\\dev</code>      // 删除文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/P            删除每一个文件之前提示确认。</span><br><span class=\"line\">/F            强制删除只读文件。</span><br><span class=\"line\">/S            删除所有子目录中的指定的文件。</span><br><span class=\"line\">/Q            安静模式。删除全局通配符时，不要求确认</span><br><span class=\"line\">/A            根据属性选择要删除的文件</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h3><p>win + R 打开dos命令行窗口<br>win + E 打开资源管理窗口 （计算机）</p>\n<p>shift + 鼠标右击  + select 在此处打开命令窗口   可在资源管理目录下打开dos命令</p>\n<h4 id=\"windows下chrome-快捷键\"><a href=\"#windows下chrome-快捷键\" class=\"headerlink\" title=\"windows下chrome 快捷键\"></a>windows下chrome 快捷键</h4><p>ctrl + E   地址栏foucs搜索(默认搜索引擎) </p>\n<h2 id=\"常用dos命令\"><a href=\"#常用dos命令\" class=\"headerlink\" title=\"常用dos命令\"></a>常用dos命令</h2><blockquote>\n<p>win键 + R  点击确定，打开命令行窗口 或 运行的设置窗口，在输入栏里输入cmd，然后点击确定</p>\n</blockquote>\n<blockquote>\n<p>注： mac 和linux 目录都是 c:/dev/nvm  而windows 是 c:\\dev\\nvm</p>\n</blockquote>\n<h3 id=\"del-删除\"><a href=\"#del-删除\" class=\"headerlink\" title=\"del 删除\"></a>del 删除</h3><p><code>del /?</code>   // 查看删除帮助<br><code>del c:\\settings.txt</code>     // 删除指定文件<br><code>del /F /S /Q c:\\dev</code>      // 删除文件夹</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/P            删除每一个文件之前提示确认。</span><br><span class=\"line\">/F            强制删除只读文件。</span><br><span class=\"line\">/S            删除所有子目录中的指定的文件。</span><br><span class=\"line\">/Q            安静模式。删除全局通配符时，不要求确认</span><br><span class=\"line\">/A            根据属性选择要删除的文件</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo blog使用指南","comments":0,"abbrlink":7251,"date":"2018-12-26T18:04:27.000Z","img":null,"_content":"\nWhat?\nHexo 是一个快速、简洁且高效的博客框架。可以使用markdown 解析成文章，在几秒内，即可利用靓丽的主题生成静态网页。\nWhy?\n笔记需要整理\nHow?\ngithub 创建 [charblus.github.io](charblus.github.io) 项目\n使用markdown 记录开发笔记和文章\n日复一日\n\n链接：\n[Hexo官方网站](https://hexo.io/)\n[Hexo官方主题](https://hexo.io/themes/)\n\n## 快速开始\n\n```bash\nhexo n \"hexo-post\"\nhexo g\nhexo s\nhexo d\n\n```\n\n### 创建一篇文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 本地启动\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态html \n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署远程服务\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### hexo 命令简写\n\n```bash\nhexo s == hexo server   用于生成静态文件\nhexo g == hexo generate   用于启动服务器，主要用来本地预览\nhexo d == hexo deploy    用于将本地文件发布到github等git仓库上\nhexo n == hexo new     用于新建一篇名为“my article”的文章 `hexo n “my article”`\n```\n\n### 创建菜单\n* sourse 添加文件夹 `_name` , 文件中添加index.md文件\n* 修改主题的配置文件_config.yml,增加一个标签页菜单\n\n\n### 参考文章\n   [https://hexo.io/zh-cn/docs/index.html](https://hexo.io/zh-cn/docs/index.html)\n\n   [HEXO搭建个人博客](https://blog.csdn.net/flappy8023/article/details/72453350)\n\n   [在Github上面搭建Hexo博客（一）：部署到Github](http://www.cnblogs.com/cherishzy/p/5694658.html)\n\n   [Hexo在Github中搭建博客系统(4)建菜单写文章](https://blog.csdn.net/chwshuang/article/details/52350518)","source":"_posts/hello-world.md","raw":"---\ntitle: Hexo blog使用指南\ncategories:\n  - 前端\ntags:\n  - hexo\n  - 前端\ncomments: false\nabbrlink: 7251\ndate: 2018-12-27 02:04:27\nimg: \n---\n\nWhat?\nHexo 是一个快速、简洁且高效的博客框架。可以使用markdown 解析成文章，在几秒内，即可利用靓丽的主题生成静态网页。\nWhy?\n笔记需要整理\nHow?\ngithub 创建 [charblus.github.io](charblus.github.io) 项目\n使用markdown 记录开发笔记和文章\n日复一日\n\n链接：\n[Hexo官方网站](https://hexo.io/)\n[Hexo官方主题](https://hexo.io/themes/)\n\n## 快速开始\n\n```bash\nhexo n \"hexo-post\"\nhexo g\nhexo s\nhexo d\n\n```\n\n### 创建一篇文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### 本地启动\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### 生成静态html \n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### 部署远程服务\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n\n### hexo 命令简写\n\n```bash\nhexo s == hexo server   用于生成静态文件\nhexo g == hexo generate   用于启动服务器，主要用来本地预览\nhexo d == hexo deploy    用于将本地文件发布到github等git仓库上\nhexo n == hexo new     用于新建一篇名为“my article”的文章 `hexo n “my article”`\n```\n\n### 创建菜单\n* sourse 添加文件夹 `_name` , 文件中添加index.md文件\n* 修改主题的配置文件_config.yml,增加一个标签页菜单\n\n\n### 参考文章\n   [https://hexo.io/zh-cn/docs/index.html](https://hexo.io/zh-cn/docs/index.html)\n\n   [HEXO搭建个人博客](https://blog.csdn.net/flappy8023/article/details/72453350)\n\n   [在Github上面搭建Hexo博客（一）：部署到Github](http://www.cnblogs.com/cherishzy/p/5694658.html)\n\n   [Hexo在Github中搭建博客系统(4)建菜单写文章](https://blog.csdn.net/chwshuang/article/details/52350518)","slug":"hello-world","published":1,"updated":"2019-03-26T06:07:18.889Z","layout":"post","photos":[],"link":"","_id":"cjtpdplx0002w3yxy31nsfwkq","content":"<p>What?<br>Hexo 是一个快速、简洁且高效的博客框架。可以使用markdown 解析成文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>Why?<br>笔记需要整理<br>How?<br>github 创建 <a href=\"charblus.github.io\">charblus.github.io</a> 项目<br>使用markdown 记录开发笔记和文章<br>日复一日</p>\n<p>链接：<br><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官方网站</a><br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">Hexo官方主题</a></p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n <span class=\"string\">\"hexo-post\"</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建一篇文章\"><a href=\"#创建一篇文章\" class=\"headerlink\" title=\"创建一篇文章\"></a>创建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态html\"><a href=\"#生成静态html\" class=\"headerlink\" title=\"生成静态html\"></a>生成静态html</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"部署远程服务\"><a href=\"#部署远程服务\" class=\"headerlink\" title=\"部署远程服务\"></a>部署远程服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"hexo-命令简写\"><a href=\"#hexo-命令简写\" class=\"headerlink\" title=\"hexo 命令简写\"></a>hexo 命令简写</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s == hexo server   用于生成静态文件</span><br><span class=\"line\">hexo g == hexo generate   用于启动服务器，主要用来本地预览</span><br><span class=\"line\">hexo d == hexo deploy    用于将本地文件发布到github等git仓库上</span><br><span class=\"line\">hexo n == hexo new     用于新建一篇名为“my article”的文章 `hexo n “my article”`</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建菜单\"><a href=\"#创建菜单\" class=\"headerlink\" title=\"创建菜单\"></a>创建菜单</h3><ul>\n<li>sourse 添加文件夹 <code>_name</code> , 文件中添加index.md文件</li>\n<li>修改主题的配置文件_config.yml,增加一个标签页菜单</li>\n</ul>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p>   <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/index.html</a></p>\n<p>   <a href=\"https://blog.csdn.net/flappy8023/article/details/72453350\" target=\"_blank\" rel=\"noopener\">HEXO搭建个人博客</a></p>\n<p>   <a href=\"http://www.cnblogs.com/cherishzy/p/5694658.html\" target=\"_blank\" rel=\"noopener\">在Github上面搭建Hexo博客（一）：部署到Github</a></p>\n<p>   <a href=\"https://blog.csdn.net/chwshuang/article/details/52350518\" target=\"_blank\" rel=\"noopener\">Hexo在Github中搭建博客系统(4)建菜单写文章</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>What?<br>Hexo 是一个快速、简洁且高效的博客框架。可以使用markdown 解析成文章，在几秒内，即可利用靓丽的主题生成静态网页。<br>Why?<br>笔记需要整理<br>How?<br>github 创建 <a href=\"charblus.github.io\">charblus.github.io</a> 项目<br>使用markdown 记录开发笔记和文章<br>日复一日</p>\n<p>链接：<br><a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo官方网站</a><br><a href=\"https://hexo.io/themes/\" target=\"_blank\" rel=\"noopener\">Hexo官方主题</a></p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n <span class=\"string\">\"hexo-post\"</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建一篇文章\"><a href=\"#创建一篇文章\" class=\"headerlink\" title=\"创建一篇文章\"></a>创建一篇文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"本地启动\"><a href=\"#本地启动\" class=\"headerlink\" title=\"本地启动\"></a>本地启动</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"生成静态html\"><a href=\"#生成静态html\" class=\"headerlink\" title=\"生成静态html\"></a>生成静态html</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"部署远程服务\"><a href=\"#部署远程服务\" class=\"headerlink\" title=\"部署远程服务\"></a>部署远程服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h3 id=\"hexo-命令简写\"><a href=\"#hexo-命令简写\" class=\"headerlink\" title=\"hexo 命令简写\"></a>hexo 命令简写</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s == hexo server   用于生成静态文件</span><br><span class=\"line\">hexo g == hexo generate   用于启动服务器，主要用来本地预览</span><br><span class=\"line\">hexo d == hexo deploy    用于将本地文件发布到github等git仓库上</span><br><span class=\"line\">hexo n == hexo new     用于新建一篇名为“my article”的文章 `hexo n “my article”`</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建菜单\"><a href=\"#创建菜单\" class=\"headerlink\" title=\"创建菜单\"></a>创建菜单</h3><ul>\n<li>sourse 添加文件夹 <code>_name</code> , 文件中添加index.md文件</li>\n<li>修改主题的配置文件_config.yml,增加一个标签页菜单</li>\n</ul>\n<h3 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h3><p>   <a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/docs/index.html</a></p>\n<p>   <a href=\"https://blog.csdn.net/flappy8023/article/details/72453350\" target=\"_blank\" rel=\"noopener\">HEXO搭建个人博客</a></p>\n<p>   <a href=\"http://www.cnblogs.com/cherishzy/p/5694658.html\" target=\"_blank\" rel=\"noopener\">在Github上面搭建Hexo博客（一）：部署到Github</a></p>\n<p>   <a href=\"https://blog.csdn.net/chwshuang/article/details/52350518\" target=\"_blank\" rel=\"noopener\">Hexo在Github中搭建博客系统(4)建菜单写文章</a></p>\n"},{"title":"vue-notice","comments":0,"abbrlink":892,"date":"2019-01-06T19:53:03.000Z","img":null,"_content":"","source":"_posts/vue-notice.md","raw":"---\ntitle: vue-notice\ncategories:\n  - 分类1\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 892\ndate: 2019-01-07 03:53:03\nimg:\n---\n","slug":"vue-notice","published":1,"updated":"2019-01-21T04:15:22.610Z","layout":"post","photos":[],"link":"","_id":"cjtpdplx2002z3yxyxn7ctjvp","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"前端面试interview之一面","comments":0,"abbrlink":11745,"date":"2019-03-26T10:34:27.000Z","img":null,"_content":"\n一面：\n页面布局类。  \ncss盒模型  \ndom事件类   \nHTTP协议。\n原型链类。  \n面向对象 \n通信类\n前端安全类。\n前端算法类\n\n#### 页面布局类\n1. 题目：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应\n方案： 第一浮动，第二绝对定位，第三个flexbox弹性布局。第四种：表格布局。第五种：网格布局\ncode: \n* 在生成代码之前，需要对初始样式清除，html*{padding：0；margin：0}，设置高度。\n\n* section标签包裹，article做包围框。div.left+div.right+div.center可以快速生成。中间部分写一点内容撑开。注意 .layout.float .left 是什么意思。它指的是ID为.layout.float下的子元素.left。中间没有逗号。\n\n#### css盒模型 \n\n根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。\n[盒子模型（标准盒模型、怪异盒模型）和 css3指定盒子模型种类的box-sizing属性](https://www.imooc.com/article/68238)\n\n#### dom事件类   \n#### HTTP协议。\n#### 原型链类。  \n#### 面向对象 \n#### 通信类\n#### 前端安全类。\n#### 前端算法类\n","source":"_posts/interview.md","raw":"---\ntitle: 前端面试interview之一面\ncategories:\n  - 前端\n  - 分类2\ntags:\n  - 标签1\n  - 标签2\ncomments: false\nabbrlink: 11745\ndate: 2019-03-26 18:34:27\nimg:\n---\n\n一面：\n页面布局类。  \ncss盒模型  \ndom事件类   \nHTTP协议。\n原型链类。  \n面向对象 \n通信类\n前端安全类。\n前端算法类\n\n#### 页面布局类\n1. 题目：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应\n方案： 第一浮动，第二绝对定位，第三个flexbox弹性布局。第四种：表格布局。第五种：网格布局\ncode: \n* 在生成代码之前，需要对初始样式清除，html*{padding：0；margin：0}，设置高度。\n\n* section标签包裹，article做包围框。div.left+div.right+div.center可以快速生成。中间部分写一点内容撑开。注意 .layout.float .left 是什么意思。它指的是ID为.layout.float下的子元素.left。中间没有逗号。\n\n#### css盒模型 \n\n根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。\n[盒子模型（标准盒模型、怪异盒模型）和 css3指定盒子模型种类的box-sizing属性](https://www.imooc.com/article/68238)\n\n#### dom事件类   \n#### HTTP协议。\n#### 原型链类。  \n#### 面向对象 \n#### 通信类\n#### 前端安全类。\n#### 前端算法类\n","slug":"interview","published":1,"updated":"2019-03-26T11:03:10.657Z","_id":"cjtpn82qy000252xyzhma4rrc","layout":"post","photos":[],"link":"","content":"<p>一面：<br>页面布局类。<br>css盒模型<br>dom事件类<br>HTTP协议。<br>原型链类。<br>面向对象<br>通信类<br>前端安全类。<br>前端算法类</p>\n<h4 id=\"页面布局类\"><a href=\"#页面布局类\" class=\"headerlink\" title=\"页面布局类\"></a>页面布局类</h4><ol>\n<li>题目：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应<br>方案： 第一浮动，第二绝对定位，第三个flexbox弹性布局。第四种：表格布局。第五种：网格布局<br>code: </li>\n</ol>\n<ul>\n<li><p>在生成代码之前，需要对初始样式清除，html*{padding：0；margin：0}，设置高度。</p>\n</li>\n<li><p>section标签包裹，article做包围框。div.left+div.right+div.center可以快速生成。中间部分写一点内容撑开。注意 .layout.float .left 是什么意思。它指的是ID为.layout.float下的子元素.left。中间没有逗号。</p>\n</li>\n</ul>\n<h4 id=\"css盒模型\"><a href=\"#css盒模型\" class=\"headerlink\" title=\"css盒模型\"></a>css盒模型</h4><p>根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。<br><a href=\"https://www.imooc.com/article/68238\" target=\"_blank\" rel=\"noopener\">盒子模型（标准盒模型、怪异盒模型）和 css3指定盒子模型种类的box-sizing属性</a></p>\n<h4 id=\"dom事件类\"><a href=\"#dom事件类\" class=\"headerlink\" title=\"dom事件类\"></a>dom事件类</h4><h4 id=\"HTTP协议。\"><a href=\"#HTTP协议。\" class=\"headerlink\" title=\"HTTP协议。\"></a>HTTP协议。</h4><h4 id=\"原型链类。\"><a href=\"#原型链类。\" class=\"headerlink\" title=\"原型链类。\"></a>原型链类。</h4><h4 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h4><h4 id=\"通信类\"><a href=\"#通信类\" class=\"headerlink\" title=\"通信类\"></a>通信类</h4><h4 id=\"前端安全类。\"><a href=\"#前端安全类。\" class=\"headerlink\" title=\"前端安全类。\"></a>前端安全类。</h4><h4 id=\"前端算法类\"><a href=\"#前端算法类\" class=\"headerlink\" title=\"前端算法类\"></a>前端算法类</h4>","site":{"data":{}},"excerpt":"","more":"<p>一面：<br>页面布局类。<br>css盒模型<br>dom事件类<br>HTTP协议。<br>原型链类。<br>面向对象<br>通信类<br>前端安全类。<br>前端算法类</p>\n<h4 id=\"页面布局类\"><a href=\"#页面布局类\" class=\"headerlink\" title=\"页面布局类\"></a>页面布局类</h4><ol>\n<li>题目：假设高度已知，请写出三栏布局，其中左栏、右栏宽度各位300px，中间自适应<br>方案： 第一浮动，第二绝对定位，第三个flexbox弹性布局。第四种：表格布局。第五种：网格布局<br>code: </li>\n</ol>\n<ul>\n<li><p>在生成代码之前，需要对初始样式清除，html*{padding：0；margin：0}，设置高度。</p>\n</li>\n<li><p>section标签包裹，article做包围框。div.left+div.right+div.center可以快速生成。中间部分写一点内容撑开。注意 .layout.float .left 是什么意思。它指的是ID为.layout.float下的子元素.left。中间没有逗号。</p>\n</li>\n</ul>\n<h4 id=\"css盒模型\"><a href=\"#css盒模型\" class=\"headerlink\" title=\"css盒模型\"></a>css盒模型</h4><p>根据 W3C 的规范，元素内容占据的空间是由 width 属性设置的，而内容周围的 padding 和 border 值是另外计算的。不幸的是，IE5.X 和 6 在怪异模式中使用自己的非标准模型。这些浏览器的 width 属性不是内容的宽度，而是内容、内边距和边框的宽度的总和。<br><a href=\"https://www.imooc.com/article/68238\" target=\"_blank\" rel=\"noopener\">盒子模型（标准盒模型、怪异盒模型）和 css3指定盒子模型种类的box-sizing属性</a></p>\n<h4 id=\"dom事件类\"><a href=\"#dom事件类\" class=\"headerlink\" title=\"dom事件类\"></a>dom事件类</h4><h4 id=\"HTTP协议。\"><a href=\"#HTTP协议。\" class=\"headerlink\" title=\"HTTP协议。\"></a>HTTP协议。</h4><h4 id=\"原型链类。\"><a href=\"#原型链类。\" class=\"headerlink\" title=\"原型链类。\"></a>原型链类。</h4><h4 id=\"面向对象\"><a href=\"#面向对象\" class=\"headerlink\" title=\"面向对象\"></a>面向对象</h4><h4 id=\"通信类\"><a href=\"#通信类\" class=\"headerlink\" title=\"通信类\"></a>通信类</h4><h4 id=\"前端安全类。\"><a href=\"#前端安全类。\" class=\"headerlink\" title=\"前端安全类。\"></a>前端安全类。</h4><h4 id=\"前端算法类\"><a href=\"#前端算法类\" class=\"headerlink\" title=\"前端算法类\"></a>前端算法类</h4>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjtpdplvm00063yxy94tknyp3","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplw9000v3yxy7uvlqq8x"},{"post_id":"cjtpdplvm00063yxy94tknyp3","category_id":"cjtpdplw4000m3yxykqbr6xfz","_id":"cjtpdplwa000x3yxy6t96ng3k"},{"post_id":"cjtpdplvd00013yxyd09kkb7u","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwb00133yxym0pxx9ri"},{"post_id":"cjtpdplvd00013yxyd09kkb7u","category_id":"cjtpdplw9000u3yxye9b9dszr","_id":"cjtpdplwc00173yxykk9e4cid"},{"post_id":"cjtpdplvi00033yxy50ili785","category_id":"cjtpdplvu000b3yxyzmlt8osk","_id":"cjtpdplwe001e3yxyn1qcxwok"},{"post_id":"cjtpdplvi00033yxy50ili785","category_id":"cjtpdplwd00183yxyplm6prr0","_id":"cjtpdplwf001h3yxyl8m9d1fc"},{"post_id":"cjtpdplvk00053yxyy6yitmu0","category_id":"cjtpdplw0000h3yxywgksosoc","_id":"cjtpdplwi001r3yxy8wam536n"},{"post_id":"cjtpdplvk00053yxyy6yitmu0","category_id":"cjtpdplwg001k3yxy53wyrm20","_id":"cjtpdplwk001u3yxy0sf4bmdt"},{"post_id":"cjtpdplw3000l3yxywduknkt3","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwl001x3yxyvyyh9qwj"},{"post_id":"cjtpdplw3000l3yxywduknkt3","category_id":"cjtpdplwh001n3yxy7gl9jeqr","_id":"cjtpdplwm001z3yxy1v8fx35i"},{"post_id":"cjtpdplw5000n3yxyf2kl9o8m","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwm00223yxyozxw3vqz"},{"post_id":"cjtpdplw5000n3yxyf2kl9o8m","category_id":"cjtpdplwj001s3yxyoyih7vu6","_id":"cjtpdplwn00243yxyrtd9ja34"},{"post_id":"cjtpdplw6000p3yxy0thrse3r","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplwo00283yxyswub0821"},{"post_id":"cjtpdplw6000p3yxy0thrse3r","category_id":"cjtpdplwj001s3yxyoyih7vu6","_id":"cjtpdplwo002a3yxyv55d3j2f"},{"post_id":"cjtpdplvr00083yxyj2gak14v","category_id":"cjtpdplw0000h3yxywgksosoc","_id":"cjtpdplwo002d3yxyrvhoy0c0"},{"post_id":"cjtpdplvr00083yxyj2gak14v","category_id":"cjtpdplwg001k3yxy53wyrm20","_id":"cjtpdplwp002g3yxyr0mvwp6m"},{"post_id":"cjtpdplvt000a3yxyzmgt7xib","category_id":"cjtpdplwa000z3yxyhxxiysmw","_id":"cjtpdplwq002j3yxyh9y05qbu"},{"post_id":"cjtpdplvt000a3yxyzmgt7xib","category_id":"cjtpdplwn00273yxy2kw1m3pk","_id":"cjtpdplwq002l3yxyqalehuuo"},{"post_id":"cjtpdplvv000d3yxyn3cau0s4","category_id":"cjtpdplw0000h3yxywgksosoc","_id":"cjtpdplwq002n3yxyo2bgyjjw"},{"post_id":"cjtpdplvv000d3yxyn3cau0s4","category_id":"cjtpdplwg001k3yxy53wyrm20","_id":"cjtpdplwr002p3yxyzre9ujll"},{"post_id":"cjtpdplvx000f3yxysrytgqkn","category_id":"cjtpdplwe001c3yxyk8c0inic","_id":"cjtpdplwr002q3yxy8dkynu9f"},{"post_id":"cjtpdplvx000f3yxysrytgqkn","category_id":"cjtpdplwq002i3yxy8wi77j1q","_id":"cjtpdplwr002r3yxy4tyinf8i"},{"post_id":"cjtpdplw0000i3yxyi013wbom","category_id":"cjtpdplwe001f3yxyk7g8xcl4","_id":"cjtpdplws002s3yxykbp9vkd8"},{"post_id":"cjtpdplw0000i3yxyi013wbom","category_id":"cjtpdplwr002o3yxy5l2juepx","_id":"cjtpdplws002t3yxyl5a6hbj7"},{"post_id":"cjtpdplx0002w3yxy31nsfwkq","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpdplx500313yxyspkgs1bk"},{"post_id":"cjtpdplx2002z3yxyxn7ctjvp","category_id":"cjtpdplw0000h3yxywgksosoc","_id":"cjtpdplx600353yxyqbm18n0s"},{"post_id":"cjtpdplx2002z3yxyxn7ctjvp","category_id":"cjtpdplwg001k3yxy53wyrm20","_id":"cjtpdplx700373yxyl2ztkv9h"},{"post_id":"cjtpdplwy002u3yxycdwp2qzt","category_id":"cjtpdplx2002x3yxynsysh5fe","_id":"cjtpdplxa003b3yxyx5u9dsjs"},{"post_id":"cjtpdplwy002u3yxycdwp2qzt","category_id":"cjtpdplx600343yxyy5r89vmr","_id":"cjtpdplxa003c3yxy4631a8y4"},{"post_id":"cjtpdplv800003yxy7zw14pm5","category_id":"cjtpdtwe9000052xycog6p1j0","_id":"cjtpdtwea000152xyjqdv64d9"},{"post_id":"cjtpn82qy000252xyzhma4rrc","category_id":"cjtpdplvg00023yxyiy80wg5b","_id":"cjtpnjouj000752xybvoe9rpr"},{"post_id":"cjtpn82qy000252xyzhma4rrc","category_id":"cjtpdplwj001s3yxyoyih7vu6","_id":"cjtpnjouk000852xyru1bzqah"}],"PostTag":[{"post_id":"cjtpdplvd00013yxyd09kkb7u","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplvz000g3yxy5yz6h852"},{"post_id":"cjtpdplvd00013yxyd09kkb7u","tag_id":"cjtpdplvs00093yxyii33d510","_id":"cjtpdplw2000j3yxy9rln33zp"},{"post_id":"cjtpdplvi00033yxy50ili785","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplw7000q3yxylcc56174"},{"post_id":"cjtpdplvi00033yxy50ili785","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplw8000s3yxyo3euj43n"},{"post_id":"cjtpdplvk00053yxyy6yitmu0","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpdplwa000y3yxytfwi5gsx"},{"post_id":"cjtpdplvk00053yxyy6yitmu0","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplwa00103yxyq3nwlbeb"},{"post_id":"cjtpdplvm00063yxy94tknyp3","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplwb00123yxykia6xitk"},{"post_id":"cjtpdplvm00063yxy94tknyp3","tag_id":"cjtpdplvs00093yxyii33d510","_id":"cjtpdplwc00153yxyiygm1psn"},{"post_id":"cjtpdplvr00083yxyj2gak14v","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpdplwd001a3yxya4seyq42"},{"post_id":"cjtpdplvr00083yxyj2gak14v","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplwd001b3yxy8hex37jr"},{"post_id":"cjtpdplvt000a3yxyzmgt7xib","tag_id":"cjtpdplwd00193yxy0cr6su3d","_id":"cjtpdplwf001i3yxy5bpdilo2"},{"post_id":"cjtpdplvt000a3yxyzmgt7xib","tag_id":"cjtpdplwe001d3yxy4wveshvh","_id":"cjtpdplwf001j3yxyj8qmse00"},{"post_id":"cjtpdplvv000d3yxyn3cau0s4","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpdplwh001o3yxybqrwane0"},{"post_id":"cjtpdplvv000d3yxyn3cau0s4","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplwh001p3yxywi84crij"},{"post_id":"cjtpdplvx000f3yxysrytgqkn","tag_id":"cjtpdplwd00193yxy0cr6su3d","_id":"cjtpdplwj001t3yxy5z26vmbg"},{"post_id":"cjtpdplvx000f3yxysrytgqkn","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplwk001v3yxyg18k8ep0"},{"post_id":"cjtpdplw0000i3yxyi013wbom","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpdplwm00233yxyd330sy8b"},{"post_id":"cjtpdplw0000i3yxyi013wbom","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplwn00253yxyqmom640h"},{"post_id":"cjtpdplw3000l3yxywduknkt3","tag_id":"cjtpdplwm00203yxyz92enzi6","_id":"cjtpdplwo00293yxy02hthe1v"},{"post_id":"cjtpdplw3000l3yxywduknkt3","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplwo002b3yxy8xi56wj0"},{"post_id":"cjtpdplw5000n3yxyf2kl9o8m","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplwp002f3yxyg1zef4x8"},{"post_id":"cjtpdplw5000n3yxyf2kl9o8m","tag_id":"cjtpdplwn00263yxy3smb5pm3","_id":"cjtpdplwp002h3yxytew3gqpb"},{"post_id":"cjtpdplw6000p3yxy0thrse3r","tag_id":"cjtpdplwo002c3yxy6fqqa2om","_id":"cjtpdplwq002k3yxyhpsmictm"},{"post_id":"cjtpdplw6000p3yxy0thrse3r","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplwq002m3yxy1sl2epqq"},{"post_id":"cjtpdplx2002z3yxyxn7ctjvp","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpdplx500303yxywf8rlzgj"},{"post_id":"cjtpdplx2002z3yxyxn7ctjvp","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpdplx600333yxyibzebrju"},{"post_id":"cjtpdplwy002u3yxycdwp2qzt","tag_id":"cjtpdplx2002y3yxy7t3yqsxx","_id":"cjtpdplx700363yxygjfzeykz"},{"post_id":"cjtpdplwy002u3yxycdwp2qzt","tag_id":"cjtpdplwe001d3yxy4wveshvh","_id":"cjtpdplx700383yxy45rusth6"},{"post_id":"cjtpdplx0002w3yxy31nsfwkq","tag_id":"cjtpdplx500323yxy2phvigcz","_id":"cjtpdplx800393yxyj5y7ae9h"},{"post_id":"cjtpdplx0002w3yxy31nsfwkq","tag_id":"cjtpdplvj00043yxy3lheij4t","_id":"cjtpdplxa003a3yxyevj8rm5g"},{"post_id":"cjtpn82qy000252xyzhma4rrc","tag_id":"cjtpdplw6000o3yxywdz2lggk","_id":"cjtpn82r9000352xy7s8dm5ms"},{"post_id":"cjtpn82qy000252xyzhma4rrc","tag_id":"cjtpdplw3000k3yxyylff1zkt","_id":"cjtpn82ra000452xyi4rsiwue"}],"Tag":[{"name":"前端","_id":"cjtpdplvj00043yxy3lheij4t"},{"name":"angular","_id":"cjtpdplvs00093yxyii33d510"},{"name":"标签2","_id":"cjtpdplw3000k3yxyylff1zkt"},{"name":"标签1","_id":"cjtpdplw6000o3yxywdz2lggk"},{"name":"git","_id":"cjtpdplwd00193yxy0cr6su3d"},{"name":"工具","_id":"cjtpdplwe001d3yxy4wveshvh"},{"name":"node","_id":"cjtpdplwm00203yxyz92enzi6"},{"name":"css","_id":"cjtpdplwn00263yxy3smb5pm3"},{"name":"javaScript","_id":"cjtpdplwo002c3yxy6fqqa2om"},{"name":"命令行","_id":"cjtpdplx2002y3yxy7t3yqsxx"},{"name":"hexo","_id":"cjtpdplx500323yxy2phvigcz"}]}}